<?php

namespace App\Common\Model\Order;

use App\Common\Model\AutoGenerated\order_recharge_sup;
use App\Common\Model\Payment\UserMoneyLog;
use App\Common\Model\Product\Product;
use App\Common\Model\User\SubAccount;
use App\Common\Model\User\SupplierAccount;
use App\Platform;

class OrderRechargeSup extends order_recharge_sup {

    // 充值状态
    //'0'=>'未知','1'=>'待付款','2'=>'待提单','3'=>'已提单','4'=>'已验单','5'=>'提交可疑','6'=>'提交失败','7'=>'充值中','8'=>'充值可疑','9'=>'充值成功','10'=>'充值失败','11'=>'已退款','12'=>'已取消','13'=>'待处理'
    //0 => 未知 , 1 => 待付款 , 2 => 待提单 , 3 => 已提单 , 4 => 已验单 , 5 => 提交可疑 , 6 => 提交失败 , 7 => 充值中 , 8 => 充值可疑 , 9 => 充值成功 (系统) , 10 => 充值成功 (供应商人工) , 11 => 充值成功 (总后台人工) , 12 => 充值失败 (系统) , 13 => 充值失败 (供应商人工) , 14 => 充值失败 (总后台人工) , 15 => 已退款 , 16 => 已取消 , 17 => 待处理

    const STATUS_UNPAID              = 'UNPAID';
    const STATUS_PENDING             = 'PENDING';
    const STATUS_FETCHED             = 'FETCHED';
    const STATUS_SUBMIT_SUSPICIOUS   = 'SUBMIT_SUSPICIOUS';
    const STATUS_SUBMIT_FAILED       = 'SUBMIT_FAILED';
    const STATUS_CHECK_SUCCEED       = 'CHECK_SUCCEED';
    const STATUS_CHECK_FAILED        = 'CHECK_FAILED';
    const STATUS_IN_PROGRESS         = 'IN_PROGRESS';
    const STATUS_RECHARGE_SUSPICIOUS = 'RECHARGE_SUSPICIOUS';
    const STATUS_SUCCEED_SYS         = 'SUCCEED_SYS';
    const STATUS_SUCCEED_SUP         = 'SUCCEED_SUP';
    const STATUS_SUCCEED_ADMIN       = 'SUCCEED_ADMIN';
    const STATUS_FAILED_SYS          = 'FAILED_SYS';
    const STATUS_FAILED_SUP          = 'FAILED_SUP';
    const STATUS_FAILED_ADMIN        = 'FAILED_ADMIN';
    const STATUS_REFUNDED            = 'REFUNDED';
    const STATUS_CANCELED            = 'CANCELED';
    const STATUS_UNPROCESSED         = 'UNPROCESSED';

    const RECHARGE_STATUS = [
        self::STATUS_UNPAID              => '待付款',
        self::STATUS_PENDING             => '待提单',
        self::STATUS_FETCHED             => '已提单',

        self::STATUS_SUBMIT_SUSPICIOUS   => '提交可疑',
        self::STATUS_SUBMIT_FAILED       => '提交失败',

        self::STATUS_CHECK_SUCCEED       => '已验单，可充值',
        self::STATUS_CHECK_FAILED        => '已验单，不可充值',

        self::STATUS_IN_PROGRESS         => '充值中',

        self::STATUS_RECHARGE_SUSPICIOUS => '充值可疑',

        self::STATUS_SUCCEED_SYS         => '充值成功（系统）',
        self::STATUS_SUCCEED_SUP         => '充值成功（供应商人工）',
        self::STATUS_SUCCEED_ADMIN       => '充值成功（总后台人工）',

        self::STATUS_FAILED_SYS          => '充值失败（系统）',
        self::STATUS_FAILED_SUP          => '充值失败（供应商人工）',
        self::STATUS_FAILED_ADMIN        => '充值失败（总后台人工）',
    ];

    const RECHARGE_SUCCEED_STATUSES = [
        self::STATUS_SUCCEED_SYS  ,
        self::STATUS_SUCCEED_SUP  ,
        self::STATUS_SUCCEED_ADMIN,
    ];

    const RECHARGE_FAILED_STATUSES = [
        self::STATUS_SUBMIT_FAILED,
        self::STATUS_CHECK_FAILED,
        self::STATUS_FAILED_SYS  ,
        self::STATUS_FAILED_SUP  ,
        self::STATUS_FAILED_ADMIN,
    ];

    const RECHARGE_STATUS_TRANSITIONS = [
        self::STATUS_UNPAID => [self::STATUS_PENDING],

        self::STATUS_PENDING       => [self::STATUS_FETCHED, self::STATUS_SUCCEED_ADMIN, self::STATUS_FAILED_ADMIN],
        self::STATUS_FETCHED       => [self::STATUS_CHECK_SUCCEED, self::STATUS_CHECK_FAILED, self::STATUS_FETCHED, self::STATUS_SUCCEED_ADMIN, self::STATUS_FAILED_ADMIN],
        self::STATUS_CHECK_SUCCEED => [self::STATUS_SUBMIT_SUSPICIOUS,
                                             self::STATUS_SUBMIT_FAILED,
                                             self::STATUS_RECHARGE_SUSPICIOUS,
                                             self::STATUS_IN_PROGRESS,
                                             self::STATUS_SUCCEED_SYS,
                                             self::STATUS_FAILED_SYS,
                                             self::STATUS_SUCCEED_ADMIN,
                                             self::STATUS_FAILED_ADMIN


        ],
        self::STATUS_CHECK_FAILED        => [self::STATUS_SUCCEED_ADMIN, self::STATUS_FAILED_ADMIN],
        self::STATUS_SUBMIT_SUSPICIOUS   => [self::STATUS_SUCCEED_ADMIN, self::STATUS_FAILED_ADMIN],
        self::STATUS_SUBMIT_FAILED       => [self::STATUS_SUCCEED_ADMIN, self::STATUS_FAILED_ADMIN],
        self::STATUS_RECHARGE_SUSPICIOUS => [self::STATUS_SUCCEED_ADMIN, self::STATUS_FAILED_ADMIN],
        self::STATUS_IN_PROGRESS         => [self::STATUS_SUCCEED_SYS, self::STATUS_FAILED_SYS, self::STATUS_SUCCEED_ADMIN, self::STATUS_FAILED_ADMIN],
        self::STATUS_SUCCEED_SYS         => [self::STATUS_FAILED_ADMIN],
        self::STATUS_SUCCEED_SUP         => [self::STATUS_FAILED_ADMIN],
        self::STATUS_SUCCEED_ADMIN       => [self::STATUS_FAILED_ADMIN],
        self::STATUS_FAILED_SYS          => [self::STATUS_SUCCEED_ADMIN],
        self::STATUS_FAILED_SUP          => [self::STATUS_SUCCEED_ADMIN],
        self::STATUS_FAILED_ADMIN        => [self::STATUS_SUCCEED_ADMIN],
    ];

    //向供应商展示的充值状态
    const SHOW_SUPPLIER_RECHARGE_STATUS = [
        //充值成功（系统）
        self::STATUS_SUCCEED_SYS   => '充值成功',
        //充值成功（供应商人工）
        self::STATUS_SUCCEED_SUP   => '充值成功',
        //充值成功（总后台人工）
        self::STATUS_SUCCEED_ADMIN => '充值成功',
        //充值失败（系统）
        self::STATUS_FAILED_SYS    => '充值失败',
        //充值失败（供应商人工）
        self::STATUS_FAILED_SUP    => '充值失败',
        //充值失败（总后台人工）
        self::STATUS_FAILED_ADMIN  => '充值失败',
    ];

    const SHOW_SUPPLIER_RECHARGE_STATUS_ARRAY = [
        self::STATUS_UNPAID                                                                          => '待付款',
        self::STATUS_PENDING                                                                         => '待提单',
        self::STATUS_FETCHED                                                                         => '已提单',
        self::STATUS_CHECK_SUCCEED                                                                   => '已验单，可充值',
        self::STATUS_CHECK_FAILED                                                                    => '已验单，不可充值',
        self::STATUS_SUBMIT_SUSPICIOUS                                                               => '提交可疑',
        self::STATUS_SUBMIT_FAILED                                                                   => '提交失败',
        self::STATUS_IN_PROGRESS                                                                     => '充值中',
        self::STATUS_RECHARGE_SUSPICIOUS                                                             => '充值可疑',
        self::STATUS_SUCCEED_SYS . ',' . self::STATUS_SUCCEED_SUP . ',' . self::STATUS_SUCCEED_ADMIN => '充值成功',
        self::STATUS_FAILED_SYS . ',' . self::STATUS_FAILED_SUP . ',' . self::STATUS_FAILED_ADMIN    => '充值失败',
        self::STATUS_REFUNDED                                                                        => '已退款',
        self::STATUS_CANCELED                                                                        => '已取消',
        self::STATUS_UNPROCESSED                                                                     => '待处理',

    ];

    /*// 结算状态，0未知，1未结算，2已结算，3已退款

    const SETTLE_STATUS_PENDING = 1;
    const SETTLE_STATUS_DONE    = 2;
    const SETTLE_STATUS_REFUND  = 3;

    const SETTLE_STATUS = [
        self::SETTLE_STATUS_PENDING => '未结算',
        self::SETTLE_STATUS_DONE    => '已结算',
        self::SETTLE_STATUS_REFUND  => '已退款'
    ];*/

    //新的结算状态
    const SETTLE_STATUS_PENDING  = 'PENDING'; // 待结算19
    const SETTLE_STATUS_UNPAID   = 'UNPAID';  // 不付款结算235711
    const SETTLE_STATUS_PAID     = 'PAID';    // 已付款结算4610
    const SETTLE_STATUS_REFUNDED = 'REFUNDED';  // 退款结算812

    const SETTLE_STATUSES = [
        self::SETTLE_STATUS_PENDING  => '待结算',
        self::SETTLE_STATUS_UNPAID   => '不付款结算',
        self::SETTLE_STATUS_PAID     => '已付款结算',
        self::SETTLE_STATUS_REFUNDED => '退款结算',
    ];

    // 充值单位1=>个,2=>月,3=>元
    const UNIT_NUM      = 1;
    const UNIT_MONTH    = 2;
    const UNIT_RMB_YUAN = 3;

    public function set_recharge_status($new_status) {
        if(!in_array($new_status, self::RECHARGE_STATUS_TRANSITIONS[$this->recharge_status])) {
            throw new \InvalidArgumentException(sprintf('当前SUP订单状态 [%s] 不能变化为状态 [%s]', $this->recharge_status, $new_status));
        }

        $this->assign_attribute('recharge_status', $new_status);
        $this->last_recharge_status_time = time();

        if($new_status === self::STATUS_SUBMIT_SUSPICIOUS) {
            $this->careful_status = 1;
        }

        // switch ($new_status) {
        // case self::STATUS_CHECK_FAILED:
        //     $this->settle_status = self::SETTLE_STATUS_CHECK_FAIL_UNPAID;
        //     break;
        // case self::STATUS_SUBMIT_FAILED:
        //     $this->settle_status = self::SETTLE_STATUS_UNPAID;
        //     break;
        // case self::STATUS_SUCCEED_SYS:
        //     $this->settle_status = self::SETTLE_STATUS_PAID;
        //     break;
        // case self::STATUS_FAILED_SYS:
        //     if($this->)
        //     $this->settle_status = self::SETTLE_STATUS_UNPAID;
        //     break;
        // case self::STATUS_SUCCEED_SUP:
        //     $this->settle_status = self::SETTLE_STATUS_PAID;
        //     break;
        // case self::STATUS_FAILED_SUP:
        //     $this->settle_status = self::SETTLE_STATUS_UNPAID;
        //     break;
        // }
    }

    // public function set_settle_status($new_status) {
    //     $map = self::RECHARGE_STATUS_TRANSITIONS[$this->settle_status];
    //     if(!isset($map[$new_status])) {
    //         throw new \InvalidArgumentException(sprintf('当前SUP订单结算状态 [%s] 不能变化为状态 [%s]', $this->settle_status, $new_status));
    //     }
    //
    //     $this->assign_attribute('recharge_status', $new_status);
    //     $this->last_recharge_status_time = time();
    // }

    /** @var OrderRecharge $order  */
    private $order = false; // 此 Sup 订单所属的充值主订单

    /** 获取此 Sup 订单所属的充值主订单
     * @return OrderRecharge|null
     */
    public function getOrder() {
        if($this->order === false) {
            $this->order = OrderRecharge::find($this->order_id);
        }

        return $this->order;
    }
    public function setOrder(OrderRecharge $order) {
        $this->order = $order;
    }

    /** @var Product $product */
    private $product = false; // 此Sup订单对应的商品
    public function getProduct() {
        if($this->product === false) {
            $this->product = Product::find($this->product_id);
        }

        return $this->product;
    }

    /** @var SubAccount $supplierAccount */
    private $supplierAccount = false; // 此Sup订单所属的供应商账号

    /**
     * 获取此Sup订单所属的供应商账号, 可能返回 null（在快速上线版中不存在供应商账号的情况下）
     * @return SubAccount|null
     */
    public function getSupplierAccount() {
        if(!$this->sup_user_id) {
            return null;
        }

        if($this->supplierAccount === false) {
            $this->supplierAccount = SupplierAccount::find($this->sup_user_id);
        }

        return $this->supplierAccount;
    }

    public function hasMoneyLogOfType($type) {
        return UserMoneyLog::exists(['order_id' => $this->order_id, 'user_id' => $this->sup_user_id, 'log_type' => $type]);
    }

    public function isSettled() {
        $lastLog = UserMoneyLog::last(['order_id' => $this->order_id, 'platform_id' => Platform::SUPPLIER, 'user_id' => $this->sup_user_id]);
        return $lastLog->log_type === UserMoneyLog::TYPE_ORDER_SETTLEMENT;
    }

    public function isRefunded() {
        $lastLog = UserMoneyLog::last(['order_id' => $this->order_id, 'platform_id' => Platform::SUPPLIER, 'user_id' => $this->sup_user_id]);
        return $lastLog->log_type === UserMoneyLog::TYPE_REFUND;
    }

    public function isLatestSupOrder() {
        $order = $this->getOrder();

        return $order && $order->current_sup_order_id === $this->id;
    }
}
