<?php
namespace App\Common\Model\AutoGenerated;

class BaseSetting {
    protected $attributes      = [];
    protected $dirtyAttributes = [];

    public function __get($key) {
        if(!isset($this->attributes[$key])) {
            throw new \InvalidArgumentException("无此设置项：" . static::SECTION_KEY . ".${key}");
        }

        return $this->attributes[$key];
    }

    public function __set($key, $value) {
        if(!isset($this->attributes[$key])) {
            throw new \InvalidArgumentException("无此设置项：" . static::SECTION_KEY . ".${key}");
        }

        if($this->attributes[$key] != $value) {
            $this->attributes[$key] = $value;
            $this->dirtyAttributes[$key] = $value;
        }
    }
    
    public function getDirtyAttributes() {
        return $this->dirtyAttributes;
    }
}

/**
  * @property $site_name
 */
class SystemSettingSection_system extends BaseSetting {
    const SECTION_KEY = 'system';
    const SECTION_NAME = '系统设置项';

    protected $attributes = array (
  'site_name' => '狐豆',
);

}

/**
  * @property $requires_identity
  * @property $activation_method
  * @property $identity_verify_method
  * @property $open_platform_create_account_method
  * @property $reseller_platform_create_account_method
  * @property $supplier_platform_create_account_method
 */
class SystemSettingSection_individual_registration_settings extends BaseSetting {
    const SECTION_KEY = 'individual_registration_settings';
    const SECTION_NAME = '个人通行证注册激活/平台账户自动开户';

    protected $attributes = array (
  'requires_identity' => 1,
  'activation_method' => 1,
  'identity_verify_method' => 1,
  'open_platform_create_account_method' => 1,
  'reseller_platform_create_account_method' => 1,
  'supplier_platform_create_account_method' => 1,
);

}

/**
  * @property $activation_method
  * @property $identity_verify_method
  * @property $open_platform_create_account_method
  * @property $reseller_platform_create_account_method
  * @property $supplier_platform_create_account_method
 */
class SystemSettingSection_business_registration_settings extends BaseSetting {
    const SECTION_KEY = 'business_registration_settings';
    const SECTION_NAME = '企业通行证注册激活/平台账户自动开户';

    protected $attributes = array (
  'activation_method' => 1,
  'identity_verify_method' => 1,
  'open_platform_create_account_method' => 1,
  'reseller_platform_create_account_method' => 1,
  'supplier_platform_create_account_method' => 1,
);

}

/**
  * @property $max_password_errors_per_day
  * @property $suspend_period
 */
class SystemSettingSection_passport_settings extends BaseSetting {
    const SECTION_KEY = 'passport_settings';
    const SECTION_NAME = '账密错误导致通行证冻结';

    protected $attributes = array (
  'max_password_errors_per_day' => 10,
  'suspend_period' => 10,
);

}

/**
  * @property $invite_employee_expires_time
 */
class SystemSettingSection_reseller_platform_settings extends BaseSetting {
    const SECTION_KEY = 'reseller_platform_settings';
    const SECTION_NAME = '代理商平台设置';

    protected $attributes = array (
  'invite_employee_expires_time' => 10,
);

}

/**
  * @property $withdraw_fee_rate_type
  * @property $withdraw_fee_rate
  * @property $max_withdraw_times_per_day
  * @property $min_withdraw_amount
  * @property $max_withdraw_amount
  * @property $invite_employee_expires_time
 */
class SystemSettingSection_supplier_platform_settings extends BaseSetting {
    const SECTION_KEY = 'supplier_platform_settings';
    const SECTION_NAME = '供应商平台设置';

    protected $attributes = array (
  'withdraw_fee_rate_type' => 10,
  'withdraw_fee_rate' => 10,
  'max_withdraw_times_per_day' => 10,
  'min_withdraw_amount' => 10,
  'max_withdraw_amount' => 10,
  'invite_employee_expires_time' => 10,
);

}

/**
 */
class BaseSystemSetting {
    /** @var \App\Common\Model\AutoGenerated\SystemSettingSection_system $system */
    public $system;
    /** @var \App\Common\Model\AutoGenerated\SystemSettingSection_individual_registration_settings $individual_registration_settings */
    public $individual_registration_settings;
    /** @var \App\Common\Model\AutoGenerated\SystemSettingSection_business_registration_settings $business_registration_settings */
    public $business_registration_settings;
    /** @var \App\Common\Model\AutoGenerated\SystemSettingSection_passport_settings $passport_settings */
    public $passport_settings;
    /** @var \App\Common\Model\AutoGenerated\SystemSettingSection_reseller_platform_settings $reseller_platform_settings */
    public $reseller_platform_settings;
    /** @var \App\Common\Model\AutoGenerated\SystemSettingSection_supplier_platform_settings $supplier_platform_settings */
    public $supplier_platform_settings;

    public function __construct() {
        $this->system= new SystemSettingSection_system();
        $this->individual_registration_settings= new SystemSettingSection_individual_registration_settings();
        $this->business_registration_settings= new SystemSettingSection_business_registration_settings();
        $this->passport_settings= new SystemSettingSection_passport_settings();
        $this->reseller_platform_settings= new SystemSettingSection_reseller_platform_settings();
        $this->supplier_platform_settings= new SystemSettingSection_supplier_platform_settings();
    }


    public function hasUpdate() {
        $vars = get_object_vars($this);
        
        /** @var BaseSetting $value */
        foreach ($vars as $key => $value) {
            if($value->getDirtyAttributes()) {
                return true;
            }
        }
        
        return false;
    }
    
    public function getUpdatedSettings() {
        $vars = get_object_vars($this);
        
        $dirtyAttributes = [];
        /** @var BaseSetting $section */
        foreach ($vars as $key => $section) {
            $attributes = $section->getDirtyAttributes();
            if($attributes) {
                $dirtyAttributes[$key] = $attributes;
            }
        }

        return $dirtyAttributes;
    }
}

// $s=new SystemSetting();
// $s->business_registration_settings->activation_method = 2;
// $hasUpdate = $s->hasUpdate();
// $updated = $s->getUpdatedSettings();

