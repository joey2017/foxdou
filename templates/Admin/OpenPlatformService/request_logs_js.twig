<script>
    var app_statuses = JSON.parse('{{ constant("App\\Common\\Model\\OpenPlatform\\App::APP_STATUSES")|json_encode|raw }}');
    var statuses = JSON.parse('{{ constant("App\\Common\\Model\\OpenPlatform\\ApiRequestLog::STATUSES")|json_encode|raw }}');
    var url = "";
    var columns = [[
        {"field": "id", "title": "请求记录编号", "width": 150},
        {"field": "app_id", "title": "来源应用编号", "width": 150},
        {"field": "app_name", "title": "来源应用名称", "width": 150},
        {
            "field": "app_status", "title": "应用状态", "width": 150, templet: function (d) {
                return app_statuses[d.app_status];
            }
        },
        {"field": "open_platform_id", "title": "来源用户开放编号", "width": 150},
        {"field": "account", "title": "用户狐豆号", "width": 150},
        {"field": "pass", "title": "用户通行证账号", "width": 150},
        {"field": "nick_name", "title": "用户昵称", "width": 150},
        {"field": "interface_id", "title": "请求接口编号", "width": 150},
        // {
        //     "field": "sys_status", "title": "请求结果系统状态", "width": 150, templet: function (d) {
        //         return sys_statuses[d.sys_status];
        //     }
        // },
        {
            "field": "status", "title": "请求结果业务状态", "width": 150, templet: function (d) {
                return statuses[d.status];
            }
        },
        {"field": "code", "title": "状态码", "width": 150},
        // {"field": "order_id", "title": "关联订单号", "width": 150},
        {"field": "amount", "title": "产生扣费", "width": 150},
        {"field": "ip", "title": "IP", "width": 150},
        {"field": "add_time", "title": "创建时间", templet: "#add_time", "width": 200},
        {"field": "actions", "title": "操作", "toolbar": "#actions", "width": 100}
    ]];

    function get_data() {
        var params = $('form#get_search').serialize();
        url = '?' + params;
        rander_table('#data-table', url, columns);
    }

    // 初始化
    get_data();
    table.on('tool(data-table)', function (obj) { //注：tool是工具条事件名，test是table原始容器的属性 lay-filter="对应的值"
        var data = obj.data; //获得当前行数据
        var layEvent = obj.event; //获得 lay-event 对应的值（也可以是表头的 event 参数对应的值）

        if (layEvent === 'detail') { //审核
            var loading = null;

            var before = function(){
                loading = layer.load();
            }
            var error = function(){
                layer.close(loading);
                nxwd.showMsg('服务器未响应，请稍后重试');
            }
            var success = function(data){
                layer.close(loading);
                nxwd.ajaxOpen('请求记录详情','550px','450px',data);
            }
            nxwd.ajaxRequest('{{ path('admin_open_platform_interface_request_log_detail') }}','POST',{id:data.id},'html',success,before,error);

        }
    });
</script>
