<script>
    var statuses = JSON.parse('{{ constant("App\\Common\\Model\\User\\SupplierAccount::STATUSES")|json_encode|raw }}');
    var url = "";
    var columns = [[
        {"field": "id", "title": "ID", "width": 50, type: "checkbox"},
        {"field": "sup_users_id", "title": "账户编号", "width": 100},
        {"field": "account", "title": "狐豆名", "width": 150},
        {"field": "pass", "title": "通行证账号", "width": 150},
        {"field": "nick_name", "title": "昵称", "width": 150},
        {
            "field": "status", "title": "账户状态", templet: function (d) {
                return statuses[d.status];
            }
        },
        {"field": "balance", "title": "账户可用余额"},
        {"field": "cash_pledge", "title": "押金余额"},
        {"field": "drawing_amount", "title": "提现中金额"},
        {"field": "freeze_amount", "title": "冻结金额"},
        {"field": "add_time", "title": "账户开通时间", "width": 180, templet: "#add_time"},
        {"field": "actions", "title": "操作", "toolbar": "#actions", "width": 200}
    ]];

    function get_data() {
        var params = $('#form').serialize();
        url = '?' + params;
        rander_table('#paged-table', url, columns);
    }

    // 初始化
    get_data();
    table.on('tool(paged-table)', function (obj) { //注：tool是工具条事件名，test是table原始容器的属性 lay-filter="对应的值"
        var data = obj.data; //获得当前行数据
        var layEvent = obj.event; //获得 lay-event 对应的值（也可以是表头的 event 参数对应的值）

        if (layEvent === 'detail') { //查看
            openWin('{{ path('admin_user_details_index') }}?id=' + data.id, '', 1400, 900);
        }
        if (layEvent === 'banned') { //清退
            setBanned('{{ path('admin_users_set_banned') }}','BANNED',data.sup_users_id);
        }
        if (layEvent === 'freeze') { //冻结
            frozenUserStatus('{{ path('admin_users_set_sup_account_status') }}','SUSPENDED',data.sup_users_id);
        }
        if (layEvent === 'unfreeze') { //解冻
            frozenUserStatus('{{ path('admin_users_set_sup_account_status') }}','ACTIVE',data.sup_users_id);
        }
    });

    var checked_ids = [];
    // 监听复选框选中事件
    table.on('checkbox(paged-table)', function (obj) {
        if (obj.checked) {
            checked_ids.push(obj.data.sup_users_id);
        } else {
            checked_ids.remove(obj.data.sup_users_id);
        }
    });

    $('#pass-management').on('click', function (e) {
        var target = $(e.target);

        if (target.is('.reverse-select') || target.parents().is('.reverse-select')) {
            $('.layui-table-box').find('input:checkbox').next().each(function () {
                $(this).toggleClass('layui-form-checked');
            })
        } else if (target.is('.set-status') || target.parents().is('.set-status')) {
            var status = target.attr('data-type');
            frozenUserStatus('{{ path("admin_users_set_sup_account_status") }}', status, checked_ids);
        }

    });

    function setBanned(url,status,id) {
        if(typeof id == 'undefined' || id == ''){
            nxwd.showMsg('参数有误')
            return false;
        }

        layer.confirm('你确定要清退选中的账户吗？', {
            btn: ['确定','取消'] //按钮
        }, function(index){
            layer.close(index);
            var loading = null;
            var before = function(){
                loading = layer.load();
            }
            var error = function(){
                layer.close(loading);
                nxwd.showMsg('服务器未响应，请稍后重试');
            }
            var success = function(res){
                layer.close(loading);
                if (res.status) {
                    nxwd.showMsg(res.msg,'success');
                    location.reload();
                } else {
                    nxwd.showMsg(res.msg,'danger');
                }
            }
            nxwd.ajaxRequest(url,'POST',{ids:id,status:status},'json',success,before,error);
        });
    }

</script>
