<?xml version="1.0" encoding="utf-8"?>
<container xmlns="http://symfony.com/schema/dic/services" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">
  <parameters>
    <parameter key="kernel.root_dir">D:\phpStudy\WWW\foxdou\src</parameter>
    <parameter key="kernel.project_dir">D:\phpStudy\WWW\foxdou</parameter>
    <parameter key="kernel.environment">dev</parameter>
    <parameter key="kernel.debug">true</parameter>
    <parameter key="kernel.name">src</parameter>
    <parameter key="kernel.cache_dir">D:\phpStudy\WWW\foxdou\var\cache\dev</parameter>
    <parameter key="kernel.logs_dir">D:\phpStudy\WWW\foxdou\var\log</parameter>
    <parameter key="kernel.bundles" type="collection">
      <parameter key="WebServerBundle">Symfony\Bundle\WebServerBundle\WebServerBundle</parameter>
      <parameter key="DebugBundle">Symfony\Bundle\DebugBundle\DebugBundle</parameter>
      <parameter key="WebProfilerBundle">Symfony\Bundle\WebProfilerBundle\WebProfilerBundle</parameter>
      <parameter key="FrameworkBundle">Symfony\Bundle\FrameworkBundle\FrameworkBundle</parameter>
      <parameter key="SecurityBundle">Symfony\Bundle\SecurityBundle\SecurityBundle</parameter>
      <parameter key="SensioFrameworkExtraBundle">Sensio\Bundle\FrameworkExtraBundle\SensioFrameworkExtraBundle</parameter>
      <parameter key="MonologBundle">Symfony\Bundle\MonologBundle\MonologBundle</parameter>
      <parameter key="SwiftmailerBundle">Symfony\Bundle\SwiftmailerBundle\SwiftmailerBundle</parameter>
      <parameter key="TwigBundle">Symfony\Bundle\TwigBundle\TwigBundle</parameter>
      <parameter key="SimpleRecordBundle">App\Common\Bundle\SimpleRecord\SimpleRecordBundle</parameter>
      <parameter key="EndroidQrCodeBundle">Endroid\QrCodeBundle\EndroidQrCodeBundle</parameter>
      <parameter key="SimplePayBundle">App\Common\Bundle\SimplePay\SimplePayBundle</parameter>
      <parameter key="SimpleFormBundle">Symfu\SimpleFormBundle\SimpleFormBundle</parameter>
      <parameter key="OneupUploaderBundle">Oneup\UploaderBundle\OneupUploaderBundle</parameter>
      <parameter key="OneupFlysystemBundle">Oneup\FlysystemBundle\OneupFlysystemBundle</parameter>
    </parameter>
    <parameter key="kernel.bundles_metadata" type="collection">
      <parameter key="WebServerBundle" type="collection">
        <parameter key="path">D:\phpStudy\WWW\foxdou\vendor\symfony\web-server-bundle</parameter>
        <parameter key="namespace">Symfony\Bundle\WebServerBundle</parameter>
      </parameter>
      <parameter key="DebugBundle" type="collection">
        <parameter key="path">D:\phpStudy\WWW\foxdou\vendor\symfony\debug-bundle</parameter>
        <parameter key="namespace">Symfony\Bundle\DebugBundle</parameter>
      </parameter>
      <parameter key="WebProfilerBundle" type="collection">
        <parameter key="path">D:\phpStudy\WWW\foxdou\vendor\symfony\web-profiler-bundle</parameter>
        <parameter key="namespace">Symfony\Bundle\WebProfilerBundle</parameter>
      </parameter>
      <parameter key="FrameworkBundle" type="collection">
        <parameter key="path">D:\phpStudy\WWW\foxdou\vendor\symfony\framework-bundle</parameter>
        <parameter key="namespace">Symfony\Bundle\FrameworkBundle</parameter>
      </parameter>
      <parameter key="SecurityBundle" type="collection">
        <parameter key="path">D:\phpStudy\WWW\foxdou\vendor\symfony\security-bundle</parameter>
        <parameter key="namespace">Symfony\Bundle\SecurityBundle</parameter>
      </parameter>
      <parameter key="SensioFrameworkExtraBundle" type="collection">
        <parameter key="path">D:\phpStudy\WWW\foxdou\vendor\sensio\framework-extra-bundle</parameter>
        <parameter key="namespace">Sensio\Bundle\FrameworkExtraBundle</parameter>
      </parameter>
      <parameter key="MonologBundle" type="collection">
        <parameter key="path">D:\phpStudy\WWW\foxdou\vendor\symfony\monolog-bundle</parameter>
        <parameter key="namespace">Symfony\Bundle\MonologBundle</parameter>
      </parameter>
      <parameter key="SwiftmailerBundle" type="collection">
        <parameter key="path">D:\phpStudy\WWW\foxdou\vendor\symfony\swiftmailer-bundle</parameter>
        <parameter key="namespace">Symfony\Bundle\SwiftmailerBundle</parameter>
      </parameter>
      <parameter key="TwigBundle" type="collection">
        <parameter key="path">D:\phpStudy\WWW\foxdou\vendor\symfony\twig-bundle</parameter>
        <parameter key="namespace">Symfony\Bundle\TwigBundle</parameter>
      </parameter>
      <parameter key="SimpleRecordBundle" type="collection">
        <parameter key="path">D:\phpStudy\WWW\foxdou\src\Common\Bundle\SimpleRecord</parameter>
        <parameter key="namespace">App\Common\Bundle\SimpleRecord</parameter>
      </parameter>
      <parameter key="EndroidQrCodeBundle" type="collection">
        <parameter key="path">D:\phpStudy\WWW\foxdou\vendor\endroid\qr-code-bundle\src</parameter>
        <parameter key="namespace">Endroid\QrCodeBundle</parameter>
      </parameter>
      <parameter key="SimplePayBundle" type="collection">
        <parameter key="path">D:\phpStudy\WWW\foxdou\src\Common\Bundle\SimplePay</parameter>
        <parameter key="namespace">App\Common\Bundle\SimplePay</parameter>
      </parameter>
      <parameter key="SimpleFormBundle" type="collection">
        <parameter key="path">D:\phpStudy\WWW\foxdou\vendor\symfu\simple-form-bundle\src</parameter>
        <parameter key="namespace">Symfu\SimpleFormBundle</parameter>
      </parameter>
      <parameter key="OneupUploaderBundle" type="collection">
        <parameter key="path">D:\phpStudy\WWW\foxdou\vendor\oneup\uploader-bundle</parameter>
        <parameter key="namespace">Oneup\UploaderBundle</parameter>
      </parameter>
      <parameter key="OneupFlysystemBundle" type="collection">
        <parameter key="path">D:\phpStudy\WWW\foxdou\vendor\oneup\flysystem-bundle</parameter>
        <parameter key="namespace">Oneup\FlysystemBundle</parameter>
      </parameter>
    </parameter>
    <parameter key="kernel.charset">UTF-8</parameter>
    <parameter key="kernel.container_class">srcApp_KernelDevDebugContainer</parameter>
    <parameter key="container.dumper.inline_class_loader">true</parameter>
    <parameter key="admin_menus" type="collection">
      <parameter key="dashboard" type="collection">
        <parameter key="name">首页</parameter>
        <parameter key="url">/admin/dashboard</parameter>
      </parameter>
      <parameter key="user-management" type="collection">
        <parameter key="name">用户管理</parameter>
        <parameter key="items" type="collection">
          <parameter type="collection">
            <parameter key="name">狐豆通行证管理</parameter>
            <parameter key="icon">layui-icon-chart</parameter>
            <parameter key="items" type="collection">
              <parameter type="collection">
                <parameter key="name">狐豆通信证管理</parameter>
                <parameter key="url">/admin/users/pass-management</parameter>
                <parameter key="icon"></parameter>
              </parameter>
              <parameter type="collection">
                <parameter key="name">平台账户开通记录</parameter>
                <parameter key="url">/admin/users/open-account-log</parameter>
                <parameter key="icon"></parameter>
              </parameter>
              <parameter type="collection">
                <parameter key="name">通行证冻结/解冻记录</parameter>
                <parameter key="url">/admin/users/account-status-log?platform_id=0</parameter>
                <parameter key="icon"></parameter>
              </parameter>
            </parameter>
          </parameter>
          <parameter type="collection">
            <parameter key="name">代理商平台账户</parameter>
            <parameter key="icon">layui-icon-chart</parameter>
            <parameter key="items" type="collection">
              <parameter type="collection">
                <parameter key="name">代理商平台账户</parameter>
                <parameter key="url">/admin/users/get-agent-account</parameter>
                <parameter key="icon"></parameter>
              </parameter>
              <parameter type="collection">
                <parameter key="name">定价分组管理</parameter>
                <parameter key="url">/admin/users/set-price-group</parameter>
                <parameter key="icon"></parameter>
              </parameter>
              <parameter type="collection">
                <parameter key="name">代理商可用服务分组</parameter>
                <parameter key="url">/admin/users/service-group</parameter>
                <parameter key="icon"></parameter>
              </parameter>
              <parameter type="collection">
                <parameter key="name">账户冻结/解冻记录</parameter>
                <parameter key="url">/admin/users/account-status-log?platform_id=5</parameter>
                <parameter key="icon"></parameter>
              </parameter>
            </parameter>
          </parameter>
          <parameter type="collection">
            <parameter key="name">供应商平台账户</parameter>
            <parameter key="icon">layui-icon-chart</parameter>
            <parameter key="items" type="collection">
              <parameter type="collection">
                <parameter key="name">供应商平台账户</parameter>
                <parameter key="url">/admin/users/get-supplier-account</parameter>
                <parameter key="icon"></parameter>
              </parameter>
              <parameter type="collection">
                <parameter key="name">账户冻结/解冻记录</parameter>
                <parameter key="url">/admin/users/account-status-log?platform_id=3</parameter>
                <parameter key="icon"></parameter>
              </parameter>
            </parameter>
          </parameter>
        </parameter>
      </parameter>
      <parameter key="order-management" type="collection">
        <parameter key="name">订单管理</parameter>
        <parameter key="items" type="collection">
          <parameter type="collection">
            <parameter key="name">手机话费充值订单</parameter>
            <parameter key="icon">layui-icon-chart</parameter>
            <parameter key="items" type="collection">
              <parameter type="collection">
                <parameter key="name">手机话费充值主订单</parameter>
                <parameter key="url">/admin/orders/recharge?product_cate_id=1</parameter>
                <parameter key="icon"></parameter>
                <parameter key="cate_id">1</parameter>
                <parameter key="action">recharge</parameter>
              </parameter>
              <parameter type="collection">
                <parameter key="name">SUP订单</parameter>
                <parameter key="url">/admin/orders/suppliers?product_cate_id=1</parameter>
                <parameter key="icon"></parameter>
                <parameter key="cate_id">1</parameter>
                <parameter key="action">suppliers</parameter>
              </parameter>
            </parameter>
          </parameter>
          <parameter type="collection">
            <parameter key="name">固话宽带充值订单</parameter>
            <parameter key="icon">layui-icon-rmb</parameter>
            <parameter key="items" type="collection">
              <parameter type="collection">
                <parameter key="name">固话宽带充值主订单</parameter>
                <parameter key="url">/admin/orders/recharge?product_cate_id=10</parameter>
                <parameter key="icon"></parameter>
                <parameter key="cate_id">10</parameter>
                <parameter key="action">recharge</parameter>
              </parameter>
              <parameter type="collection">
                <parameter key="name">SUP订单</parameter>
                <parameter key="url">/admin/orders/suppliers?product_cate_id=10</parameter>
                <parameter key="icon"></parameter>
                <parameter key="cate_id">10</parameter>
                <parameter key="action">suppliers</parameter>
              </parameter>
            </parameter>
          </parameter>
          <parameter type="collection">
            <parameter key="name">腾讯业务充值订单</parameter>
            <parameter key="icon">layui-icon-read</parameter>
            <parameter key="items" type="collection">
              <parameter type="collection">
                <parameter key="name">腾讯业务充值主订单</parameter>
                <parameter key="url">/admin/orders/recharge?product_cate_id=3</parameter>
                <parameter key="icon"></parameter>
                <parameter key="cate_id">3</parameter>
                <parameter key="action">recharge</parameter>
              </parameter>
              <parameter type="collection">
                <parameter key="name">SUP订单</parameter>
                <parameter key="url">/admin/orders/suppliers?product_cate_id=3</parameter>
                <parameter key="icon"></parameter>
                <parameter key="cate_id">3</parameter>
                <parameter key="action">suppliers</parameter>
              </parameter>
            </parameter>
          </parameter>
        </parameter>
      </parameter>
      <parameter key="product-management" type="collection">
        <parameter key="name">商品管理</parameter>
        <parameter key="items" type="collection">
          <parameter type="collection">
            <parameter key="name">代理商平台商品管理</parameter>
            <parameter key="icon">fa-creative-commons</parameter>
            <parameter key="items" type="collection">
              <parameter type="collection">
                <parameter key="name">手机话费充值商品</parameter>
                <parameter key="route">admin_product_management_mobile_index</parameter>
                <parameter key="icon">fa-list-ul</parameter>
              </parameter>
              <parameter type="collection">
                <parameter key="name">手机流量充值商品</parameter>
                <parameter key="route">admin_product_management_flow_index</parameter>
                <parameter key="icon">fa-plus-circle</parameter>
              </parameter>
              <parameter type="collection">
                <parameter key="name">固话宽带充值商品</parameter>
                <parameter key="route">admin_product_management_telephone_index</parameter>
                <parameter key="icon">fa-plus-circle</parameter>
              </parameter>
              <parameter type="collection">
                <parameter key="name">腾讯业务充值商品</parameter>
                <parameter key="route">admin_product_management_tencent_index</parameter>
                <parameter key="icon">fa-plus-circle</parameter>
              </parameter>
            </parameter>
          </parameter>
          <parameter type="collection">
            <parameter key="name">特殊售价用户管理</parameter>
            <parameter key="icon">fa-creative-commons</parameter>
            <parameter key="items" type="collection">
              <parameter type="collection">
                <parameter key="name">特殊售价用户列表</parameter>
                <parameter key="route">admin_product_management_special_user_settings</parameter>
                <parameter key="icon">fa-list-ul</parameter>
              </parameter>
            </parameter>
          </parameter>
          <parameter type="collection">
            <parameter key="name">批量定时改价</parameter>
            <parameter key="icon">fa-creative-commons</parameter>
            <parameter key="items" type="collection">
              <parameter type="collection">
                <parameter key="name">批量定时改价记录</parameter>
                <parameter key="route">admin_product_management_mobile_scheduled_price_changes</parameter>
                <parameter key="icon">fa-list-ul</parameter>
              </parameter>
            </parameter>
          </parameter>
          <parameter type="collection">
            <parameter key="name">商品属性管理</parameter>
            <parameter key="icon">fa-shopping-cart</parameter>
            <parameter key="items" type="collection">
              <parameter type="collection">
                <parameter key="name">手机号码归属地管理</parameter>
                <parameter key="route">admin_phone_number_attributions_index</parameter>
                <parameter key="icon">fa-list-ol</parameter>
              </parameter>
              <parameter type="collection">
                <parameter key="name">地区及区号管理</parameter>
                <parameter key="route">admin_regions_index</parameter>
                <parameter key="icon">fa-certificate</parameter>
              </parameter>
              <parameter type="collection">
                <parameter key="name">虚拟运营商管理</parameter>
                <parameter key="route">admin_virtual_netowork_operators_index</parameter>
                <parameter key="icon">fa-certificate</parameter>
              </parameter>
              <parameter type="collection">
                <parameter key="name">腾讯业务品类管理</parameter>
                <parameter key="route">admin_tencent_product_categories_index</parameter>
                <parameter key="icon">fa-certificate</parameter>
              </parameter>
            </parameter>
          </parameter>
        </parameter>
      </parameter>
      <parameter key="audit-management" type="collection">
        <parameter key="name">平台审核</parameter>
        <parameter key="items" type="collection">
          <parameter type="collection">
            <parameter key="name">用户信息审核</parameter>
            <parameter key="icon">fa-user-plus</parameter>
            <parameter key="items" type="collection">
              <parameter type="collection">
                <parameter key="name">开户申请审核</parameter>
                <parameter key="url">/admin/audit/account-application</parameter>
                <parameter key="icon">fa-yen</parameter>
              </parameter>
              <parameter type="collection">
                <parameter key="name">实名认证</parameter>
                <parameter key="url">/admin/audit/identities</parameter>
                <parameter key="icon">fa-check-square</parameter>
              </parameter>
            </parameter>
          </parameter>
          <parameter type="collection">
            <parameter key="name">供应商货源审核</parameter>
            <parameter key="icon">fa-check-circle</parameter>
            <parameter key="items" type="collection">
              <parameter type="collection">
                <parameter key="name">手机话费充值类</parameter>
                <parameter key="url">/admin/audit/product-supplies?product_cate_id=1</parameter>
                <parameter key="icon">fa-question-circle</parameter>
              </parameter>
              <parameter type="collection">
                <parameter key="name">固话宽带充值类</parameter>
                <parameter key="url">/admin/audit/product-supplies?product_cate_id=10</parameter>
                <parameter key="icon">fa-check-circle</parameter>
              </parameter>
              <parameter type="collection">
                <parameter key="name">腾讯业务充值类</parameter>
                <parameter key="url">/admin/audit/product-supplies?product_cate_id=3</parameter>
                <parameter key="icon">fa-check-circle</parameter>
              </parameter>
            </parameter>
          </parameter>
          <parameter type="collection">
            <parameter key="name">供应商余额提现审核</parameter>
            <parameter key="icon">fa-check-circle</parameter>
            <parameter key="items" type="collection">
              <parameter type="collection">
                <parameter key="name">余额提现申请审核</parameter>
                <parameter key="url">/admin/audit/withdraws</parameter>
                <parameter key="icon">fa-question-circle</parameter>
              </parameter>
              <parameter type="collection">
                <parameter key="name">余额提现账户审核</parameter>
                <parameter key="url">/admin/audit/withdraw-accounts</parameter>
                <parameter key="icon">fa-check-circle</parameter>
              </parameter>
            </parameter>
          </parameter>
        </parameter>
      </parameter>
      <parameter key="system-administration" type="collection">
        <parameter key="name">系统管理</parameter>
        <parameter key="items" type="collection">
          <parameter type="collection">
            <parameter key="name">系统设置</parameter>
            <parameter key="icon">fa-search</parameter>
            <parameter key="items" type="collection">
              <parameter type="collection">
                <parameter key="name">站点设置</parameter>
                <parameter key="url">/admin/system-administration/system-settings/system</parameter>
                <parameter key="icon">fa-user</parameter>
              </parameter>
              <parameter type="collection">
                <parameter key="name">通行证设置</parameter>
                <parameter key="url">/admin/system-administration/system-settings/passport</parameter>
                <parameter key="icon">layui-icon-chart</parameter>
              </parameter>
              <parameter type="collection">
                <parameter key="name">代理商平台设置</parameter>
                <parameter key="url">/admin/system-administration/system-settings/reseller-platform</parameter>
                <parameter key="icon">layui-icon-rmb</parameter>
              </parameter>
              <parameter type="collection">
                <parameter key="name">供应商平台设置</parameter>
                <parameter key="url">/admin/system-administration/system-settings/supplier-platform</parameter>
                <parameter key="icon">layui-icon-read</parameter>
              </parameter>
            </parameter>
          </parameter>
          <parameter type="collection">
            <parameter key="name">日志管理</parameter>
            <parameter key="icon">fa-search</parameter>
            <parameter key="items" type="collection">
              <parameter type="collection">
                <parameter key="name">系统日志</parameter>
                <parameter key="url">/admin/system-administration/logging/admin-operation-logs</parameter>
                <parameter key="icon">fa-yen</parameter>
              </parameter>
            </parameter>
          </parameter>
          <parameter type="collection">
            <parameter key="name">后台用户管理</parameter>
            <parameter key="icon">fa-search</parameter>
            <parameter key="items" type="collection">
              <parameter type="collection">
                <parameter key="name">后台用户管理</parameter>
                <parameter key="url">/admin/system-administration/administrators</parameter>
                <parameter key="icon">fa-user</parameter>
              </parameter>
              <parameter type="collection">
                <parameter key="name">权限组管理</parameter>
                <parameter key="url">/admin/system-administration/roles</parameter>
                <parameter key="icon">fa-yen</parameter>
              </parameter>
            </parameter>
          </parameter>
          <parameter type="collection">
            <parameter key="name">文章公告管理</parameter>
            <parameter key="icon">fa-search</parameter>
            <parameter key="items" type="collection">
              <parameter type="collection">
                <parameter key="name">文章管理</parameter>
                <parameter key="url">/admin/system-administration/articles</parameter>
                <parameter key="icon">fa-user</parameter>
              </parameter>
              <parameter type="collection">
                <parameter key="name">文章分类管理</parameter>
                <parameter key="url">/admin/system-administration/article-categories</parameter>
                <parameter key="icon">fa-yen</parameter>
              </parameter>
            </parameter>
          </parameter>
        </parameter>
      </parameter>
    </parameter>
    <parameter key="default_max_upload_file_size">10240000</parameter>
    <parameter key="default_upload_save_path">D:\phpStudy\WWW\foxdou/web/uploads/files</parameter>
    <parameter key="admin_article_max_upload_file_size">5242880</parameter>
    <parameter key="admin_article_upload_save_path">D:\phpStudy\WWW\foxdou/web/uploads/article</parameter>
    <parameter key="identity_image_max_upload_file_size">10240000</parameter>
    <parameter key="identity_image_upload_save_path">D:\phpStudy\WWW\foxdou/web/uploads/identity</parameter>
    <parameter key="upload_profiles" type="collection">
      <parameter key="default" type="collection">
        <parameter key="base_uri">/uploads/files</parameter>
      </parameter>
      <parameter key="admin_article" type="collection">
        <parameter key="base_uri">/uploads/article</parameter>
      </parameter>
    </parameter>
    <parameter key="asset_base_url"></parameter>
    <parameter key="reseller_menus" type="collection">
      <parameter key="dashboard" type="collection">
        <parameter key="name">控制面板</parameter>
        <parameter key="items" type="collection">
          <parameter type="collection">
            <parameter key="name">首页</parameter>
            <parameter key="icon">layui-icon-chart</parameter>
            <parameter key="url">/supplier/dashboard</parameter>
          </parameter>
          <parameter type="collection">
            <parameter key="name">账户信息</parameter>
            <parameter key="icon">layui-icon-rmb</parameter>
            <parameter key="url">/supplier/profile</parameter>
          </parameter>
          <parameter type="collection">
            <parameter key="name">平台公告</parameter>
            <parameter key="icon">layui-icon-rmb</parameter>
            <parameter key="url">/supplier/announcements</parameter>
          </parameter>
          <parameter type="collection">
            <parameter key="name">操作日记</parameter>
            <parameter key="icon">layui-icon-rmb</parameter>
            <parameter key="url">/supplier/operation-logs</parameter>
          </parameter>
        </parameter>
      </parameter>
      <parameter key="orders" type="collection">
        <parameter key="name">订单管理</parameter>
        <parameter key="items" type="collection">
          <parameter type="collection">
            <parameter key="name">手机话费充值订单</parameter>
            <parameter key="icon">layui-icon-chart</parameter>
            <parameter key="url">/supplier/profile</parameter>
          </parameter>
          <parameter type="collection">
            <parameter key="name">手机流量充值订单</parameter>
            <parameter key="icon">layui-icon-chart</parameter>
            <parameter key="url">/supplier/profile</parameter>
          </parameter>
          <parameter type="collection">
            <parameter key="name">固话宽带充值订单</parameter>
            <parameter key="icon">layui-icon-rmb</parameter>
            <parameter key="url">/supplier/profile</parameter>
          </parameter>
          <parameter type="collection">
            <parameter key="name">腾讯业务充值订单</parameter>
            <parameter key="icon">layui-icon-rmb</parameter>
            <parameter key="url">/supplier/profile</parameter>
          </parameter>
        </parameter>
      </parameter>
      <parameter key="products" type="collection">
        <parameter key="name">供货管理</parameter>
        <parameter key="items" type="collection">
          <parameter type="collection">
            <parameter key="name">供货模板管理</parameter>
            <parameter key="icon">fa-creative-commons</parameter>
            <parameter key="items" type="collection">
              <parameter type="collection">
                <parameter key="name">供货模板管理</parameter>
                <parameter key="url">/supplier/products</parameter>
                <parameter key="icon">fa-list-ul</parameter>
              </parameter>
            </parameter>
          </parameter>
          <parameter type="collection">
            <parameter key="name">商品管理</parameter>
            <parameter key="icon">fa-shopping-cart</parameter>
            <parameter key="items" type="collection">
              <parameter type="collection">
                <parameter key="name">手机话费充值</parameter>
                <parameter key="url">/service/service/list</parameter>
                <parameter key="icon">fa-list-ol</parameter>
              </parameter>
              <parameter type="collection">
                <parameter key="name">手机流量充值</parameter>
                <parameter key="url">/service/service-cate/</parameter>
                <parameter key="icon">fa-certificate</parameter>
              </parameter>
              <parameter type="collection">
                <parameter key="name">固话宽带充值</parameter>
                <parameter key="url">/service/service-cate/</parameter>
                <parameter key="icon">fa-certificate</parameter>
              </parameter>
              <parameter type="collection">
                <parameter key="name">腾讯业务充值</parameter>
                <parameter key="url">/service/service-cate/</parameter>
                <parameter key="icon">fa-certificate</parameter>
              </parameter>
            </parameter>
          </parameter>
          <parameter type="collection">
            <parameter key="name">供货接口秘钥</parameter>
            <parameter key="icon">fa-shopping-cart</parameter>
            <parameter key="items" type="collection">
              <parameter type="collection">
                <parameter key="name">供货接口秘钥</parameter>
                <parameter key="url">/service/service/list</parameter>
                <parameter key="icon">fa-list-ol</parameter>
              </parameter>
            </parameter>
          </parameter>
        </parameter>
      </parameter>
      <parameter key="finance" type="collection">
        <parameter key="name">财务</parameter>
        <parameter key="items" type="collection">
          <parameter type="collection">
            <parameter key="name">账务明细</parameter>
            <parameter key="icon">fa-rmb</parameter>
            <parameter key="items" type="collection">
              <parameter type="collection">
                <parameter key="name">账户概览</parameter>
                <parameter key="url">/finance/finance-pay-way</parameter>
                <parameter key="icon">fa-bank</parameter>
              </parameter>
              <parameter type="collection">
                <parameter key="name">交易记录</parameter>
                <parameter key="url">/finance/finance-pay-way/poundage</parameter>
                <parameter key="icon">fa-hand-rock-o</parameter>
              </parameter>
              <parameter type="collection">
                <parameter key="name">资金明细</parameter>
                <parameter key="url">/finance/finance-pay-way/user-bind-payway</parameter>
                <parameter key="icon">fa-user-md</parameter>
              </parameter>
            </parameter>
          </parameter>
          <parameter type="collection">
            <parameter key="name">提现管理</parameter>
            <parameter key="icon">fa-amount</parameter>
            <parameter key="items" type="collection">
              <parameter type="collection">
                <parameter key="name">申请提现</parameter>
                <parameter key="url">/finance/finance-cash/bank</parameter>
                <parameter key="icon">fa-bank</parameter>
              </parameter>
              <parameter type="collection">
                <parameter key="name">提现记录</parameter>
                <parameter key="url">/finance/finance-cash/shouxu</parameter>
                <parameter key="icon">fa-hand-rock-o</parameter>
              </parameter>
              <parameter type="collection">
                <parameter key="name">提现账户管理</parameter>
                <parameter key="url">/finance/finance-cash/user-account</parameter>
                <parameter key="icon">fa-user-md</parameter>
              </parameter>
            </parameter>
          </parameter>
        </parameter>
      </parameter>
      <parameter key="users" type="collection">
        <parameter key="name">用户管理</parameter>
        <parameter key="items" type="collection">
          <parameter type="collection">
            <parameter key="name">员工管理</parameter>
            <parameter key="icon">layui-icon-chart</parameter>
            <parameter key="items" type="collection">
              <parameter type="collection">
                <parameter key="name">员工管理</parameter>
                <parameter key="url">/supplier/users/pass-management</parameter>
                <parameter key="icon"></parameter>
              </parameter>
              <parameter type="collection">
                <parameter key="name">岗位权限管理</parameter>
                <parameter key="url">/supplier/users/open-account-log</parameter>
                <parameter key="icon"></parameter>
              </parameter>
            </parameter>
          </parameter>
        </parameter>
      </parameter>
      <parameter key="passport" type="collection">
        <parameter key="name">狐豆通行证</parameter>
        <parameter key="icon">layui-icon-chart</parameter>
        <parameter key="url">/passport/</parameter>
      </parameter>
    </parameter>
    <parameter key="simple_pay" type="collection">
      <parameter key="alipay" type="collection">
        <parameter key="app_id">2016082000295641</parameter>
        <parameter key="notify_url">http://abc.com/notify.php</parameter>
        <parameter key="return_url">http://abc.com/return.php</parameter>
        <parameter key="ali_public_key">MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAgSePE0b15i1CwJTDUyX6jPjOSCRN5pYCYFToTL6lNvYFjd+6p5rnv2Y+A0FcxM3t+T1oC3BEMxoKw461TncX8FMBJuWbAXMD8lvFMod2sV4PNmk1NcrRjpwvuUJKwaSC6A5J/SqA0B80Tdw1gjiLLb859I0nn1jyhF1FkWhlOnn7ibyfO7h5SAEZbDtlzlc9UhikWAkU7ToJuTlWOGuCZYz9jAv+ibj/ALH7ABZq5KwgBYCrECdEmfAmJUqT+zRmvhgvEI0dIk0pYNj/Mg6upuYOd4mEAvuWwyktzbPYvM9Ln1YK8NlQg1gWbBT1z6akxgaXM187myzZXb1KNzRnMwIDAQAB</parameter>
        <parameter key="private_key">MIIEowIBAAKCAQEA2VTIqO58JLPMSh6R6EBUvaLQBqDH5TvqJkxPdD4XVZO9uQ3JPxsKMr1Lt8U7cYOrsoYb7XV5/UgoVhuK1w/T1bjtK7AnL7PEJ8HcgGuLiP5UMvVW3iOWf0TwUrHp05oadE9Y6o0muFriPl6aUIf9hzCFPAC6RWHyJeqp6bAuY04wFNl6AThCV0JQlaH9/2iI/p8ff7gnjlkFnFkrjMOyQIS/084Bib5AsCKBn6T3Hn27gqkBDLRjgpUBQhvcgmb9oNuI39sL7sAmcIdNhSyjUPlN48JxHua9vHK4Fn2ZYg4c83w9cOBbOt56KW4kpaknxyJKyEIXyfDGq8BmJq1poQIDAQABAoIBAHO/S/9sxIFnoO34ygy/9mHpTJG7H7te5Z3wFoD6cMMLJIhiZ0RMymmrl6AQU1BpqBA0jLszTf0vaQwzLwbLTy8MhoQ2FSi6vUXPYfijTnVvvrhFIja9DXJK7ROd3cLs2BoKCHkjI/Qbs1M0X0t0ofpWRR9n480AFU9MY6IqSwpnpsDIVrGz8hGYB6d10bweTRq54ifn1Hh1XcI2p7XlQfO8ZaetSccW01ztER/lgZugla/9sq5NubFPcGrQXCzzVBqoLrH+ZDKjYi6fkGixX4X9GaIGKKqw/nzfouHv+jhyne0p+MTYMFx2t9V1+QakHnkDiile+5c/DAe9pvcQruECgYEA7jeESc2cLurrdoElt7XcMRO+NhtnE5CZGgtUQrOyPzK9Hth3ZfXE4Bm1xgUD/gedXkKT9hru9vLSrvi3j27NsKB9IIyEKlFBJxNlUEHHG7eaeUqUKsr5s16J2aNwq3qt2osxS9szrgohWWU0TahcCsVLoO9WMErqWHrGzhUKlMMCgYEA6Y4gvImqt45L/ODPpK54JnJd+LFmwX3iBgg3AQwjSa41wITo/eK2PB9toJO3FSC3wFk6okwRwrQwJhZ0vNBcVFnCJT5p58TAvLGrxA2UDruaVHVF5q5VECH1Ez7eBG6WQKYUGPbkcEBaZ52TNpiirtYNU1L1I3mqlGXUOjZtkcsCgYBxjmNwbyQ5tWDDX/Mj7PxnJLsyvcNYL0DcinQDS/f3am9+6b+ZChxsm7TsDW4GxYh964zu743kiIJoSEXwiOhif07GmlVSeuNtBjDwnjqU+uQXV7bj41g+6h0ac2/9PoDrwhigyYCMQWX+YGEbd9tQgxZ3REA4yy2FOhnVGXCu0wKBgQCnlW0V+648kWUi6Wj04J+j7rJRDXIO6rWw4FofbUcwykkVgAjyi6d5Uo/GBdf72AMhiKUS6YRg8gwOeFSBWvy1JcayFKvHOx2VB+OZBKk1PRXK/m8OzA6LSeJhUd3azkMP1ltbYmSdyv9Tk/Sa20D4NO1Q2Zi+QMHOQ5bZwk4yqwKBgG1JaBb1BqPktRZbfQnWE+mzxzGY2DVRcLzlmgWaz0D4xtbeLut5siKVNxcP+FfNxGP5f0J62xM+TcxZ8tP6Vab+G9rjnYeKzvzKmk8ecc342YlhW6Q+kIaeh5cdRSxVDvcl2ppA+QMIJO26d4N/Xn/EQE7Vu10DB+9EUbQdtGE/</parameter>
        <parameter key="log" type="collection">
          <parameter key="file">D:\phpStudy\WWW\foxdou/var/log/alipay.log</parameter>
          <parameter key="level">info</parameter>
          <parameter key="type">single</parameter>
          <parameter key="max_file">30</parameter>
        </parameter>
        <parameter key="http" type="collection">
          <parameter key="timeout">5</parameter>
          <parameter key="connect_timeout">5</parameter>
        </parameter>
        <parameter key="mode">dev</parameter>
      </parameter>
      <parameter key="wechat" type="collection">
        <parameter key="appid">wxb3fxxxxxxxxxxx</parameter>
        <parameter key="app_id">wxb3fxxxxxxxxxxx</parameter>
        <parameter key="miniapp_id">wxb3fxxxxxxxxxxx</parameter>
        <parameter key="mch_id">14577xxxx</parameter>
        <parameter key="key">mF2suE9sU6Mk1Cxxxxxxxxxxx</parameter>
        <parameter key="notify_url">http://abc.com/notify.php</parameter>
        <parameter key="cert_client">./cert/apiclient_cert.pem</parameter>
        <parameter key="cert_key">./cert/apiclient_key.pem</parameter>
        <parameter key="log" type="collection">
          <parameter key="file">D:\phpStudy\WWW\foxdou/var/log/wechat.log</parameter>
          <parameter key="level">info</parameter>
          <parameter key="type">single</parameter>
          <parameter key="max_file">30</parameter>
        </parameter>
        <parameter key="http" type="collection">
          <parameter key="timeout">5</parameter>
          <parameter key="connect_timeout">5</parameter>
        </parameter>
        <parameter key="mode">dev</parameter>
      </parameter>
    </parameter>
    <parameter key="supplier_menus" type="collection">
      <parameter key="dashboard" type="collection">
        <parameter key="name">控制面板</parameter>
        <parameter key="items" type="collection">
          <parameter type="collection">
            <parameter key="name">首页</parameter>
            <parameter key="icon">layui-icon-chart</parameter>
            <parameter key="url">/supplier/dashboard</parameter>
          </parameter>
          <parameter type="collection">
            <parameter key="name">账户信息</parameter>
            <parameter key="icon">layui-icon-rmb</parameter>
            <parameter key="url">/supplier/dashboard/profile</parameter>
          </parameter>
          <parameter type="collection">
            <parameter key="name">平台公告</parameter>
            <parameter key="icon">layui-icon-rmb</parameter>
            <parameter key="url">/supplier/dashboard/announcements</parameter>
          </parameter>
          <parameter type="collection">
            <parameter key="name">操作日记</parameter>
            <parameter key="icon">layui-icon-rmb</parameter>
            <parameter key="url">/supplier/dashboard/operation-logs</parameter>
          </parameter>
        </parameter>
      </parameter>
      <parameter key="orders" type="collection">
        <parameter key="name">订单管理</parameter>
        <parameter key="items" type="collection">
          <parameter type="collection">
            <parameter key="name">手机话费充值订单</parameter>
            <parameter key="icon">layui-icon-chart</parameter>
            <parameter key="url">/supplier/orders/order-list?product_cate_id=1</parameter>
            <parameter key="cate_id">1</parameter>
          </parameter>
          <parameter type="collection">
            <parameter key="name">手机流量充值订单</parameter>
            <parameter key="icon">layui-icon-chart</parameter>
            <parameter key="url">/supplier/orders/order-list?product_cate_id=4</parameter>
            <parameter key="cate_id">4</parameter>
          </parameter>
          <parameter type="collection">
            <parameter key="name">固话宽带充值订单</parameter>
            <parameter key="icon">layui-icon-rmb</parameter>
            <parameter key="url">/supplier/orders/order-list?product_cate_id=10</parameter>
            <parameter key="cate_id">10</parameter>
          </parameter>
          <parameter type="collection">
            <parameter key="name">腾讯业务充值订单</parameter>
            <parameter key="icon">layui-icon-rmb</parameter>
            <parameter key="url">/supplier/orders/order-list?product_cate_id=3</parameter>
            <parameter key="cate_id">3</parameter>
          </parameter>
        </parameter>
      </parameter>
      <parameter key="product-sources" type="collection">
        <parameter key="name">供货管理</parameter>
        <parameter key="items" type="collection">
          <parameter type="collection">
            <parameter key="name">供货模板管理</parameter>
            <parameter key="icon">fa-creative-commons</parameter>
            <parameter key="items" type="collection">
              <parameter type="collection">
                <parameter key="name">供货模板管理</parameter>
                <parameter key="route">supplier_product_source_groups_index</parameter>
                <parameter key="icon">fa-list-ul</parameter>
              </parameter>
            </parameter>
          </parameter>
        </parameter>
      </parameter>
      <parameter key="finance" type="collection">
        <parameter key="name">财务</parameter>
        <parameter key="items" type="collection">
          <parameter type="collection">
            <parameter key="name">账务明细</parameter>
            <parameter key="icon">fa-rmb</parameter>
            <parameter key="items" type="collection">
              <parameter type="collection">
                <parameter key="name">账户概览</parameter>
                <parameter key="url">/supplier/finance</parameter>
                <parameter key="icon">fa-bank</parameter>
              </parameter>
              <parameter type="collection">
                <parameter key="name">交易记录</parameter>
                <parameter key="url">/supplier/finance/trade-list</parameter>
                <parameter key="icon">fa-hand-rock-o</parameter>
              </parameter>
              <parameter type="collection">
                <parameter key="name">资金明细</parameter>
                <parameter key="url">/supplier/finance/detail</parameter>
                <parameter key="icon">fa-user-md</parameter>
              </parameter>
            </parameter>
          </parameter>
          <parameter type="collection">
            <parameter key="name">提现管理</parameter>
            <parameter key="icon">fa-amount</parameter>
            <parameter key="items" type="collection">
              <parameter type="collection">
                <parameter key="name">申请提现</parameter>
                <parameter key="url">/supplier/finance/add-withdraw</parameter>
                <parameter key="icon">fa-bank</parameter>
              </parameter>
              <parameter type="collection">
                <parameter key="name">提现记录</parameter>
                <parameter key="url">/supplier/finance/withdraw</parameter>
                <parameter key="icon">fa-hand-rock-o</parameter>
              </parameter>
              <parameter type="collection">
                <parameter key="name">提现账户管理</parameter>
                <parameter key="url">/supplier/finance/withdraw-account</parameter>
                <parameter key="icon">fa-user-md</parameter>
              </parameter>
            </parameter>
          </parameter>
        </parameter>
      </parameter>
      <parameter key="passport" type="collection">
        <parameter key="name">狐豆通行证</parameter>
        <parameter key="icon">layui-icon-chart</parameter>
        <parameter key="url">/passport/</parameter>
      </parameter>
    </parameter>
    <parameter key="env(DATABASE_URL)"></parameter>
    <parameter key="db" type="collection">
      <parameter key="master" type="collection">
        <parameter key="driver">pdo_mysql</parameter>
        <parameter key="host">127.0.0.1</parameter>
        <parameter key="port">3306</parameter>
        <parameter key="dbname">foxdou_dev</parameter>
        <parameter key="user">root</parameter>
        <parameter key="password">root</parameter>
        <parameter key="charset">utf8mb4</parameter>
      </parameter>
    </parameter>
    <parameter key="site_name">狐豆</parameter>
    <parameter key="locale">zh_CN</parameter>
    <parameter key="app_locales">zh_CN</parameter>
    <parameter key="app.notifications.email_sender">anonymous@example.com</parameter>
    <parameter key="env(VAR_DUMPER_SERVER)">127.0.0.1:9912</parameter>
    <parameter key="fragment.renderer.hinclude.global_template"></parameter>
    <parameter key="fragment.path">/_fragment</parameter>
    <parameter key="kernel.secret">%env(APP_SECRET)%</parameter>
    <parameter key="kernel.http_method_override">true</parameter>
    <parameter key="kernel.trusted_hosts" type="collection"/>
    <parameter key="kernel.default_locale">zh_CN</parameter>
    <parameter key="templating.helper.code.file_link_format">phpstorm://open?url=file://%f&amp;line=%l</parameter>
    <parameter key="debug.file_link_format">phpstorm://open?url=file://%f&amp;line=%l</parameter>
    <parameter key="session.metadata.storage_key">_sf2_meta</parameter>
    <parameter key="session.storage.options" type="collection">
      <parameter key="cache_limiter">0</parameter>
      <parameter key="name">SFSESSID</parameter>
      <parameter key="cookie_httponly">true</parameter>
      <parameter key="gc_probability">1</parameter>
    </parameter>
    <parameter key="session.save_path">D:\phpStudy\WWW\foxdou\var\cache\dev/sessions</parameter>
    <parameter key="session.metadata.update_threshold">0</parameter>
    <parameter key="asset.request_context.base_path"></parameter>
    <parameter key="asset.request_context.secure">false</parameter>
    <parameter key="translator.logging">false</parameter>
    <parameter key="translator.default_path">D:\phpStudy\WWW\foxdou/translations</parameter>
    <parameter key="data_collector.templates" type="collection"/>
    <parameter key="cache.prefix.seed">foxdou.com</parameter>
    <parameter key="debug.error_handler.throw_at">-1</parameter>
    <parameter key="debug.container.dump">D:\phpStudy\WWW\foxdou\var\cache\dev/srcApp_KernelDevDebugContainer.xml</parameter>
    <parameter key="router.request_context.host">localhost</parameter>
    <parameter key="router.request_context.scheme">http</parameter>
    <parameter key="router.request_context.base_url"></parameter>
    <parameter key="router.resource">kernel::loadRoutes</parameter>
    <parameter key="router.cache_class_prefix">srcApp_KernelDevDebugContainer</parameter>
    <parameter key="request_listener.http_port">80</parameter>
    <parameter key="request_listener.https_port">443</parameter>
    <parameter key="security.authentication.trust_resolver.anonymous_class">null</parameter>
    <parameter key="security.authentication.trust_resolver.rememberme_class">null</parameter>
    <parameter key="security.role_hierarchy.roles" type="collection">
      <parameter key="ROLE_OPEN_PLATFORM" type="collection">
        <parameter>ROLE_USER</parameter>
      </parameter>
      <parameter key="ROLE_RESELLER" type="collection">
        <parameter>ROLE_USER</parameter>
      </parameter>
      <parameter key="ROLE_SUPPLIER" type="collection">
        <parameter>ROLE_USER</parameter>
      </parameter>
      <parameter key="ROLE_ALL_PLATFORMS" type="collection">
        <parameter>ROLE_OPEN_PLATFORM</parameter>
        <parameter>ROLE_RESELLER</parameter>
        <parameter>ROLE_SUPPLIER</parameter>
      </parameter>
      <parameter key="ROLE_ADMIN" type="collection">
        <parameter>ROLE_ALL_PLATFORMS</parameter>
        <parameter>ROLE_ADMIN_EDITOR</parameter>
      </parameter>
      <parameter key="ROLE_SUPER_ADMIN" type="collection">
        <parameter>ROLE_ADMIN</parameter>
        <parameter>ROLE_ALLOWED_TO_SWITCH</parameter>
      </parameter>
    </parameter>
    <parameter key="security.access.denied_url">null</parameter>
    <parameter key="security.authentication.manager.erase_credentials">true</parameter>
    <parameter key="security.authentication.session_strategy.strategy">migrate</parameter>
    <parameter key="security.access.always_authenticate_before_granting">false</parameter>
    <parameter key="security.authentication.hide_user_not_found">true</parameter>
    <parameter key="monolog.use_microseconds">true</parameter>
    <parameter key="monolog.swift_mailer.handlers" type="collection"/>
    <parameter key="monolog.handlers_to_channels" type="collection">
      <parameter key="monolog.handler.console" type="collection">
        <parameter key="type">exclusive</parameter>
        <parameter key="elements" type="collection">
          <parameter>event</parameter>
          <parameter>doctrine</parameter>
          <parameter>console</parameter>
        </parameter>
      </parameter>
      <parameter key="monolog.handler.main" type="collection">
        <parameter key="type">exclusive</parameter>
        <parameter key="elements" type="collection">
          <parameter>event</parameter>
        </parameter>
      </parameter>
    </parameter>
    <parameter key="swiftmailer.mailer.mxhichina.transport.name">dynamic</parameter>
    <parameter key="swiftmailer.spool.mxhichina.file.path">D:\phpStudy\WWW\foxdou\var\cache\dev/swiftmailer/spool/mxhichina</parameter>
    <parameter key="swiftmailer.mailer.mxhichina.spool.enabled">true</parameter>
    <parameter key="swiftmailer.mailer.mxhichina.sender_address">gxlclizongjun@163.com</parameter>
    <parameter key="swiftmailer.sender_address">gxlclizongjun@163.com</parameter>
    <parameter key="swiftmailer.mailer.mxhichina.antiflood.threshold">99</parameter>
    <parameter key="swiftmailer.mailer.mxhichina.antiflood.sleep">1</parameter>
    <parameter key="swiftmailer.mailer.mxhichina.single_address">null</parameter>
    <parameter key="swiftmailer.mailer.mxhichina.delivery.enabled">true</parameter>
    <parameter key="swiftmailer.spool.enabled">true</parameter>
    <parameter key="swiftmailer.delivery.enabled">true</parameter>
    <parameter key="swiftmailer.single_address">null</parameter>
    <parameter key="swiftmailer.mailers" type="collection">
      <parameter key="mxhichina">swiftmailer.mailer.mxhichina</parameter>
    </parameter>
    <parameter key="swiftmailer.default_mailer">mxhichina</parameter>
    <parameter key="twig.exception_listener.controller">twig.controller.exception::showAction</parameter>
    <parameter key="twig.form.resources" type="collection">
      <parameter>form_div_layout.html.twig</parameter>
    </parameter>
    <parameter key="twig.default_path">D:\phpStudy\WWW\foxdou/templates</parameter>
    <parameter key="simple_form.csrf_field">_token</parameter>
    <parameter key="oneup_uploader.chunks.manager.class">Oneup\UploaderBundle\Uploader\Chunk\ChunkManager</parameter>
    <parameter key="oneup_uploader.chunks_storage.gaufrette.class">Oneup\UploaderBundle\Uploader\Chunk\Storage\GaufretteStorage</parameter>
    <parameter key="oneup_uploader.chunks_storage.flysystem.class">Oneup\UploaderBundle\Uploader\Chunk\Storage\FlysystemStorage</parameter>
    <parameter key="oneup_uploader.chunks_storage.filesystem.class">Oneup\UploaderBundle\Uploader\Chunk\Storage\FilesystemStorage</parameter>
    <parameter key="oneup_uploader.namer.urlsafename.class">Oneup\UploaderBundle\Uploader\Naming\UrlSafeNamer</parameter>
    <parameter key="oneup_uploader.namer.uniqid.class">Oneup\UploaderBundle\Uploader\Naming\UniqidNamer</parameter>
    <parameter key="oneup_uploader.routing.loader.class">Oneup\UploaderBundle\Routing\RouteLoader</parameter>
    <parameter key="oneup_uploader.storage.gaufrette.class">Oneup\UploaderBundle\Uploader\Storage\GaufretteStorage</parameter>
    <parameter key="oneup_uploader.storage.flysystem.class">Oneup\UploaderBundle\Uploader\Storage\FlysystemStorage</parameter>
    <parameter key="oneup_uploader.storage.filesystem.class">Oneup\UploaderBundle\Uploader\Storage\FilesystemStorage</parameter>
    <parameter key="oneup_uploader.orphanage.class">Oneup\UploaderBundle\Uploader\Storage\FilesystemOrphanageStorage</parameter>
    <parameter key="oneup_uploader.orphanage.manager.class">Oneup\UploaderBundle\Uploader\Orphanage\OrphanageManager</parameter>
    <parameter key="oneup_uploader.controller.fineuploader.class">Oneup\UploaderBundle\Controller\FineUploaderController</parameter>
    <parameter key="oneup_uploader.controller.blueimp.class">Oneup\UploaderBundle\Controller\BlueimpController</parameter>
    <parameter key="oneup_uploader.controller.uploadify.class">Oneup\UploaderBundle\Controller\UploadifyController</parameter>
    <parameter key="oneup_uploader.controller.yui3.class">Oneup\UploaderBundle\Controller\YUI3Controller</parameter>
    <parameter key="oneup_uploader.controller.fancyupload.class">Oneup\UploaderBundle\Controller\FancyUploadController</parameter>
    <parameter key="oneup_uploader.controller.mooupload.class">Oneup\UploaderBundle\Controller\MooUploadController</parameter>
    <parameter key="oneup_uploader.controller.plupload.class">Oneup\UploaderBundle\Controller\PluploadController</parameter>
    <parameter key="oneup_uploader.controller.dropzone.class">Oneup\UploaderBundle\Controller\DropzoneController</parameter>
    <parameter key="oneup_uploader.command.clear_chunks.class">Oneup\UploaderBundle\Command\ClearChunkCommand</parameter>
    <parameter key="oneup_uploader.command.clear_orphans.class">Oneup\UploaderBundle\Command\ClearOrphansCommand</parameter>
    <parameter key="oneup_uploader.error_handler.noop.class">Oneup\UploaderBundle\Uploader\ErrorHandler\NoopErrorHandler</parameter>
    <parameter key="oneup_uploader.error_handler.blueimp.class">Oneup\UploaderBundle\Uploader\ErrorHandler\BlueimpErrorHandler</parameter>
    <parameter key="oneup_uploader.error_handler.plupload.class">Oneup\UploaderBundle\Uploader\ErrorHandler\PluploadErrorHandler</parameter>
    <parameter key="oneup_uploader.error_handler.dropzone.class">Oneup\UploaderBundle\Uploader\ErrorHandler\DropzoneErrorHandler</parameter>
    <parameter key="oneup_uploader.chunks" type="collection">
      <parameter key="maxage">604800</parameter>
      <parameter key="storage" type="collection">
        <parameter key="type">filesystem</parameter>
        <parameter key="filesystem">null</parameter>
        <parameter key="directory">D:\phpStudy\WWW\foxdou\var\cache\dev/uploader/chunks</parameter>
        <parameter key="stream_wrapper">null</parameter>
        <parameter key="sync_buffer_size">100K</parameter>
        <parameter key="prefix">chunks</parameter>
      </parameter>
      <parameter key="load_distribution">true</parameter>
    </parameter>
    <parameter key="oneup_uploader.orphanage" type="collection">
      <parameter key="maxage">604800</parameter>
      <parameter key="directory">D:\phpStudy\WWW\foxdou\var\cache\dev/uploader/orphanage</parameter>
    </parameter>
    <parameter key="oneup_uploader.config.default" type="collection">
      <parameter key="frontend">dropzone</parameter>
      <parameter key="max_size">10240000</parameter>
      <parameter key="namer">App\Common\Service\FileUpload\UploadFileNamer</parameter>
      <parameter key="route_prefix">/uploads/files</parameter>
      <parameter key="endpoints" type="collection">
        <parameter key="upload">/common/uploader/default</parameter>
        <parameter key="progress">null</parameter>
        <parameter key="cancel">null</parameter>
      </parameter>
      <parameter key="storage" type="collection">
        <parameter key="type">flysystem</parameter>
        <parameter key="directory">D:\phpStudy\WWW\foxdou/web/uploads/files</parameter>
        <parameter key="filesystem">oneup_flysystem.default_filesystem</parameter>
        <parameter key="service">null</parameter>
        <parameter key="stream_wrapper">null</parameter>
        <parameter key="sync_buffer_size">100K</parameter>
      </parameter>
      <parameter key="allowed_mimetypes" type="collection">
        <parameter key="image/jpeg" type="collection">
          <parameter>jpg</parameter>
          <parameter>jpeg</parameter>
          <parameter>jpe</parameter>
        </parameter>
        <parameter key="image/png" type="collection">
          <parameter>png</parameter>
        </parameter>
        <parameter key="image/gif" type="collection">
          <parameter>gif</parameter>
        </parameter>
        <parameter key="image/zip" type="collection">
          <parameter>zip</parameter>
        </parameter>
        <parameter key="image/doc" type="collection">
          <parameter>doc</parameter>
        </parameter>
        <parameter key="image/pdf" type="collection">
          <parameter>pdf</parameter>
        </parameter>
        <parameter key="image/txt" type="collection">
          <parameter>txt</parameter>
        </parameter>
        <parameter key="image/xls" type="collection">
          <parameter>xls</parameter>
        </parameter>
      </parameter>
      <parameter key="custom_frontend" type="collection">
        <parameter key="name">null</parameter>
        <parameter key="class">null</parameter>
      </parameter>
      <parameter key="disallowed_mimetypes" type="collection"/>
      <parameter key="error_handler">null</parameter>
      <parameter key="use_orphanage">false</parameter>
      <parameter key="enable_progress">false</parameter>
      <parameter key="enable_cancelation">false</parameter>
      <parameter key="root_folder">false</parameter>
    </parameter>
    <parameter key="oneup_uploader.config.admin_article" type="collection">
      <parameter key="frontend">dropzone</parameter>
      <parameter key="max_size">5242880</parameter>
      <parameter key="namer">App\Common\Service\FileUpload\UploadFileNamer</parameter>
      <parameter key="route_prefix">/uploads/article</parameter>
      <parameter key="endpoints" type="collection">
        <parameter key="upload">/admin/uploader/article</parameter>
        <parameter key="progress">null</parameter>
        <parameter key="cancel">null</parameter>
      </parameter>
      <parameter key="storage" type="collection">
        <parameter key="type">flysystem</parameter>
        <parameter key="directory">D:\phpStudy\WWW\foxdou/web/uploads/article</parameter>
        <parameter key="filesystem">oneup_flysystem.admin_article_filesystem</parameter>
        <parameter key="service">null</parameter>
        <parameter key="stream_wrapper">null</parameter>
        <parameter key="sync_buffer_size">100K</parameter>
      </parameter>
      <parameter key="allowed_mimetypes" type="collection">
        <parameter key="image/jpeg" type="collection">
          <parameter>jpg</parameter>
          <parameter>jpeg</parameter>
          <parameter>jpe</parameter>
        </parameter>
        <parameter key="image/png" type="collection">
          <parameter>png</parameter>
        </parameter>
        <parameter key="image/gif" type="collection">
          <parameter>gif</parameter>
        </parameter>
        <parameter key="image/bmp" type="collection">
          <parameter>bmp</parameter>
        </parameter>
      </parameter>
      <parameter key="custom_frontend" type="collection">
        <parameter key="name">null</parameter>
        <parameter key="class">null</parameter>
      </parameter>
      <parameter key="disallowed_mimetypes" type="collection"/>
      <parameter key="error_handler">null</parameter>
      <parameter key="use_orphanage">false</parameter>
      <parameter key="enable_progress">false</parameter>
      <parameter key="enable_cancelation">false</parameter>
      <parameter key="root_folder">false</parameter>
    </parameter>
    <parameter key="oneup_uploader.config.identity_image" type="collection">
      <parameter key="frontend">dropzone</parameter>
      <parameter key="max_size">10240000</parameter>
      <parameter key="namer">App\Common\Service\FileUpload\UploadFileNamer</parameter>
      <parameter key="route_prefix">/uploads/identity</parameter>
      <parameter key="endpoints" type="collection">
        <parameter key="upload">/common/uploader/identity</parameter>
        <parameter key="progress">null</parameter>
        <parameter key="cancel">null</parameter>
      </parameter>
      <parameter key="storage" type="collection">
        <parameter key="type">flysystem</parameter>
        <parameter key="directory">D:\phpStudy\WWW\foxdou/web/uploads/identity</parameter>
        <parameter key="filesystem">oneup_flysystem.identity_image_filesystem</parameter>
        <parameter key="service">null</parameter>
        <parameter key="stream_wrapper">null</parameter>
        <parameter key="sync_buffer_size">100K</parameter>
      </parameter>
      <parameter key="allowed_mimetypes" type="collection">
        <parameter key="image/jpeg" type="collection">
          <parameter>jpg</parameter>
          <parameter>jpeg</parameter>
          <parameter>jpe</parameter>
        </parameter>
        <parameter key="image/png" type="collection">
          <parameter>png</parameter>
        </parameter>
        <parameter key="image/gif" type="collection">
          <parameter>gif</parameter>
        </parameter>
        <parameter key="image/bmp" type="collection">
          <parameter>bmp</parameter>
        </parameter>
      </parameter>
      <parameter key="custom_frontend" type="collection">
        <parameter key="name">null</parameter>
        <parameter key="class">null</parameter>
      </parameter>
      <parameter key="disallowed_mimetypes" type="collection"/>
      <parameter key="error_handler">null</parameter>
      <parameter key="use_orphanage">false</parameter>
      <parameter key="enable_progress">false</parameter>
      <parameter key="enable_cancelation">false</parameter>
      <parameter key="root_folder">false</parameter>
    </parameter>
    <parameter key="oneup_uploader.config" type="collection">
      <parameter key="mappings" type="collection">
        <parameter key="default" type="collection">
          <parameter key="frontend">dropzone</parameter>
          <parameter key="max_size">10240000</parameter>
          <parameter key="namer">App\Common\Service\FileUpload\UploadFileNamer</parameter>
          <parameter key="route_prefix">/uploads/files</parameter>
          <parameter key="endpoints" type="collection">
            <parameter key="upload">/common/uploader/default</parameter>
            <parameter key="progress">null</parameter>
            <parameter key="cancel">null</parameter>
          </parameter>
          <parameter key="storage" type="collection">
            <parameter key="type">flysystem</parameter>
            <parameter key="directory">D:\phpStudy\WWW\foxdou/web/uploads/files</parameter>
            <parameter key="filesystem">oneup_flysystem.default_filesystem</parameter>
            <parameter key="service">null</parameter>
            <parameter key="stream_wrapper">null</parameter>
            <parameter key="sync_buffer_size">100K</parameter>
          </parameter>
          <parameter key="allowed_mimetypes" type="collection">
            <parameter key="image/jpeg" type="collection">
              <parameter>jpg</parameter>
              <parameter>jpeg</parameter>
              <parameter>jpe</parameter>
            </parameter>
            <parameter key="image/png" type="collection">
              <parameter>png</parameter>
            </parameter>
            <parameter key="image/gif" type="collection">
              <parameter>gif</parameter>
            </parameter>
            <parameter key="image/zip" type="collection">
              <parameter>zip</parameter>
            </parameter>
            <parameter key="image/doc" type="collection">
              <parameter>doc</parameter>
            </parameter>
            <parameter key="image/pdf" type="collection">
              <parameter>pdf</parameter>
            </parameter>
            <parameter key="image/txt" type="collection">
              <parameter>txt</parameter>
            </parameter>
            <parameter key="image/xls" type="collection">
              <parameter>xls</parameter>
            </parameter>
          </parameter>
          <parameter key="custom_frontend" type="collection">
            <parameter key="name">null</parameter>
            <parameter key="class">null</parameter>
          </parameter>
          <parameter key="disallowed_mimetypes" type="collection"/>
          <parameter key="error_handler">null</parameter>
          <parameter key="use_orphanage">false</parameter>
          <parameter key="enable_progress">false</parameter>
          <parameter key="enable_cancelation">false</parameter>
          <parameter key="root_folder">false</parameter>
        </parameter>
        <parameter key="admin_article" type="collection">
          <parameter key="frontend">dropzone</parameter>
          <parameter key="max_size">5242880</parameter>
          <parameter key="namer">App\Common\Service\FileUpload\UploadFileNamer</parameter>
          <parameter key="route_prefix">/uploads/article</parameter>
          <parameter key="endpoints" type="collection">
            <parameter key="upload">/admin/uploader/article</parameter>
            <parameter key="progress">null</parameter>
            <parameter key="cancel">null</parameter>
          </parameter>
          <parameter key="storage" type="collection">
            <parameter key="type">flysystem</parameter>
            <parameter key="directory">D:\phpStudy\WWW\foxdou/web/uploads/article</parameter>
            <parameter key="filesystem">oneup_flysystem.admin_article_filesystem</parameter>
            <parameter key="service">null</parameter>
            <parameter key="stream_wrapper">null</parameter>
            <parameter key="sync_buffer_size">100K</parameter>
          </parameter>
          <parameter key="allowed_mimetypes" type="collection">
            <parameter key="image/jpeg" type="collection">
              <parameter>jpg</parameter>
              <parameter>jpeg</parameter>
              <parameter>jpe</parameter>
            </parameter>
            <parameter key="image/png" type="collection">
              <parameter>png</parameter>
            </parameter>
            <parameter key="image/gif" type="collection">
              <parameter>gif</parameter>
            </parameter>
            <parameter key="image/bmp" type="collection">
              <parameter>bmp</parameter>
            </parameter>
          </parameter>
          <parameter key="custom_frontend" type="collection">
            <parameter key="name">null</parameter>
            <parameter key="class">null</parameter>
          </parameter>
          <parameter key="disallowed_mimetypes" type="collection"/>
          <parameter key="error_handler">null</parameter>
          <parameter key="use_orphanage">false</parameter>
          <parameter key="enable_progress">false</parameter>
          <parameter key="enable_cancelation">false</parameter>
          <parameter key="root_folder">false</parameter>
        </parameter>
        <parameter key="identity_image" type="collection">
          <parameter key="frontend">dropzone</parameter>
          <parameter key="max_size">10240000</parameter>
          <parameter key="namer">App\Common\Service\FileUpload\UploadFileNamer</parameter>
          <parameter key="route_prefix">/uploads/identity</parameter>
          <parameter key="endpoints" type="collection">
            <parameter key="upload">/common/uploader/identity</parameter>
            <parameter key="progress">null</parameter>
            <parameter key="cancel">null</parameter>
          </parameter>
          <parameter key="storage" type="collection">
            <parameter key="type">flysystem</parameter>
            <parameter key="directory">D:\phpStudy\WWW\foxdou/web/uploads/identity</parameter>
            <parameter key="filesystem">oneup_flysystem.identity_image_filesystem</parameter>
            <parameter key="service">null</parameter>
            <parameter key="stream_wrapper">null</parameter>
            <parameter key="sync_buffer_size">100K</parameter>
          </parameter>
          <parameter key="allowed_mimetypes" type="collection">
            <parameter key="image/jpeg" type="collection">
              <parameter>jpg</parameter>
              <parameter>jpeg</parameter>
              <parameter>jpe</parameter>
            </parameter>
            <parameter key="image/png" type="collection">
              <parameter>png</parameter>
            </parameter>
            <parameter key="image/gif" type="collection">
              <parameter>gif</parameter>
            </parameter>
            <parameter key="image/bmp" type="collection">
              <parameter>bmp</parameter>
            </parameter>
          </parameter>
          <parameter key="custom_frontend" type="collection">
            <parameter key="name">null</parameter>
            <parameter key="class">null</parameter>
          </parameter>
          <parameter key="disallowed_mimetypes" type="collection"/>
          <parameter key="error_handler">null</parameter>
          <parameter key="use_orphanage">false</parameter>
          <parameter key="enable_progress">false</parameter>
          <parameter key="enable_cancelation">false</parameter>
          <parameter key="root_folder">false</parameter>
        </parameter>
      </parameter>
      <parameter key="chunks" type="collection">
        <parameter key="maxage">604800</parameter>
        <parameter key="storage" type="collection">
          <parameter key="type">filesystem</parameter>
          <parameter key="filesystem">null</parameter>
          <parameter key="directory">D:\phpStudy\WWW\foxdou\var\cache\dev/uploader/chunks</parameter>
          <parameter key="stream_wrapper">null</parameter>
          <parameter key="sync_buffer_size">100K</parameter>
          <parameter key="prefix">chunks</parameter>
        </parameter>
        <parameter key="load_distribution">true</parameter>
      </parameter>
      <parameter key="orphanage" type="collection">
        <parameter key="maxage">604800</parameter>
        <parameter key="directory">D:\phpStudy\WWW\foxdou\var\cache\dev/uploader/orphanage</parameter>
      </parameter>
      <parameter key="twig">true</parameter>
    </parameter>
    <parameter key="oneup_uploader.controllers" type="collection">
      <parameter key="default" type="collection">
        <parameter>oneup_uploader.controller.default</parameter>
        <parameter type="collection">
          <parameter key="enable_progress">false</parameter>
          <parameter key="enable_cancelation">false</parameter>
          <parameter key="route_prefix">/uploads/files</parameter>
          <parameter key="endpoints" type="collection">
            <parameter key="upload">/common/uploader/default</parameter>
            <parameter key="progress">null</parameter>
            <parameter key="cancel">null</parameter>
          </parameter>
        </parameter>
      </parameter>
      <parameter key="admin_article" type="collection">
        <parameter>oneup_uploader.controller.admin_article</parameter>
        <parameter type="collection">
          <parameter key="enable_progress">false</parameter>
          <parameter key="enable_cancelation">false</parameter>
          <parameter key="route_prefix">/uploads/article</parameter>
          <parameter key="endpoints" type="collection">
            <parameter key="upload">/admin/uploader/article</parameter>
            <parameter key="progress">null</parameter>
            <parameter key="cancel">null</parameter>
          </parameter>
        </parameter>
      </parameter>
      <parameter key="identity_image" type="collection">
        <parameter>oneup_uploader.controller.identity_image</parameter>
        <parameter type="collection">
          <parameter key="enable_progress">false</parameter>
          <parameter key="enable_cancelation">false</parameter>
          <parameter key="route_prefix">/uploads/identity</parameter>
          <parameter key="endpoints" type="collection">
            <parameter key="upload">/common/uploader/identity</parameter>
            <parameter key="progress">null</parameter>
            <parameter key="cancel">null</parameter>
          </parameter>
        </parameter>
      </parameter>
    </parameter>
    <parameter key="oneup_uploader.maxsize" type="collection">
      <parameter key="default">2097152</parameter>
      <parameter key="admin_article">2097152</parameter>
      <parameter key="identity_image">2097152</parameter>
    </parameter>
    <parameter key="console.command.ids" type="collection"/>
  </parameters>
  <services>
    <service id="service_container" class="Symfony\Component\DependencyInjection\ContainerInterface" public="true" synthetic="true"/>
    <service id="SensioLabs\Security\SecurityChecker" class="SensioLabs\Security\SecurityChecker" public="false"/>
    <service id="SensioLabs\Security\Command\SecurityCheckerCommand" class="SensioLabs\Security\Command\SecurityCheckerCommand">
      <tag name="console.command"/>
      <argument type="service" id="SensioLabs\Security\SecurityChecker"/>
      <call method="setName">
        <argument>security:check</argument>
      </call>
    </service>
    <service id="App\Admin\Command\UpdateProductPriceCommand" class="App\Admin\Command\UpdateProductPriceCommand" public="false" autowire="true" autoconfigure="true">
      <tag name="container.service_subscriber"/>
      <tag name="console.command"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.XCejSI_.App\Admin\Command\UpdateProductPriceCommand"/>
      </call>
      <call method="setName">
        <argument>product:update_price</argument>
      </call>
    </service>
    <service id="App\Admin\Controller\AdminBaseController" class="App\Admin\Controller\AdminBaseController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="monolog.logger"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.YUbLTjT.App\Admin\Controller\AdminBaseController"/>
      </call>
    </service>
    <service id="App\Admin\Controller\AuditController" class="App\Admin\Controller\AuditController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="monolog.logger"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.YUbLTjT.App\Admin\Controller\AuditController"/>
      </call>
    </service>
    <service id="App\Admin\Controller\DashboardController" class="App\Admin\Controller\DashboardController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="monolog.logger"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.YUbLTjT.App\Admin\Controller\DashboardController"/>
      </call>
    </service>
    <service id="App\Admin\Controller\FileUploadController" class="App\Admin\Controller\FileUploadController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="monolog.logger"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.0ACZ0gT.App\Admin\Controller\FileUploadController"/>
      </call>
    </service>
    <service id="App\Admin\Controller\FinanceController" class="App\Admin\Controller\FinanceController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="monolog.logger"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.YUbLTjT.App\Admin\Controller\FinanceController"/>
      </call>
    </service>
    <service id="App\Admin\Controller\FinancePaymentMethodController" class="App\Admin\Controller\FinancePaymentMethodController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="monolog.logger"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.YUbLTjT.App\Admin\Controller\FinancePaymentMethodController"/>
      </call>
    </service>
    <service id="App\Admin\Controller\FinanceWithdrawController" class="App\Admin\Controller\FinanceWithdrawController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="monolog.logger"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.YUbLTjT.App\Admin\Controller\FinanceWithdrawController"/>
      </call>
    </service>
    <service id="App\Admin\Controller\LoginController" class="App\Admin\Controller\LoginController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="monolog.logger"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.YUbLTjT.App\Admin\Controller\LoginController"/>
      </call>
    </service>
    <service id="App\Admin\Controller\NotifyMessageController" class="App\Admin\Controller\NotifyMessageController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="monolog.logger"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.YUbLTjT.App\Admin\Controller\NotifyMessageController"/>
      </call>
    </service>
    <service id="App\Admin\Controller\OrderController" class="App\Admin\Controller\OrderController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="monolog.logger"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.YUbLTjT.App\Admin\Controller\OrderController"/>
      </call>
    </service>
    <service id="App\Admin\Controller\PlugController" class="App\Admin\Controller\PlugController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="monolog.logger"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.YUbLTjT.App\Admin\Controller\PlugController"/>
      </call>
    </service>
    <service id="App\Admin\Controller\ProductManagement\AbstractSourceGroupController" class="App\Admin\Controller\ProductManagement\AbstractSourceGroupController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="monolog.logger"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.YUbLTjT.App\Admin\Controller\ProductManagement\AbstractSourceGroupController"/>
      </call>
    </service>
    <service id="App\Admin\Controller\ProductManagement\FlowController" class="App\Admin\Controller\ProductManagement\FlowController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="monolog.logger"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.iKXEuAo.App\Admin\Controller\ProductManagement\FlowController"/>
      </call>
    </service>
    <service id="App\Admin\Controller\ProductManagement\MobileController" class="App\Admin\Controller\ProductManagement\MobileController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="monolog.logger"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.ygItHSn.App\Admin\Controller\ProductManagement\MobileController"/>
      </call>
    </service>
    <service id="App\Admin\Controller\ProductManagement\PhoneNumberAttributionController" class="App\Admin\Controller\ProductManagement\PhoneNumberAttributionController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="monolog.logger"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.0ACZ0gT.App\Admin\Controller\ProductManagement\PhoneNumberAttributionController"/>
      </call>
    </service>
    <service id="App\Admin\Controller\ProductManagement\RegionController" class="App\Admin\Controller\ProductManagement\RegionController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="monolog.logger"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.0ACZ0gT.App\Admin\Controller\ProductManagement\RegionController"/>
      </call>
    </service>
    <service id="App\Admin\Controller\ProductManagement\SourceGroupController" class="App\Admin\Controller\ProductManagement\SourceGroupController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="monolog.logger"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.YUbLTjT.App\Admin\Controller\ProductManagement\SourceGroupController"/>
      </call>
    </service>
    <service id="App\Admin\Controller\ProductManagement\SpecialUserSettingController" class="App\Admin\Controller\ProductManagement\SpecialUserSettingController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="monolog.logger"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.65IfjS0.App\Admin\Controller\ProductManagement\SpecialUserSettingController"/>
      </call>
    </service>
    <service id="App\Admin\Controller\ProductManagement\TelephoneController" class="App\Admin\Controller\ProductManagement\TelephoneController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="monolog.logger"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.xu2gSuk.App\Admin\Controller\ProductManagement\TelephoneController"/>
      </call>
    </service>
    <service id="App\Admin\Controller\ProductManagement\TencentController" class="App\Admin\Controller\ProductManagement\TencentController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="monolog.logger"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.jYhpx6d.App\Admin\Controller\ProductManagement\TencentController"/>
      </call>
    </service>
    <service id="App\Admin\Controller\ProductManagement\TencentProductCategoryController" class="App\Admin\Controller\ProductManagement\TencentProductCategoryController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="monolog.logger"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.0ACZ0gT.App\Admin\Controller\ProductManagement\TencentProductCategoryController"/>
      </call>
    </service>
    <service id="App\Admin\Controller\ProductManagement\VirtualNetworkOperatorController" class="App\Admin\Controller\ProductManagement\VirtualNetworkOperatorController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="monolog.logger"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.0ACZ0gT.App\Admin\Controller\ProductManagement\VirtualNetworkOperatorController"/>
      </call>
    </service>
    <service id="App\Admin\Controller\ProfileController" class="App\Admin\Controller\ProfileController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="monolog.logger"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.YUbLTjT.App\Admin\Controller\ProfileController"/>
      </call>
    </service>
    <service id="App\Admin\Controller\ServicesMallOrderController" class="App\Admin\Controller\ServicesMallOrderController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="monolog.logger"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.YUbLTjT.App\Admin\Controller\ServicesMallOrderController"/>
      </call>
    </service>
    <service id="App\Admin\Controller\ServicesMallProductController" class="App\Admin\Controller\ServicesMallProductController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="monolog.logger"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.YUbLTjT.App\Admin\Controller\ServicesMallProductController"/>
      </call>
    </service>
    <service id="App\Admin\Controller\SystemAdministration\AdministratorController" class="App\Admin\Controller\SystemAdministration\AdministratorController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="monolog.logger"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.YUbLTjT.App\Admin\Controller\SystemAdministration\AdministratorController"/>
      </call>
    </service>
    <service id="App\Admin\Controller\SystemAdministration\AdministratorRoleController" class="App\Admin\Controller\SystemAdministration\AdministratorRoleController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="monolog.logger"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.YUbLTjT.App\Admin\Controller\SystemAdministration\AdministratorRoleController"/>
      </call>
    </service>
    <service id="App\Admin\Controller\SystemAdministration\ArticleCategoryController" class="App\Admin\Controller\SystemAdministration\ArticleCategoryController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="monolog.logger"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.YUbLTjT.App\Admin\Controller\SystemAdministration\ArticleCategoryController"/>
      </call>
    </service>
    <service id="App\Admin\Controller\SystemAdministration\ArticleController" class="App\Admin\Controller\SystemAdministration\ArticleController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="monolog.logger"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.YUbLTjT.App\Admin\Controller\SystemAdministration\ArticleController"/>
      </call>
    </service>
    <service id="App\Admin\Controller\SystemAdministration\CacheController" class="App\Admin\Controller\SystemAdministration\CacheController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="monolog.logger"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.YUbLTjT.App\Admin\Controller\SystemAdministration\CacheController"/>
      </call>
    </service>
    <service id="App\Admin\Controller\SystemAdministration\LoggingController" class="App\Admin\Controller\SystemAdministration\LoggingController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="monolog.logger"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.YUbLTjT.App\Admin\Controller\SystemAdministration\LoggingController"/>
      </call>
    </service>
    <service id="App\Admin\Controller\SystemAdministration\MiscController" class="App\Admin\Controller\SystemAdministration\MiscController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="monolog.logger"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.YUbLTjT.App\Admin\Controller\SystemAdministration\MiscController"/>
      </call>
    </service>
    <service id="App\Admin\Controller\SystemAdministration\RedisController" class="App\Admin\Controller\SystemAdministration\RedisController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="monolog.logger"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.YUbLTjT.App\Admin\Controller\SystemAdministration\RedisController"/>
      </call>
    </service>
    <service id="App\Admin\Controller\SystemAdministration\SystemAdministrationController" class="App\Admin\Controller\SystemAdministration\SystemAdministrationController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="monolog.logger"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.YUbLTjT.App\Admin\Controller\SystemAdministration\SystemAdministrationController"/>
      </call>
    </service>
    <service id="App\Admin\Controller\SystemAdministration\SystemSettingController" class="App\Admin\Controller\SystemAdministration\SystemSettingController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="monolog.logger"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.YUbLTjT.App\Admin\Controller\SystemAdministration\SystemSettingController"/>
      </call>
    </service>
    <service id="App\Admin\Controller\UserApplicationController" class="App\Admin\Controller\UserApplicationController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="monolog.logger"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.YUbLTjT.App\Admin\Controller\UserApplicationController"/>
      </call>
    </service>
    <service id="App\Admin\Controller\UserController" class="App\Admin\Controller\UserController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="monolog.logger"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.YUbLTjT.App\Admin\Controller\UserController"/>
      </call>
    </service>
    <service id="App\Admin\Controller\UserDetail\MainController" class="App\Admin\Controller\UserDetail\MainController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="monolog.logger"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.YUbLTjT.App\Admin\Controller\UserDetail\MainController"/>
      </call>
    </service>
    <service id="App\Admin\Controller\UserDetail\OpenPlatformController" class="App\Admin\Controller\UserDetail\OpenPlatformController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="monolog.logger"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.YUbLTjT.App\Admin\Controller\UserDetail\OpenPlatformController"/>
      </call>
    </service>
    <service id="App\Admin\Controller\UserDetail\ResellerPlatformController" class="App\Admin\Controller\UserDetail\ResellerPlatformController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="monolog.logger"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.YUbLTjT.App\Admin\Controller\UserDetail\ResellerPlatformController"/>
      </call>
    </service>
    <service id="App\Admin\Controller\UserDetail\SupplierPlatformController" class="App\Admin\Controller\UserDetail\SupplierPlatformController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="monolog.logger"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.YUbLTjT.App\Admin\Controller\UserDetail\SupplierPlatformController"/>
      </call>
    </service>
    <service id="App\Admin\Controller\UserDetail\UserDetailController" class="App\Admin\Controller\UserDetail\UserDetailController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="monolog.logger"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.YUbLTjT.App\Admin\Controller\UserDetail\UserDetailController"/>
      </call>
    </service>
    <service id="App\Admin\Controller\UserSubAccountLevelController" class="App\Admin\Controller\UserSubAccountLevelController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="monolog.logger"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.YUbLTjT.App\Admin\Controller\UserSubAccountLevelController"/>
      </call>
    </service>
    <service id="App\Admin\Form\AdminEditForm" class="App\Admin\Form\AdminEditForm" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.reset" method="reset"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.qFNxiTm.App\Admin\Form\AdminEditForm"/>
      </call>
    </service>
    <service id="App\Admin\Form\ArticleEditForm" class="App\Admin\Form\ArticleEditForm" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.reset" method="reset"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.qFNxiTm.App\Admin\Form\ArticleEditForm"/>
      </call>
    </service>
    <service id="App\Admin\Form\PhoneNumberAttributionEditForm" class="App\Admin\Form\PhoneNumberAttributionEditForm" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.reset" method="reset"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.qFNxiTm.App\Admin\Form\PhoneNumberAttributionEditForm"/>
      </call>
    </service>
    <service id="App\Admin\Form\ProductSearchForm" class="App\Admin\Form\ProductSearchForm" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.reset" method="reset"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.qFNxiTm.App\Admin\Form\ProductSearchForm"/>
      </call>
    </service>
    <service id="App\Admin\Form\RegionEditForm" class="App\Admin\Form\RegionEditForm" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.reset" method="reset"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.qFNxiTm.App\Admin\Form\RegionEditForm"/>
      </call>
    </service>
    <service id="App\Admin\Form\SystemSetting\PassportSettingForm" class="App\Admin\Form\SystemSetting\PassportSettingForm" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.reset" method="reset"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.qFNxiTm.App\Admin\Form\SystemSetting\PassportSettingForm"/>
      </call>
    </service>
    <service id="App\Admin\Form\SystemSetting\ResellerPlatformSettingForm" class="App\Admin\Form\SystemSetting\ResellerPlatformSettingForm" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.reset" method="reset"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.qFNxiTm.App\Admin\Form\SystemSetting\ResellerPlatformSettingForm"/>
      </call>
    </service>
    <service id="App\Admin\Form\SystemSetting\SupplierPlatformSettingForm" class="App\Admin\Form\SystemSetting\SupplierPlatformSettingForm" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.reset" method="reset"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.qFNxiTm.App\Admin\Form\SystemSetting\SupplierPlatformSettingForm"/>
      </call>
    </service>
    <service id="App\Admin\Form\SystemSetting\SystemForm" class="App\Admin\Form\SystemSetting\SystemForm" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.reset" method="reset"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.qFNxiTm.App\Admin\Form\SystemSetting\SystemForm"/>
      </call>
    </service>
    <service id="App\Admin\Form\TencentProductCategoryEditForm" class="App\Admin\Form\TencentProductCategoryEditForm" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.reset" method="reset"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.qFNxiTm.App\Admin\Form\TencentProductCategoryEditForm"/>
      </call>
    </service>
    <service id="App\Admin\Form\VirtualNetworkOperatorEditForm" class="App\Admin\Form\VirtualNetworkOperatorEditForm" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.reset" method="reset"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.qFNxiTm.App\Admin\Form\VirtualNetworkOperatorEditForm"/>
      </call>
    </service>
    <service id="App\Admin\Service\AdminBaseService" class="App\Admin\Service\AdminBaseService" public="false" autowire="true" autoconfigure="true">
      <tag name="container.service_subscriber"/>
      <argument type="service" id="monolog.logger"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.tw2ef6c.App\Admin\Service\AdminBaseService"/>
      </call>
    </service>
    <service id="App\Admin\Service\AdminOperatonLogManager" class="App\Admin\Service\AdminOperatonLogManager" public="false" autowire="true" autoconfigure="true">
      <tag name="container.service_subscriber"/>
      <argument type="service" id="monolog.logger"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.fleq5MM.App\Admin\Service\AdminOperatonLogManager"/>
      </call>
    </service>
    <service id="App\Admin\Service\AdminUserManager" class="App\Admin\Service\AdminUserManager" public="false" autowire="true" autoconfigure="true">
      <tag name="container.service_subscriber"/>
      <argument type="service" id="monolog.logger"/>
      <argument type="service" id="App\Admin\Service\AdminOperatonLogManager"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.fleq5MM.App\Admin\Service\AdminUserManager"/>
      </call>
    </service>
    <service id="App\Admin\Service\AdminUserProvider" class="App\Admin\Service\AdminUserProvider" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\Admin\Service\BaseProductManager" class="App\Admin\Service\BaseProductManager" public="false" autowire="true" autoconfigure="true">
      <tag name="container.service_subscriber"/>
      <argument type="service" id="monolog.logger"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.tw2ef6c.App\Admin\Service\BaseProductManager"/>
      </call>
    </service>
    <service id="App\Admin\Service\ProductFlowManager" class="App\Admin\Service\ProductFlowManager" public="false" autowire="true" autoconfigure="true">
      <tag name="container.service_subscriber"/>
      <argument type="service" id="monolog.logger"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.tw2ef6c.App\Admin\Service\ProductFlowManager"/>
      </call>
    </service>
    <service id="App\Admin\Service\ProductMobileManager" class="App\Admin\Service\ProductMobileManager" public="false" autowire="true" autoconfigure="true">
      <tag name="container.service_subscriber"/>
      <argument type="service" id="monolog.logger"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.tw2ef6c.App\Admin\Service\ProductMobileManager"/>
      </call>
    </service>
    <service id="App\Admin\Service\ProductTelephoneManager" class="App\Admin\Service\ProductTelephoneManager" public="false" autowire="true" autoconfigure="true">
      <tag name="container.service_subscriber"/>
      <argument type="service" id="monolog.logger"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.tw2ef6c.App\Admin\Service\ProductTelephoneManager"/>
      </call>
    </service>
    <service id="App\Admin\Service\ProductTencentManager" class="App\Admin\Service\ProductTencentManager" public="false" autowire="true" autoconfigure="true">
      <tag name="container.service_subscriber"/>
      <argument type="service" id="monolog.logger"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.tw2ef6c.App\Admin\Service\ProductTencentManager"/>
      </call>
    </service>
    <service id="App\Common\Bundle\SimplePay\DependencyInjection\Configuration" class="App\Common\Bundle\SimplePay\DependencyInjection\Configuration" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\Common\Bundle\SimplePay\DependencyInjection\SimplePayExtension" class="App\Common\Bundle\SimplePay\DependencyInjection\SimplePayExtension" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\Common\Bundle\SimplePay\Factory\PaymentGatewayFactory" class="App\Common\Bundle\SimplePay\Factory\PaymentGatewayFactory" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\Common\Bundle\SimplePay\Service\AlipayService" class="App\Common\Bundle\SimplePay\Service\AlipayService" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="monolog.logger"/>
      <argument>alipay</argument>
      <argument>%simple_pay%</argument>
      <factory class="\App\Common\Bundle\SimplePay\Factory\PaymentGatewayFactory" method="create"/>
    </service>
    <service id="App\Common\Bundle\SimplePay\Service\WechatService" class="App\Common\Bundle\SimplePay\Service\WechatService" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="monolog.logger"/>
      <argument>wechat</argument>
      <argument>%simple_pay%</argument>
      <factory class="\App\Common\Bundle\SimplePay\Factory\PaymentGatewayFactory" method="create"/>
    </service>
    <service id="App\Common\Bundle\SimplePay\SimplePayBundle" class="App\Common\Bundle\SimplePay\SimplePayBundle" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\Common\Bundle\SimpleRecord\DependencyInjection\Configuration" class="App\Common\Bundle\SimpleRecord\DependencyInjection\Configuration" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\Common\Bundle\SimpleRecord\DependencyInjection\SimpleRecordExtension" class="App\Common\Bundle\SimpleRecord\DependencyInjection\SimpleRecordExtension" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\Common\Bundle\SimpleRecord\SimpleRecordBundle" class="App\Common\Bundle\SimpleRecord\SimpleRecordBundle" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\Common\Command\AddUserCommand" class="App\Common\Command\AddUserCommand" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\Common\Command\GenerateModelCommand" class="App\Common\Command\GenerateModelCommand" public="false" autowire="true" autoconfigure="true">
      <tag name="console.command"/>
      <call method="setName">
        <argument>generate:model</argument>
      </call>
    </service>
    <service id="App\Common\Command\GenerateSettingClasses" class="App\Common\Command\GenerateSettingClasses" public="false" autowire="true" autoconfigure="true">
      <tag name="console.command"/>
      <call method="setName">
        <argument>generate:settings</argument>
      </call>
    </service>
    <service id="App\Common\Controller\ArticleController" class="App\Common\Controller\ArticleController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="monolog.logger"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.0ACZ0gT.App\Common\Controller\ArticleController"/>
      </call>
    </service>
    <service id="App\Common\Controller\BaseController" class="App\Common\Controller\BaseController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="monolog.logger"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.0ACZ0gT.App\Common\Controller\BaseController"/>
      </call>
    </service>
    <service id="App\Common\Controller\CrudController" class="App\Common\Controller\CrudController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="monolog.logger"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.0ACZ0gT.App\Common\Controller\CrudController"/>
      </call>
    </service>
    <service id="App\Common\Controller\FileUploadController" class="App\Common\Controller\FileUploadController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="monolog.logger"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.0ACZ0gT.App\Common\Controller\FileUploadController"/>
      </call>
    </service>
    <service id="App\Common\Controller\Finance\BalanceController" class="App\Common\Controller\Finance\BalanceController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="monolog.logger"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.0ACZ0gT.App\Common\Controller\Finance\BalanceController"/>
      </call>
    </service>
    <service id="App\Common\Controller\FrontpageController" class="App\Common\Controller\FrontpageController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="monolog.logger"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.0ACZ0gT.App\Common\Controller\FrontpageController"/>
      </call>
    </service>
    <service id="App\Common\Controller\RecaptchaController" class="App\Common\Controller\RecaptchaController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="monolog.logger"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.0ACZ0gT.App\Common\Controller\RecaptchaController"/>
      </call>
    </service>
    <service id="App\Common\Controller\SmsVerifierController" class="App\Common\Controller\SmsVerifierController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="monolog.logger"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.0ACZ0gT.App\Common\Controller\SmsVerifierController"/>
      </call>
    </service>
    <service id="App\Common\Database\Connection\DefaultConnection" class="App\Common\Database\Connection\DefaultConnection" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\Common\Event\IllegalOperationEvent" class="App\Common\Event\IllegalOperationEvent" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\Common\Exception\OrderException" class="App\Common\Exception\OrderException" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\Common\Exception\TransferFailedException" class="App\Common\Exception\TransferFailedException" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\Common\Form\IndividualUserRegisterForm" class="App\Common\Form\IndividualUserRegisterForm" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.reset" method="reset"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.qFNxiTm.App\Common\Form\IndividualUserRegisterForm"/>
      </call>
    </service>
    <service id="App\Common\Form\UserForm" class="App\Common\Form\UserForm" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.reset" method="reset"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.qFNxiTm.App\Common\Form\UserForm"/>
      </call>
    </service>
    <service id="App\Common\Handler\AccountVerificationHandler" class="App\Common\Handler\AccountVerificationHandler" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="App\Common\Service\SystemSetting"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="router.default"/>
      <argument type="service" id="session"/>
      <argument type="service" id="security.access_map"/>
      <argument>true</argument>
    </service>
    <service id="App\Common\Handler\AuthenticationFailureListener" class="App\Common\Handler\AuthenticationFailureListener" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
    </service>
    <service id="App\Common\Handler\KernelResponseSubscriber" class="App\Common\Handler\KernelResponseSubscriber" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument>true</argument>
    </service>
    <service id="App\Common\Handler\KernelViewSubscriber" class="App\Common\Handler\KernelViewSubscriber" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument>true</argument>
    </service>
    <service id="App\Common\Handler\RequestTerminateSubscriber" class="App\Common\Handler\RequestTerminateSubscriber" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
    </service>
    <service id="App\Common\Handler\SystemMaintainModeHandler" class="App\Common\Handler\SystemMaintainModeHandler" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="App\Common\Service\SystemSetting"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="router.default"/>
      <argument type="service" id="session"/>
      <argument type="service" id="security.access_map"/>
      <argument>true</argument>
    </service>
    <service id="App\Common\Handler\UserLoginSuccessHandler" class="App\Common\Handler\UserLoginSuccessHandler" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="router.default"/>
    </service>
    <service id="App\Common\Handler\UserLogoutSuccessHandler" class="App\Common\Handler\UserLogoutSuccessHandler" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\Common\Service\ArticleManager" class="App\Common\Service\ArticleManager" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\Common\Service\AuthenticationService" class="App\Common\Service\AuthenticationService" public="false" autowire="true" autoconfigure="true">
      <tag name="container.service_subscriber"/>
      <argument type="service" id="monolog.logger"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.fleq5MM.App\Common\Service\AuthenticationService"/>
      </call>
    </service>
    <service id="App\Common\Service\Cache\AppCacheRedis" class="App\Common\Service\Cache\AppCacheRedis" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.reset" method="reset"/>
      <call method="setLogger">
        <argument type="service" id="monolog.logger"/>
      </call>
    </service>
    <service id="App\Common\Service\Cache\ChainCache" class="App\Common\Service\Cache\ChainCache" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.reset" method="reset"/>
      <argument type="collection">
        <argument type="service" id="app.cache.apcu"/>
        <argument type="service" id="app.cache.redis"/>
      </argument>
    </service>
    <service id="App\Common\Service\CsrfTokenManager" class="App\Common\Service\CsrfTokenManager" public="false" autowire="true" autoconfigure="true">
      <tag name="container.service_subscriber"/>
      <argument type="service" id="monolog.logger"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.fleq5MM.App\Common\Service\CsrfTokenManager"/>
      </call>
    </service>
    <service id="App\Common\Service\ExternalService\IdentityVerifyService" class="App\Common\Service\ExternalService\IdentityVerifyService" public="false" autowire="true" autoconfigure="true">
      <tag name="container.service_subscriber"/>
      <argument type="service" id="monolog.logger"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.fleq5MM.App\Common\Service\ExternalService\IdentityVerifyService"/>
      </call>
    </service>
    <service id="App\Common\Service\FileUpload\UploadFileListener" class="App\Common\Service\FileUpload\UploadFileListener" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="monolog.logger"/>
      <argument type="service" id="parameter_bag"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.fleq5MM.App\Common\Service\FileUpload\UploadFileListener"/>
      </call>
    </service>
    <service id="App\Common\Service\FileUpload\UploadFileManager" class="App\Common\Service\FileUpload\UploadFileManager" public="false" autowire="true" autoconfigure="true">
      <tag name="container.service_subscriber"/>
      <argument type="service" id="monolog.logger"/>
      <argument type="service" id="parameter_bag"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.fleq5MM.App\Common\Service\FileUpload\UploadFileManager"/>
      </call>
    </service>
    <service id="App\Common\Service\FileUpload\UploadFileNamer" class="App\Common\Service\FileUpload\UploadFileNamer" public="true" autowire="true" autoconfigure="true"/>
    <service id="App\Common\Service\IspManager" class="App\Common\Service\IspManager" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\Common\Service\Order\OrderService" class="App\Common\Service\Order\OrderService" public="false" autowire="true" autoconfigure="true">
      <tag name="container.service_subscriber"/>
      <argument type="service" id="monolog.logger"/>
      <argument type="service" id="App\Reseller\Service\ProductService"/>
      <argument type="service" id="App\Common\Service\SystemSettingManager"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.fleq5MM.App\Common\Service\Order\OrderService"/>
      </call>
    </service>
    <service id="App\Common\Service\Payment\AlipayService" class="App\Common\Service\Payment\AlipayService" public="false" autowire="true" autoconfigure="true">
      <tag name="container.service_subscriber"/>
      <argument type="service" id="monolog.logger"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.fleq5MM.App\Common\Service\Payment\AlipayService"/>
      </call>
    </service>
    <service id="App\Common\Service\Payment\UserMoneyTradeLogManager" class="App\Common\Service\Payment\UserMoneyTradeLogManager" public="false" autowire="true" autoconfigure="true">
      <tag name="container.service_subscriber"/>
      <argument type="service" id="monolog.logger"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.fleq5MM.App\Common\Service\Payment\UserMoneyTradeLogManager"/>
      </call>
    </service>
    <service id="App\Common\Service\Product\ProductCate" class="App\Common\Service\Product\ProductCate" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\Common\Service\QueryMobileBalance" class="App\Common\Service\QueryMobileBalance" public="false" autowire="true" autoconfigure="true">
      <tag name="container.service_subscriber"/>
      <argument type="service" id="monolog.logger"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.fleq5MM.App\Common\Service\QueryMobileBalance"/>
      </call>
    </service>
    <service id="App\Common\Service\RecaptchaService" class="App\Common\Service\RecaptchaService" public="false" autowire="true" autoconfigure="true">
      <tag name="container.service_subscriber"/>
      <argument type="service" id="session"/>
      <argument type="service" id="monolog.logger"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.fleq5MM.App\Common\Service\RecaptchaService"/>
      </call>
    </service>
    <service id="App\Common\Service\SimpleRecordResetter" class="App\Common\Service\SimpleRecordResetter" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.reset" method="reset"/>
    </service>
    <service id="App\Common\Service\SmsService" class="App\Common\Service\SmsService" public="false" autowire="true" autoconfigure="true">
      <tag name="container.service_subscriber"/>
      <argument type="service" id="session"/>
      <argument type="service" id="monolog.logger"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.fleq5MM.App\Common\Service\SmsService"/>
      </call>
    </service>
    <service id="App\Common\Service\SystemSetting" class="App\Common\Service\SystemSetting" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="monolog.logger"/>
      <argument type="service" id="App\Common\Service\Cache\ChainCache"/>
    </service>
    <service id="App\Common\Service\SystemSettingManager" class="App\Common\Service\SystemSettingManager" public="false" autowire="true" autoconfigure="true">
      <tag name="container.service_subscriber"/>
      <argument type="service" id="monolog.logger"/>
      <argument type="service" id="cache.app.simple"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.fleq5MM.App\Common\Service\SystemSettingManager"/>
      </call>
    </service>
    <service id="App\Common\Service\UserChecker" class="App\Common\Service\UserChecker" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\Common\Service\UserManager" class="App\Common\Service\UserManager" public="false" autowire="true" autoconfigure="true">
      <tag name="container.service_subscriber"/>
      <argument type="service" id="monolog.logger"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.fleq5MM.App\Common\Service\UserManager"/>
      </call>
    </service>
    <service id="App\Common\Service\UserProvider" class="App\Common\Service\UserProvider" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\Common\Service\UuidGenerator" class="App\Common\Service\UuidGenerator" public="false" autowire="true" autoconfigure="true">
      <tag name="container.service_subscriber"/>
      <argument type="service" id="monolog.logger"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.fleq5MM.App\Common\Service\UuidGenerator"/>
      </call>
    </service>
    <service id="App\Common\Service\VerifyService" class="App\Common\Service\VerifyService" public="false" autowire="true" autoconfigure="true">
      <tag name="container.service_subscriber"/>
      <argument type="service" id="session"/>
      <argument type="service" id="monolog.logger"/>
      <argument type="service" id="router.default"/>
      <argument type="service" id="twig"/>
      <argument type="service" id="swiftmailer.mailer.mxhichina"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.fleq5MM.App\Common\Service\VerifyService"/>
      </call>
    </service>
    <service id="App\Common\Service\WebAuthenticationManager" class="App\Common\Service\WebAuthenticationManager" public="false" autowire="true" autoconfigure="true">
      <tag name="container.service_subscriber"/>
      <argument type="service" id="monolog.logger"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.fleq5MM.App\Common\Service\WebAuthenticationManager"/>
      </call>
    </service>
    <service id="App\Common\Twig\AppExtension" class="App\Common\Twig\AppExtension" public="false" autowire="true" autoconfigure="true">
      <tag name="twig.extension"/>
      <argument type="service" id="parameter_bag"/>
      <argument type="service" id="App\Common\Service\SystemSetting"/>
      <argument type="service" id="router.default"/>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="App\Common\Twig\SecurityExtension" class="App\Common\Twig\SecurityExtension" public="false" autowire="true" autoconfigure="true">
      <tag name="twig.extension"/>
      <argument type="service" id="security.authorization_checker"/>
    </service>
    <service id="App\Common\Twig\SourceCodeExtension" class="App\Common\Twig\SourceCodeExtension" public="false" autowire="true" autoconfigure="true">
      <tag name="twig.extension"/>
    </service>
    <service id="App\Common\Utils\BusinessLicenseChecker" class="App\Common\Utils\BusinessLicenseChecker" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\Common\Utils\CsvExporter" class="App\Common\Utils\CsvExporter" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\Common\Utils\FieldTransformer" class="App\Common\Utils\FieldTransformer" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\Common\Utils\IdCardChecker" class="App\Common\Utils\IdCardChecker" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\Common\Utils\Markdown" class="App\Common\Utils\Markdown" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\Common\Utils\MobileNumberChecker" class="App\Common\Utils\MobileNumberChecker" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\Common\Utils\MomentFormatConverter" class="App\Common\Utils\MomentFormatConverter" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\Common\Utils\Slugger" class="App\Common\Utils\Slugger" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\Common\Utils\SystemInfo" class="App\Common\Utils\SystemInfo" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\Common\Utils\Validator" class="App\Common\Utils\Validator" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\Common\Validator\RecaptchaValidator" class="App\Common\Validator\RecaptchaValidator" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="App\Common\Service\RecaptchaService"/>
    </service>
    <service id="App\Common\Validator\VerifyCodeValidator" class="App\Common\Validator\VerifyCodeValidator" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="App\Common\Service\SmsService"/>
    </service>
    <service id="App\Constants" class="App\Constants" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\ErrorCodes" class="App\ErrorCodes" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\Events" class="App\Events" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\Open\Controller\DashboardController" class="App\Open\Controller\DashboardController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="monolog.logger"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.0ACZ0gT.App\Open\Controller\DashboardController"/>
      </call>
    </service>
    <service id="App\Open\Controller\FinanceController" class="App\Open\Controller\FinanceController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="monolog.logger"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.0ACZ0gT.App\Open\Controller\FinanceController"/>
      </call>
    </service>
    <service id="App\Open\Controller\FrontpageController" class="App\Open\Controller\FrontpageController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="monolog.logger"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.0ACZ0gT.App\Open\Controller\FrontpageController"/>
      </call>
    </service>
    <service id="App\Open\Controller\OpenBaseController" class="App\Open\Controller\OpenBaseController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="monolog.logger"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.0ACZ0gT.App\Open\Controller\OpenBaseController"/>
      </call>
    </service>
    <service id="App\Open\Controller\ServiceController" class="App\Open\Controller\ServiceController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="monolog.logger"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.0ACZ0gT.App\Open\Controller\ServiceController"/>
      </call>
    </service>
    <service id="App\Open\Controller\UserController" class="App\Open\Controller\UserController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="monolog.logger"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.0ACZ0gT.App\Open\Controller\UserController"/>
      </call>
    </service>
    <service id="App\Open\Twig\NavExtension" class="App\Open\Twig\NavExtension" public="false" autowire="true" autoconfigure="true">
      <tag name="twig.extension"/>
      <argument type="service" id="router.default"/>
    </service>
    <service id="App\Passport\Controller\HomeController" class="App\Passport\Controller\HomeController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="monolog.logger"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.0ACZ0gT.App\Passport\Controller\HomeController"/>
      </call>
    </service>
    <service id="App\Passport\Controller\IdentityManagementController" class="App\Passport\Controller\IdentityManagementController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="monolog.logger"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.0ACZ0gT.App\Passport\Controller\IdentityManagementController"/>
      </call>
    </service>
    <service id="App\Passport\Controller\LoginController" class="App\Passport\Controller\LoginController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="monolog.logger"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.0ACZ0gT.App\Passport\Controller\LoginController"/>
      </call>
    </service>
    <service id="App\Passport\Controller\PassportBaseController" class="App\Passport\Controller\PassportBaseController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="monolog.logger"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.0ACZ0gT.App\Passport\Controller\PassportBaseController"/>
      </call>
    </service>
    <service id="App\Passport\Controller\PasswordResetController" class="App\Passport\Controller\PasswordResetController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="monolog.logger"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.0ACZ0gT.App\Passport\Controller\PasswordResetController"/>
      </call>
    </service>
    <service id="App\Passport\Controller\ProtectController" class="App\Passport\Controller\ProtectController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="monolog.logger"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.0ACZ0gT.App\Passport\Controller\ProtectController"/>
      </call>
    </service>
    <service id="App\Passport\Controller\QuestionController" class="App\Passport\Controller\QuestionController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="monolog.logger"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.0ACZ0gT.App\Passport\Controller\QuestionController"/>
      </call>
    </service>
    <service id="App\Passport\Controller\RegisterController" class="App\Passport\Controller\RegisterController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="monolog.logger"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.0ACZ0gT.App\Passport\Controller\RegisterController"/>
      </call>
    </service>
    <service id="App\Passport\Controller\SafeCenterController" class="App\Passport\Controller\SafeCenterController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="monolog.logger"/>
      <argument type="service" id="App\Passport\Service\EmailMsgNoticeService"/>
      <argument type="service" id="App\Passport\Service\MobileMsgNoticeService"/>
      <argument type="service" id="App\Passport\Service\UserPasswordService"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.0ACZ0gT.App\Passport\Controller\SafeCenterController"/>
      </call>
    </service>
    <service id="App\Passport\Controller\ToolController" class="App\Passport\Controller\ToolController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="monolog.logger"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.0ACZ0gT.App\Passport\Controller\ToolController"/>
      </call>
    </service>
    <service id="App\Passport\Controller\UserController" class="App\Passport\Controller\UserController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="monolog.logger"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.0ACZ0gT.App\Passport\Controller\UserController"/>
      </call>
    </service>
    <service id="App\Passport\Controller\UsersMessageController" class="App\Passport\Controller\UsersMessageController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="monolog.logger"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.0ACZ0gT.App\Passport\Controller\UsersMessageController"/>
      </call>
    </service>
    <service id="App\Passport\Form\BusinessIdentitySubmitForm" class="App\Passport\Form\BusinessIdentitySubmitForm" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.reset" method="reset"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.qFNxiTm.App\Passport\Form\BusinessIdentitySubmitForm"/>
      </call>
    </service>
    <service id="App\Passport\Form\IndividualIdentitySubmitForm" class="App\Passport\Form\IndividualIdentitySubmitForm" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.reset" method="reset"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.qFNxiTm.App\Passport\Form\IndividualIdentitySubmitForm"/>
      </call>
    </service>
    <service id="App\Passport\Service\EmailMsgNoticeService" class="App\Passport\Service\EmailMsgNoticeService" public="false" autowire="true" autoconfigure="true">
      <tag name="container.service_subscriber"/>
      <argument type="service" id="session"/>
      <argument type="service" id="swiftmailer.mailer.mxhichina"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.fleq5MM.App\Passport\Service\EmailMsgNoticeService"/>
      </call>
    </service>
    <service id="App\Passport\Service\IpService" class="App\Passport\Service\IpService" public="false" autowire="true" autoconfigure="true">
      <tag name="container.service_subscriber"/>
      <argument type="service" id="monolog.logger"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.fleq5MM.App\Passport\Service\IpService"/>
      </call>
    </service>
    <service id="App\Passport\Service\MobileMsgNoticeService" class="App\Passport\Service\MobileMsgNoticeService" public="false" autowire="true" autoconfigure="true">
      <tag name="container.service_subscriber"/>
      <argument type="service" id="session"/>
      <argument type="service" id="App\Common\Service\SmsService"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.fleq5MM.App\Passport\Service\MobileMsgNoticeService"/>
      </call>
    </service>
    <service id="App\Passport\Service\RequestToolService" class="App\Passport\Service\RequestToolService" public="false" autowire="true" autoconfigure="true">
      <tag name="container.service_subscriber"/>
      <argument type="service" id="monolog.logger"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.fleq5MM.App\Passport\Service\RequestToolService"/>
      </call>
    </service>
    <service id="App\Passport\Service\UserPasswordService" class="App\Passport\Service\UserPasswordService" public="false" autowire="true" autoconfigure="true">
      <tag name="container.service_subscriber"/>
      <argument type="service" id="session"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.fleq5MM.App\Passport\Service\UserPasswordService"/>
      </call>
    </service>
    <service id="App\PaymentConstants" class="App\PaymentConstants" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\Platform" class="App\Platform" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\Reseller\Controller\AffiliateController" class="App\Reseller\Controller\AffiliateController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="monolog.logger"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.0ACZ0gT.App\Reseller\Controller\AffiliateController"/>
      </call>
    </service>
    <service id="App\Reseller\Controller\DashboardController" class="App\Reseller\Controller\DashboardController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="monolog.logger"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.0ACZ0gT.App\Reseller\Controller\DashboardController"/>
      </call>
    </service>
    <service id="App\Reseller\Controller\EmployeeController" class="App\Reseller\Controller\EmployeeController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="monolog.logger"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.0ACZ0gT.App\Reseller\Controller\EmployeeController"/>
      </call>
    </service>
    <service id="App\Reseller\Controller\FaqController" class="App\Reseller\Controller\FaqController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="monolog.logger"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.0ACZ0gT.App\Reseller\Controller\FaqController"/>
      </call>
    </service>
    <service id="App\Reseller\Controller\FinanceController" class="App\Reseller\Controller\FinanceController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="monolog.logger"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.0ACZ0gT.App\Reseller\Controller\FinanceController"/>
      </call>
    </service>
    <service id="App\Reseller\Controller\HomeController" class="App\Reseller\Controller\HomeController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="monolog.logger"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.0ACZ0gT.App\Reseller\Controller\HomeController"/>
      </call>
    </service>
    <service id="App\Reseller\Controller\OrderController" class="App\Reseller\Controller\OrderController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="monolog.logger"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.0ACZ0gT.App\Reseller\Controller\OrderController"/>
      </call>
    </service>
    <service id="App\Reseller\Controller\PrinterSettingController" class="App\Reseller\Controller\PrinterSettingController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="monolog.logger"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.0ACZ0gT.App\Reseller\Controller\PrinterSettingController"/>
      </call>
    </service>
    <service id="App\Reseller\Controller\ProductController" class="App\Reseller\Controller\ProductController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="monolog.logger"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.0ACZ0gT.App\Reseller\Controller\ProductController"/>
      </call>
    </service>
    <service id="App\Reseller\Controller\RechargeController" class="App\Reseller\Controller\RechargeController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="monolog.logger"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.0ACZ0gT.App\Reseller\Controller\RechargeController"/>
      </call>
    </service>
    <service id="App\Reseller\Controller\ResellerAccountController" class="App\Reseller\Controller\ResellerAccountController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="monolog.logger"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.0ACZ0gT.App\Reseller\Controller\ResellerAccountController"/>
      </call>
    </service>
    <service id="App\Reseller\Controller\ResellerBaseController" class="App\Reseller\Controller\ResellerBaseController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="monolog.logger"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.0ACZ0gT.App\Reseller\Controller\ResellerBaseController"/>
      </call>
    </service>
    <service id="App\Reseller\Controller\SafeController" class="App\Reseller\Controller\SafeController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="monolog.logger"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.0ACZ0gT.App\Reseller\Controller\SafeController"/>
      </call>
    </service>
    <service id="App\Reseller\Controller\UserController" class="App\Reseller\Controller\UserController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="monolog.logger"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.0ACZ0gT.App\Reseller\Controller\UserController"/>
      </call>
    </service>
    <service id="App\Reseller\Form\OrderRechargeForm" class="App\Reseller\Form\OrderRechargeForm" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.reset" method="reset"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.qFNxiTm.App\Reseller\Form\OrderRechargeForm"/>
      </call>
    </service>
    <service id="App\Reseller\Form\PrintSettingForm" class="App\Reseller\Form\PrintSettingForm" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.reset" method="reset"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.qFNxiTm.App\Reseller\Form\PrintSettingForm"/>
      </call>
    </service>
    <service id="App\Reseller\Form\TransferForm" class="App\Reseller\Form\TransferForm" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.reset" method="reset"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.qFNxiTm.App\Reseller\Form\TransferForm"/>
      </call>
    </service>
    <service id="App\Reseller\Service\ProductService" class="App\Reseller\Service\ProductService" public="false" autowire="true" autoconfigure="true">
      <tag name="container.service_subscriber"/>
      <argument type="service" id="monolog.logger"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.fleq5MM.App\Reseller\Service\ProductService"/>
      </call>
    </service>
    <service id="App\Supplier\Controller\DashboardController" class="App\Supplier\Controller\DashboardController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="monolog.logger"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.0ACZ0gT.App\Supplier\Controller\DashboardController"/>
      </call>
    </service>
    <service id="App\Supplier\Controller\FinanceController" class="App\Supplier\Controller\FinanceController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="monolog.logger"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.0ACZ0gT.App\Supplier\Controller\FinanceController"/>
      </call>
    </service>
    <service id="App\Supplier\Controller\HomeController" class="App\Supplier\Controller\HomeController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="monolog.logger"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.0ACZ0gT.App\Supplier\Controller\HomeController"/>
      </call>
    </service>
    <service id="App\Supplier\Controller\OrdersController" class="App\Supplier\Controller\OrdersController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="monolog.logger"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.0ACZ0gT.App\Supplier\Controller\OrdersController"/>
      </call>
    </service>
    <service id="App\Supplier\Controller\SourceGroupController" class="App\Supplier\Controller\SourceGroupController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="monolog.logger"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.0ACZ0gT.App\Supplier\Controller\SourceGroupController"/>
      </call>
    </service>
    <service id="App\Supplier\Controller\SupplierBaseController" class="App\Supplier\Controller\SupplierBaseController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="monolog.logger"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.0ACZ0gT.App\Supplier\Controller\SupplierBaseController"/>
      </call>
    </service>
    <service id="App\Supplier\Controller\UserController" class="App\Supplier\Controller\UserController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="monolog.logger"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.0ACZ0gT.App\Supplier\Controller\UserController"/>
      </call>
    </service>
    <service id="App\Supplier\Form\BusinessIdentitySubmitForm" class="App\Supplier\Form\BusinessIdentitySubmitForm" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.reset" method="reset"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.qFNxiTm.App\Supplier\Form\BusinessIdentitySubmitForm"/>
      </call>
    </service>
    <service id="App\Test\Controller\SimpleFormDemoController" class="App\Test\Controller\SimpleFormDemoController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="monolog.logger"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.0ACZ0gT.App\Test\Controller\SimpleFormDemoController"/>
      </call>
    </service>
    <service id="App\Test\Controller\TestController" class="App\Test\Controller\TestController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="monolog.logger"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.d2Br1OK.App\Test\Controller\TestController"/>
      </call>
    </service>
    <service id="App\Test\Form\TestForm" class="App\Test\Form\TestForm" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.reset" method="reset"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.qFNxiTm.App\Test\Form\TestForm"/>
      </call>
    </service>
    <service id="App\Admin\Form\AdminUserForm" class="App\Admin\Form\AdminUserForm" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\Common\EventSubscriber\KernelViewSubscriber" class="App\Common\EventSubscriber\KernelViewSubscriber" public="false" autowire="true" autoconfigure="true">
      <argument>true</argument>
    </service>
    <service id="web_server.command.server_run" class="Symfony\Bundle\WebServerBundle\Command\ServerRunCommand" public="false" autowire="true" autoconfigure="true">
      <tag name="console.command" command="server:run"/>
      <tag name="console.command"/>
      <argument>D:\phpStudy\WWW\foxdou/web</argument>
      <argument>dev</argument>
      <call method="setName">
        <argument>server:run</argument>
      </call>
    </service>
    <service id="web_server.command.server_start" class="Symfony\Bundle\WebServerBundle\Command\ServerStartCommand" public="false" autowire="true" autoconfigure="true">
      <tag name="console.command" command="server:start"/>
      <tag name="console.command"/>
      <argument>D:\phpStudy\WWW\foxdou/web</argument>
      <argument>dev</argument>
      <call method="setName">
        <argument>server:start</argument>
      </call>
    </service>
    <service id="web_server.command.server_stop" class="Symfony\Bundle\WebServerBundle\Command\ServerStopCommand" public="false">
      <tag name="console.command" command="server:stop"/>
      <call method="setName">
        <argument>server:stop</argument>
      </call>
    </service>
    <service id="web_server.command.server_status" class="Symfony\Bundle\WebServerBundle\Command\ServerStatusCommand" public="false">
      <tag name="console.command" command="server:status"/>
      <call method="setName">
        <argument>server:status</argument>
      </call>
    </service>
    <service id="web_server.command.server_log" class="Symfony\Bundle\WebServerBundle\Command\ServerLogCommand" public="false">
      <tag name="console.command" command="server:log"/>
      <call method="setName">
        <argument>server:log</argument>
      </call>
    </service>
    <service id=".5_HtmlDescriptor~YGmkBMD" class="Symfony\Component\VarDumper\Command\Descriptor\HtmlDescriptor" public="false">
      <argument type="service" id="var_dumper.html_dumper"/>
    </service>
    <service id=".4_CliDescriptor~YGmkBMD" class="Symfony\Component\VarDumper\Command\Descriptor\CliDescriptor" public="false">
      <argument type="service" id="var_dumper.cli_dumper"/>
    </service>
    <service id=".3_CliContextProvider~YGmkBMD" class="Symfony\Component\VarDumper\Dumper\ContextProvider\CliContextProvider" public="false"/>
    <service id=".2_RequestContextProvider~YGmkBMD" class="Symfony\Component\VarDumper\Dumper\ContextProvider\RequestContextProvider" public="false">
      <argument type="service" id="request_stack"/>
    </service>
    <service id=".1_SourceContextProvider~YGmkBMD" class="Symfony\Component\VarDumper\Dumper\ContextProvider\SourceContextProvider" public="false">
      <argument>UTF-8</argument>
      <argument>D:\phpStudy\WWW\foxdou</argument>
      <argument type="service" id="debug.file_link_formatter" on-invalid="null"/>
    </service>
    <service id="twig.extension.dump" class="Symfony\Bridge\Twig\Extension\DumpExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="var_dumper.cloner"/>
      <argument type="service" id="var_dumper.html_dumper"/>
    </service>
    <service id="data_collector.dump" class="Symfony\Component\HttpKernel\DataCollector\DumpDataCollector" public="true">
      <tag name="data_collector" id="dump" template="@Debug/Profiler/dump.html.twig" priority="240"/>
      <argument type="service" id="debug.stopwatch" on-invalid="ignore"/>
      <argument type="service" id="debug.file_link_formatter" on-invalid="ignore"/>
      <argument>UTF-8</argument>
      <argument>null</argument>
      <argument type="service" id="var_dumper.server_connection"/>
    </service>
    <service id="debug.dump_listener" class="Symfony\Component\HttpKernel\EventListener\DumpListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="var_dumper.cloner"/>
      <argument type="service" id="var_dumper.cli_dumper"/>
      <argument type="service" id="var_dumper.server_connection"/>
    </service>
    <service id="var_dumper.cloner" class="Symfony\Component\VarDumper\Cloner\VarCloner" public="true">
      <call method="setMaxItems">
        <argument>2500</argument>
      </call>
      <call method="setMinDepth">
        <argument>1</argument>
      </call>
      <call method="setMaxString">
        <argument>-1</argument>
      </call>
    </service>
    <service id="var_dumper.cli_dumper" class="Symfony\Component\VarDumper\Dumper\CliDumper" public="false">
      <argument>null</argument>
      <argument>UTF-8</argument>
      <argument>0</argument>
    </service>
    <service id="var_dumper.html_dumper" class="Symfony\Component\VarDumper\Dumper\HtmlDumper" public="false">
      <argument>null</argument>
      <argument>UTF-8</argument>
      <argument>0</argument>
      <call method="setDisplayOptions">
        <argument type="collection">
          <argument key="fileLinkFormat" type="service" id="debug.file_link_formatter" on-invalid="ignore"/>
        </argument>
      </call>
    </service>
    <service id="var_dumper.server_connection" class="Symfony\Component\VarDumper\Server\Connection" public="false">
      <argument>tcp://%env(VAR_DUMPER_SERVER)%</argument>
      <argument type="collection">
        <argument key="source" type="service" id=".1_SourceContextProvider~YGmkBMD"/>
        <argument key="request" type="service" id=".2_RequestContextProvider~YGmkBMD"/>
        <argument key="cli" type="service" id=".3_CliContextProvider~YGmkBMD"/>
      </argument>
    </service>
    <service id="var_dumper.dump_server" class="Symfony\Component\VarDumper\Server\DumpServer" public="false">
      <tag name="monolog.logger" channel="debug"/>
      <argument>tcp://%env(VAR_DUMPER_SERVER)%</argument>
      <argument type="service" id="monolog.logger.debug" on-invalid="null"/>
    </service>
    <service id="var_dumper.command.server_dump" class="Symfony\Component\VarDumper\Command\ServerDumpCommand" public="false">
      <tag name="console.command" command="server:dump"/>
      <argument type="service" id="var_dumper.dump_server"/>
      <argument type="collection">
        <argument key="cli" type="service" id=".4_CliDescriptor~YGmkBMD"/>
        <argument key="html" type="service" id=".5_HtmlDescriptor~YGmkBMD"/>
      </argument>
      <call method="setName">
        <argument>server:dump</argument>
      </call>
    </service>
    <service id=".2_HtmlDumper~C0qlEQC" class="Symfony\Component\VarDumper\Dumper\HtmlDumper" public="false">
      <argument>null</argument>
      <argument>UTF-8</argument>
      <argument>1</argument>
      <call method="setDisplayOptions">
        <argument type="collection">
          <argument key="maxStringLength">4096</argument>
          <argument key="fileLinkFormat" type="service" id="debug.file_link_formatter"/>
        </argument>
      </call>
    </service>
    <service id=".1_NonceGenerator~C0qlEQC" class="Symfony\Bundle\WebProfilerBundle\Csp\NonceGenerator" public="false"/>
    <service id="web_profiler.controller.profiler" class="Symfony\Bundle\WebProfilerBundle\Controller\ProfilerController" public="true">
      <argument type="service" id="router.default" on-invalid="null"/>
      <argument>null</argument>
      <argument type="service" id="twig"/>
      <argument type="collection"/>
      <argument type="service" id="web_profiler.csp.handler"/>
      <argument>D:\phpStudy\WWW\foxdou</argument>
    </service>
    <service id="web_profiler.controller.router" class="Symfony\Bundle\WebProfilerBundle\Controller\RouterController" public="true">
      <argument>null</argument>
      <argument type="service" id="twig"/>
      <argument type="service" id="router.default" on-invalid="null"/>
    </service>
    <service id="web_profiler.controller.exception" class="Symfony\Bundle\WebProfilerBundle\Controller\ExceptionController" public="true">
      <argument>null</argument>
      <argument type="service" id="twig"/>
      <argument>true</argument>
      <argument type="service" id="debug.file_link_formatter"/>
    </service>
    <service id="web_profiler.csp.handler" class="Symfony\Bundle\WebProfilerBundle\Csp\ContentSecurityPolicyHandler" public="false">
      <argument type="service" id=".1_NonceGenerator~C0qlEQC"/>
    </service>
    <service id="twig.extension.webprofiler" class="Symfony\Bundle\WebProfilerBundle\Twig\WebProfilerExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id=".2_HtmlDumper~C0qlEQC"/>
    </service>
    <service id="debug.file_link_formatter" class="Symfony\Component\HttpKernel\Debug\FileLinkFormatter" public="false">
      <argument>phpstorm://open?url=file://%%f&amp;line=%%l</argument>
    </service>
    <service id="debug.file_link_formatter.url_format" class="string" public="false">
      <argument type="service" id="router.default"/>
      <argument>_profiler_open_file</argument>
      <argument>?file=%%f&amp;line=%%l#line%%l</argument>
      <factory class="Symfony\Component\HttpKernel\Debug\FileLinkFormatter" method="generateUrlFormat"/>
    </service>
    <service id="controller_name_converter" class="Symfony\Bundle\FrameworkBundle\Controller\ControllerNameParser" public="false">
      <tag name="monolog.logger" channel="request"/>
      <argument type="service" id="kernel"/>
    </service>
    <service id="argument_metadata_factory" class="Symfony\Component\HttpKernel\ControllerMetadata\ArgumentMetadataFactory" public="false"/>
    <service id="response_listener" class="Symfony\Component\HttpKernel\EventListener\ResponseListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument>UTF-8</argument>
    </service>
    <service id="streamed_response_listener" class="Symfony\Component\HttpKernel\EventListener\StreamedResponseListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="locale_listener" class="Symfony\Component\HttpKernel\EventListener\LocaleListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="request_stack"/>
      <argument>zh_CN</argument>
      <argument type="service" id="router.default" on-invalid="ignore"/>
    </service>
    <service id="http_exception_listener" class="Symfony\Component\HttpKernel\EventListener\ExceptionListener" public="false">
      <tag name="kernel.event_listener" event="kernel.exception" method="onKernelException" priority="-2048"/>
      <tag name="kernel.reset" method="reset"/>
      <argument>null</argument>
      <argument>null</argument>
      <argument>true</argument>
      <argument>UTF-8</argument>
      <argument>phpstorm://open?url=file://%%f&amp;line=%%l</argument>
    </service>
    <service id="validate_request_listener" class="Symfony\Component\HttpKernel\EventListener\ValidateRequestListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="resolve_controller_name_subscriber" class="Symfony\Bundle\FrameworkBundle\EventListener\ResolveControllerNameSubscriber" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="controller_name_converter"/>
    </service>
    <service id="parameter_bag" class="Symfony\Component\DependencyInjection\ParameterBag\ContainerBag" public="false">
      <argument type="service" id="service_container"/>
    </service>
    <service id="http_kernel" class="Symfony\Component\HttpKernel\HttpKernel" public="true">
      <tag name="container.hot_path"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="debug.controller_resolver"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="debug.argument_resolver"/>
    </service>
    <service id="request_stack" class="Symfony\Component\HttpFoundation\RequestStack" public="true"/>
    <service id="cache_warmer" class="Symfony\Component\HttpKernel\CacheWarmer\CacheWarmerAggregate" public="true">
      <argument type="tagged" tag="kernel.cache_warmer"/>
      <argument>true</argument>
      <argument>D:\phpStudy\WWW\foxdou\var\cache\dev/srcApp_KernelDevDebugContainerDeprecations.log</argument>
    </service>
    <service id="cache_clearer" class="Symfony\Component\HttpKernel\CacheClearer\ChainCacheClearer" public="true">
      <argument type="tagged" tag="kernel.cache_clearer"/>
    </service>
    <service id="kernel" public="true" synthetic="true"/>
    <service id="filesystem" class="Symfony\Component\Filesystem\Filesystem" public="true"/>
    <service id="file_locator" class="Symfony\Component\HttpKernel\Config\FileLocator" public="false">
      <argument type="service" id="kernel"/>
      <argument>D:\phpStudy\WWW\foxdou\src/Resources</argument>
      <argument type="collection">
        <argument>D:\phpStudy\WWW\foxdou\src</argument>
      </argument>
    </service>
    <service id="uri_signer" class="Symfony\Component\HttpKernel\UriSigner" public="false">
      <argument>%env(APP_SECRET)%</argument>
    </service>
    <service id="config_cache_factory" class="Symfony\Component\Config\ResourceCheckerConfigCacheFactory" public="false">
      <argument type="tagged" tag="config_cache.resource_checker"/>
    </service>
    <service id="dependency_injection.config.container_parameters_resource_checker" class="Symfony\Component\DependencyInjection\Config\ContainerParametersResourceChecker" public="false">
      <tag name="config_cache.resource_checker" priority="-980"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="config.resource.self_checking_resource_checker" class="Symfony\Component\Config\Resource\SelfCheckingResourceChecker" public="false">
      <tag name="config_cache.resource_checker" priority="-990"/>
    </service>
    <service id="services_resetter" class="Symfony\Component\HttpKernel\DependencyInjection\ServicesResetter" public="true">
      <argument type="iterator">
        <argument key="App\Admin\Form\AdminEditForm" type="service" id="App\Admin\Form\AdminEditForm" on-invalid="ignore_uninitialized"/>
        <argument key="App\Admin\Form\ArticleEditForm" type="service" id="App\Admin\Form\ArticleEditForm" on-invalid="ignore_uninitialized"/>
        <argument key="App\Admin\Form\PhoneNumberAttributionEditForm" type="service" id="App\Admin\Form\PhoneNumberAttributionEditForm" on-invalid="ignore_uninitialized"/>
        <argument key="App\Admin\Form\ProductSearchForm" type="service" id="App\Admin\Form\ProductSearchForm" on-invalid="ignore_uninitialized"/>
        <argument key="App\Admin\Form\RegionEditForm" type="service" id="App\Admin\Form\RegionEditForm" on-invalid="ignore_uninitialized"/>
        <argument key="App\Admin\Form\SystemSetting\PassportSettingForm" type="service" id="App\Admin\Form\SystemSetting\PassportSettingForm" on-invalid="ignore_uninitialized"/>
        <argument key="App\Admin\Form\SystemSetting\ResellerPlatformSettingForm" type="service" id="App\Admin\Form\SystemSetting\ResellerPlatformSettingForm" on-invalid="ignore_uninitialized"/>
        <argument key="App\Admin\Form\SystemSetting\SupplierPlatformSettingForm" type="service" id="App\Admin\Form\SystemSetting\SupplierPlatformSettingForm" on-invalid="ignore_uninitialized"/>
        <argument key="App\Admin\Form\SystemSetting\SystemForm" type="service" id="App\Admin\Form\SystemSetting\SystemForm" on-invalid="ignore_uninitialized"/>
        <argument key="App\Admin\Form\TencentProductCategoryEditForm" type="service" id="App\Admin\Form\TencentProductCategoryEditForm" on-invalid="ignore_uninitialized"/>
        <argument key="App\Admin\Form\VirtualNetworkOperatorEditForm" type="service" id="App\Admin\Form\VirtualNetworkOperatorEditForm" on-invalid="ignore_uninitialized"/>
        <argument key="App\Common\Form\IndividualUserRegisterForm" type="service" id="App\Common\Form\IndividualUserRegisterForm" on-invalid="ignore_uninitialized"/>
        <argument key="App\Common\Form\UserForm" type="service" id="App\Common\Form\UserForm" on-invalid="ignore_uninitialized"/>
        <argument key="App\Common\Service\Cache\AppCacheRedis" type="service" id="App\Common\Service\Cache\AppCacheRedis" on-invalid="ignore_uninitialized"/>
        <argument key="App\Common\Service\Cache\ChainCache" type="service" id="App\Common\Service\Cache\ChainCache" on-invalid="ignore_uninitialized"/>
        <argument key="App\Common\Service\SimpleRecordResetter" type="service" id="App\Common\Service\SimpleRecordResetter" on-invalid="ignore_uninitialized"/>
        <argument key="App\Passport\Form\BusinessIdentitySubmitForm" type="service" id="App\Passport\Form\BusinessIdentitySubmitForm" on-invalid="ignore_uninitialized"/>
        <argument key="App\Passport\Form\IndividualIdentitySubmitForm" type="service" id="App\Passport\Form\IndividualIdentitySubmitForm" on-invalid="ignore_uninitialized"/>
        <argument key="App\Reseller\Form\OrderRechargeForm" type="service" id="App\Reseller\Form\OrderRechargeForm" on-invalid="ignore_uninitialized"/>
        <argument key="App\Reseller\Form\PrintSettingForm" type="service" id="App\Reseller\Form\PrintSettingForm" on-invalid="ignore_uninitialized"/>
        <argument key="App\Reseller\Form\TransferForm" type="service" id="App\Reseller\Form\TransferForm" on-invalid="ignore_uninitialized"/>
        <argument key="App\Supplier\Form\BusinessIdentitySubmitForm" type="service" id="App\Supplier\Form\BusinessIdentitySubmitForm" on-invalid="ignore_uninitialized"/>
        <argument key="App\Test\Form\TestForm" type="service" id="App\Test\Form\TestForm" on-invalid="ignore_uninitialized"/>
        <argument key="http_exception_listener" type="service" id="http_exception_listener" on-invalid="ignore_uninitialized"/>
        <argument key="debug.stopwatch" type="service" id="debug.stopwatch" on-invalid="ignore_uninitialized"/>
        <argument key="security.token_storage" type="service" id="security.token_storage" on-invalid="ignore_uninitialized"/>
        <argument key="swiftmailer.email_sender.listener" type="service" id="swiftmailer.email_sender.listener" on-invalid="ignore_uninitialized"/>
        <argument key="Symfu\SimpleFormBundle\Form" type="service" id="Symfu\SimpleFormBundle\Form" on-invalid="ignore_uninitialized"/>
      </argument>
      <argument type="collection">
        <argument key="App\Admin\Form\AdminEditForm">reset</argument>
        <argument key="App\Admin\Form\ArticleEditForm">reset</argument>
        <argument key="App\Admin\Form\PhoneNumberAttributionEditForm">reset</argument>
        <argument key="App\Admin\Form\ProductSearchForm">reset</argument>
        <argument key="App\Admin\Form\RegionEditForm">reset</argument>
        <argument key="App\Admin\Form\SystemSetting\PassportSettingForm">reset</argument>
        <argument key="App\Admin\Form\SystemSetting\ResellerPlatformSettingForm">reset</argument>
        <argument key="App\Admin\Form\SystemSetting\SupplierPlatformSettingForm">reset</argument>
        <argument key="App\Admin\Form\SystemSetting\SystemForm">reset</argument>
        <argument key="App\Admin\Form\TencentProductCategoryEditForm">reset</argument>
        <argument key="App\Admin\Form\VirtualNetworkOperatorEditForm">reset</argument>
        <argument key="App\Common\Form\IndividualUserRegisterForm">reset</argument>
        <argument key="App\Common\Form\UserForm">reset</argument>
        <argument key="App\Common\Service\Cache\AppCacheRedis">reset</argument>
        <argument key="App\Common\Service\Cache\ChainCache">reset</argument>
        <argument key="App\Common\Service\SimpleRecordResetter">reset</argument>
        <argument key="App\Passport\Form\BusinessIdentitySubmitForm">reset</argument>
        <argument key="App\Passport\Form\IndividualIdentitySubmitForm">reset</argument>
        <argument key="App\Reseller\Form\OrderRechargeForm">reset</argument>
        <argument key="App\Reseller\Form\PrintSettingForm">reset</argument>
        <argument key="App\Reseller\Form\TransferForm">reset</argument>
        <argument key="App\Supplier\Form\BusinessIdentitySubmitForm">reset</argument>
        <argument key="App\Test\Form\TestForm">reset</argument>
        <argument key="http_exception_listener">reset</argument>
        <argument key="debug.stopwatch">reset</argument>
        <argument key="security.token_storage">setToken</argument>
        <argument key="swiftmailer.email_sender.listener">reset</argument>
        <argument key="Symfu\SimpleFormBundle\Form">reset</argument>
      </argument>
    </service>
    <service id="fragment.handler" class="Symfony\Component\HttpKernel\DependencyInjection\LazyLoadingFragmentHandler" public="false">
      <argument type="service" id=".service_locator.fE9i0Cx"/>
      <argument type="service" id="request_stack"/>
      <argument>true</argument>
    </service>
    <service id="fragment.renderer.inline" class="Symfony\Component\HttpKernel\Fragment\InlineFragmentRenderer" public="false">
      <tag name="kernel.fragment_renderer" alias="inline"/>
      <argument type="service" id="http_kernel"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <call method="setFragmentPath">
        <argument>/_fragment</argument>
      </call>
    </service>
    <service id="fragment.renderer.hinclude" class="Symfony\Component\HttpKernel\Fragment\HIncludeFragmentRenderer" public="false">
      <tag name="kernel.fragment_renderer" alias="hinclude"/>
      <argument type="service" id="twig"/>
      <argument type="service" id="uri_signer"/>
      <argument></argument>
      <call method="setFragmentPath">
        <argument>/_fragment</argument>
      </call>
    </service>
    <service id="fragment.renderer.esi" class="Symfony\Component\HttpKernel\Fragment\EsiFragmentRenderer" public="false">
      <tag name="kernel.fragment_renderer" alias="esi"/>
      <argument type="service" id="esi" on-invalid="null"/>
      <argument type="service" id="fragment.renderer.inline"/>
      <argument type="service" id="uri_signer"/>
      <call method="setFragmentPath">
        <argument>/_fragment</argument>
      </call>
    </service>
    <service id="console.error_listener" class="Symfony\Component\Console\EventListener\ErrorListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="console"/>
      <argument type="service" id="monolog.logger.console" on-invalid="null"/>
    </service>
    <service id="console.command.about" class="Symfony\Bundle\FrameworkBundle\Command\AboutCommand" public="false">
      <tag name="console.command" command="about"/>
      <call method="setName">
        <argument>about</argument>
      </call>
    </service>
    <service id="console.command.assets_install" class="Symfony\Bundle\FrameworkBundle\Command\AssetsInstallCommand" public="false">
      <tag name="console.command" command="assets:install"/>
      <argument type="service" id="filesystem"/>
      <call method="setName">
        <argument>assets:install</argument>
      </call>
    </service>
    <service id="console.command.cache_clear" class="Symfony\Bundle\FrameworkBundle\Command\CacheClearCommand" public="false">
      <tag name="console.command" command="cache:clear"/>
      <argument type="service" id="cache_clearer"/>
      <argument type="service" id="filesystem"/>
      <call method="setName">
        <argument>cache:clear</argument>
      </call>
    </service>
    <service id="console.command.cache_pool_clear" class="Symfony\Bundle\FrameworkBundle\Command\CachePoolClearCommand" public="false">
      <tag name="console.command" command="cache:pool:clear"/>
      <argument type="service" id="cache.global_clearer"/>
      <call method="setName">
        <argument>cache:pool:clear</argument>
      </call>
    </service>
    <service id="console.command.cache_pool_prune" class="Symfony\Bundle\FrameworkBundle\Command\CachePoolPruneCommand" public="false">
      <tag name="console.command" command="cache:pool:prune"/>
      <argument type="iterator"/>
      <call method="setName">
        <argument>cache:pool:prune</argument>
      </call>
    </service>
    <service id="console.command.cache_pool_delete" class="Symfony\Bundle\FrameworkBundle\Command\CachePoolDeleteCommand" public="false">
      <tag name="console.command" command="cache:pool:delete"/>
      <argument type="service" id="cache.global_clearer"/>
      <call method="setName">
        <argument>cache:pool:delete</argument>
      </call>
    </service>
    <service id="console.command.cache_warmup" class="Symfony\Bundle\FrameworkBundle\Command\CacheWarmupCommand" public="false">
      <tag name="console.command" command="cache:warmup"/>
      <argument type="service" id="cache_warmer"/>
      <call method="setName">
        <argument>cache:warmup</argument>
      </call>
    </service>
    <service id="console.command.config_debug" class="Symfony\Bundle\FrameworkBundle\Command\ConfigDebugCommand" public="false">
      <tag name="console.command" command="debug:config"/>
      <call method="setName">
        <argument>debug:config</argument>
      </call>
    </service>
    <service id="console.command.config_dump_reference" class="Symfony\Bundle\FrameworkBundle\Command\ConfigDumpReferenceCommand" public="false">
      <tag name="console.command" command="config:dump-reference"/>
      <call method="setName">
        <argument>config:dump-reference</argument>
      </call>
    </service>
    <service id="console.command.container_debug" class="Symfony\Bundle\FrameworkBundle\Command\ContainerDebugCommand" public="false">
      <tag name="console.command" command="debug:container"/>
      <call method="setName">
        <argument>debug:container</argument>
      </call>
    </service>
    <service id="console.command.debug_autowiring" class="Symfony\Bundle\FrameworkBundle\Command\DebugAutowiringCommand" public="false">
      <tag name="console.command" command="debug:autowiring"/>
      <call method="setName">
        <argument>debug:autowiring</argument>
      </call>
    </service>
    <service id="console.command.event_dispatcher_debug" class="Symfony\Bundle\FrameworkBundle\Command\EventDispatcherDebugCommand" public="false">
      <tag name="console.command" command="debug:event-dispatcher"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <call method="setName">
        <argument>debug:event-dispatcher</argument>
      </call>
    </service>
    <service id="console.command.router_debug" class="Symfony\Bundle\FrameworkBundle\Command\RouterDebugCommand" public="false">
      <tag name="console.command" command="debug:router"/>
      <argument type="service" id="router.default"/>
      <call method="setName">
        <argument>debug:router</argument>
      </call>
    </service>
    <service id="console.command.router_match" class="Symfony\Bundle\FrameworkBundle\Command\RouterMatchCommand" public="false">
      <tag name="console.command" command="router:match"/>
      <argument type="service" id="router.default"/>
      <call method="setName">
        <argument>router:match</argument>
      </call>
    </service>
    <service id="console.command.translation_debug" class="Symfony\Bundle\FrameworkBundle\Command\TranslationDebugCommand" public="false">
      <tag name="console.command" command="debug:translation"/>
      <argument type="service" id="translator.default"/>
      <argument type="service" id="translation.reader"/>
      <argument type="service" id="translation.extractor"/>
      <argument>D:\phpStudy\WWW\foxdou/translations</argument>
      <argument>D:\phpStudy\WWW\foxdou/templates</argument>
      <call method="setName">
        <argument>debug:translation</argument>
      </call>
    </service>
    <service id="console.command.translation_update" class="Symfony\Bundle\FrameworkBundle\Command\TranslationUpdateCommand" public="false">
      <tag name="console.command" command="translation:update"/>
      <argument type="service" id="translation.writer"/>
      <argument type="service" id="translation.reader"/>
      <argument type="service" id="translation.extractor"/>
      <argument>zh_CN</argument>
      <argument>D:\phpStudy\WWW\foxdou/translations</argument>
      <argument>D:\phpStudy\WWW\foxdou/templates</argument>
      <call method="setName">
        <argument>translation:update</argument>
      </call>
    </service>
    <service id="console.command.xliff_lint" class="Symfony\Bundle\FrameworkBundle\Command\XliffLintCommand" public="false">
      <tag name="console.command" command="lint:xliff"/>
      <call method="setName">
        <argument>lint:xliff</argument>
      </call>
    </service>
    <service id="console.command.yaml_lint" class="Symfony\Bundle\FrameworkBundle\Command\YamlLintCommand" public="false">
      <tag name="console.command" command="lint:yaml"/>
      <call method="setName">
        <argument>lint:yaml</argument>
      </call>
    </service>
    <service id="cache.app" class="Symfony\Component\Cache\Adapter\RedisAdapter" public="true">
      <tag name="cache.pool"/>
      <argument type="service" id=".cache_connection.Jl101tm"/>
      <argument>8OpnF5Cp8r</argument>
      <argument>1800</argument>
      <argument type="service" id="cache.default_marshaller" on-invalid="ignore"/>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.app.simple" class="Symfony\Component\Cache\Simple\Psr6Cache" public="false">
      <argument type="service" id="cache.app"/>
    </service>
    <service id="cache.app.taggable" class="Symfony\Component\Cache\Adapter\TagAwareAdapter" public="false">
      <argument type="service" id="cache.app"/>
    </service>
    <service id="cache.system" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="true">
      <tag name="cache.pool"/>
      <argument>44+bgJ7h0Q</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>D:\phpStudy\WWW\foxdou\var\cache\dev/pools</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.validator" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="false">
      <tag name="cache.pool"/>
      <argument>pdItHSQgPg</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>D:\phpStudy\WWW\foxdou\var\cache\dev/pools</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.serializer" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="false">
      <tag name="cache.pool"/>
      <argument>Chmk287-Hx</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>D:\phpStudy\WWW\foxdou\var\cache\dev/pools</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.annotations" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="false">
      <tag name="cache.pool"/>
      <argument>dVhfrmQj1d</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>D:\phpStudy\WWW\foxdou\var\cache\dev/pools</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.adapter.system" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="false" abstract="true">
      <tag name="cache.pool" clearer="cache.system_clearer"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>D:\phpStudy\WWW\foxdou\var\cache\dev/pools</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.adapter.apcu" class="Symfony\Component\Cache\Adapter\ApcuAdapter" public="false" abstract="true">
      <tag name="cache.pool" clearer="cache.default_clearer"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.doctrine" class="Symfony\Component\Cache\Adapter\DoctrineAdapter" public="false" abstract="true">
      <tag name="cache.pool" provider="cache.default_doctrine_provider" clearer="cache.default_clearer"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument></argument>
      <argument>0</argument>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.filesystem" class="Symfony\Component\Cache\Adapter\FilesystemAdapter" public="false" abstract="true">
      <tag name="cache.pool" clearer="cache.default_clearer"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument>0</argument>
      <argument>D:\phpStudy\WWW\foxdou\var\cache\dev/pools</argument>
      <argument type="service" id="cache.default_marshaller" on-invalid="ignore"/>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.psr6" class="Symfony\Component\Cache\Adapter\ProxyAdapter" public="false" abstract="true">
      <tag name="cache.pool" provider="cache.default_psr6_provider" clearer="cache.default_clearer"/>
      <argument></argument>
      <argument></argument>
      <argument>0</argument>
    </service>
    <service id="cache.adapter.redis" class="Symfony\Component\Cache\Adapter\RedisAdapter" public="false" abstract="true">
      <tag name="cache.pool" provider="cache.default_redis_provider" clearer="cache.default_clearer"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument></argument>
      <argument>0</argument>
      <argument type="service" id="cache.default_marshaller" on-invalid="ignore"/>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.memcached" class="Symfony\Component\Cache\Adapter\MemcachedAdapter" public="false" abstract="true">
      <tag name="cache.pool" provider="cache.default_memcached_provider" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument></argument>
      <argument>0</argument>
      <argument type="service" id="cache.default_marshaller" on-invalid="ignore"/>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.pdo" class="Symfony\Component\Cache\Adapter\PdoAdapter" public="false" abstract="true">
      <tag name="cache.pool" provider="cache.default_pdo_provider" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument></argument>
      <argument>0</argument>
      <argument type="collection"/>
      <argument type="service" id="cache.default_marshaller" on-invalid="ignore"/>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.array" class="Symfony\Component\Cache\Adapter\ArrayAdapter" public="false" abstract="true">
      <tag name="cache.pool" clearer="cache.default_clearer"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument>0</argument>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.default_marshaller" class="Symfony\Component\Cache\Marshaller\DefaultMarshaller" public="false">
      <argument>null</argument>
    </service>
    <service id="cache.default_clearer" class="Symfony\Component\HttpKernel\CacheClearer\Psr6CacheClearer" public="false">
      <tag name="cache.pool.clearer"/>
      <argument type="collection">
        <argument key="cache.app" type="service" id="cache.app" on-invalid="ignore_uninitialized"/>
        <argument key="app.cache.apcu" type="service" id="app.cache.apcu" on-invalid="ignore_uninitialized"/>
        <argument key="app.cache.redis" type="service" id="app.cache.redis" on-invalid="ignore_uninitialized"/>
      </argument>
    </service>
    <service id="cache.system_clearer" class="Symfony\Component\HttpKernel\CacheClearer\Psr6CacheClearer" public="true">
      <tag name="cache.pool.clearer"/>
      <tag name="kernel.cache_clearer"/>
      <argument type="collection">
        <argument key="cache.system" type="service" id="cache.system" on-invalid="ignore_uninitialized"/>
        <argument key="cache.validator" type="service" id="cache.validator" on-invalid="ignore_uninitialized"/>
        <argument key="cache.serializer" type="service" id="cache.serializer" on-invalid="ignore_uninitialized"/>
        <argument key="cache.annotations" type="service" id="cache.annotations" on-invalid="ignore_uninitialized"/>
        <argument key="cache.security_expression_language" type="service" id="cache.security_expression_language" on-invalid="ignore_uninitialized"/>
      </argument>
    </service>
    <service id="cache.global_clearer" class="Symfony\Component\HttpKernel\CacheClearer\Psr6CacheClearer" public="true">
      <tag name="cache.pool.clearer"/>
      <argument type="collection">
        <argument key="cache.app" type="service" id="cache.app" on-invalid="ignore_uninitialized"/>
        <argument key="cache.system" type="service" id="cache.system" on-invalid="ignore_uninitialized"/>
        <argument key="cache.validator" type="service" id="cache.validator" on-invalid="ignore_uninitialized"/>
        <argument key="cache.serializer" type="service" id="cache.serializer" on-invalid="ignore_uninitialized"/>
        <argument key="cache.annotations" type="service" id="cache.annotations" on-invalid="ignore_uninitialized"/>
        <argument key="app.cache.apcu" type="service" id="app.cache.apcu" on-invalid="ignore_uninitialized"/>
        <argument key="app.cache.redis" type="service" id="app.cache.redis" on-invalid="ignore_uninitialized"/>
        <argument key="cache.security_expression_language" type="service" id="cache.security_expression_language" on-invalid="ignore_uninitialized"/>
      </argument>
    </service>
    <service id="identity_translator" class="Symfony\Component\Translation\IdentityTranslator" public="false"/>
    <service id="translator.selector" class="Symfony\Component\Translation\MessageSelector" public="false">
      <deprecated>The "%service_id%" service is deprecated since Symfony 4.2, use "identity_translator" instead.</deprecated>
    </service>
    <service id=".1_NativeFileSessionHandler~F56pJZR" class="Symfony\Component\HttpFoundation\Session\Storage\Handler\NativeFileSessionHandler" public="false">
      <argument>D:\phpStudy\WWW\foxdou\var\cache\dev/sessions</argument>
    </service>
    <service id="session" class="Symfony\Component\HttpFoundation\Session\Session" public="true">
      <argument type="service" id="session.storage.native"/>
      <argument type="service" id="session.attribute_bag"/>
      <argument type="service" id="session.flash_bag"/>
    </service>
    <service id="session.storage.metadata_bag" class="Symfony\Component\HttpFoundation\Session\Storage\MetadataBag" public="false">
      <argument>_sf2_meta</argument>
      <argument>0</argument>
    </service>
    <service id="session.storage.native" class="Symfony\Component\HttpFoundation\Session\Storage\NativeSessionStorage" public="false">
      <argument>%session.storage.options%</argument>
      <argument>null</argument>
      <argument type="service" id="session.storage.metadata_bag"/>
    </service>
    <service id="session.storage.php_bridge" class="Symfony\Component\HttpFoundation\Session\Storage\PhpBridgeSessionStorage" public="false">
      <argument>null</argument>
      <argument type="service" id="session.storage.metadata_bag"/>
    </service>
    <service id="session.flash_bag" class="Symfony\Component\HttpFoundation\Session\Flash\FlashBag" public="false"/>
    <service id="session.attribute_bag" class="Symfony\Component\HttpFoundation\Session\Attribute\AttributeBag" public="false"/>
    <service id="session.storage.mock_file" class="Symfony\Component\HttpFoundation\Session\Storage\MockFileSessionStorage" public="false">
      <argument>D:\phpStudy\WWW\foxdou\var\cache\dev/sessions</argument>
      <argument>MOCKSESSID</argument>
      <argument type="service" id="session.storage.metadata_bag"/>
    </service>
    <service id="session.handler.native_file" class="Symfony\Component\HttpFoundation\Session\Storage\Handler\StrictSessionHandler" public="false">
      <argument type="service" id=".1_NativeFileSessionHandler~F56pJZR"/>
    </service>
    <service id="session_listener" class="Symfony\Component\HttpKernel\EventListener\SessionListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="service" id=".service_locator.AoifO_3"/>
    </service>
    <service id="session.save_listener" class="Symfony\Component\HttpKernel\EventListener\SaveSessionListener" public="false">
      <deprecated>The "%service_id%" service is deprecated since Symfony 4.1. Use the "session_listener" service instead.</deprecated>
    </service>
    <service id="security.csrf.token_generator" class="Symfony\Component\Security\Csrf\TokenGenerator\UriSafeTokenGenerator" public="false"/>
    <service id="security.csrf.token_storage" class="Symfony\Component\Security\Csrf\TokenStorage\SessionTokenStorage" public="false">
      <argument type="service" id="session"/>
    </service>
    <service id="security.csrf.token_manager" class="Symfony\Component\Security\Csrf\CsrfTokenManager" public="true">
      <argument type="service" id="security.csrf.token_generator"/>
      <argument type="service" id="security.csrf.token_storage"/>
      <argument type="service" id="request_stack" on-invalid="ignore"/>
    </service>
    <service id="twig.runtime.security_csrf" class="Symfony\Bridge\Twig\Extension\CsrfRuntime" public="false">
      <tag name="twig.runtime"/>
      <argument type="service" id="security.csrf.token_manager"/>
    </service>
    <service id="twig.extension.security_csrf" class="Symfony\Bridge\Twig\Extension\CsrfExtension" public="false">
      <tag name="twig.extension"/>
    </service>
    <service id="assets.packages" class="Symfony\Component\Asset\Packages" public="false">
      <argument type="service" id="assets._default_package"/>
      <argument type="collection"/>
    </service>
    <service id="assets.empty_package" class="Symfony\Component\Asset\Package" public="false">
      <argument type="service" id="assets.empty_version_strategy"/>
    </service>
    <service id="assets.context" class="Symfony\Component\Asset\Context\RequestStackContext" public="false">
      <argument type="service" id="request_stack"/>
      <argument></argument>
      <argument>false</argument>
    </service>
    <service id="assets.path_package" class="Symfony\Component\Asset\PathPackage" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument type="service" id="assets.context"/>
    </service>
    <service id="assets.url_package" class="Symfony\Component\Asset\UrlPackage" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument type="service" id="assets.context"/>
    </service>
    <service id="assets.static_version_strategy" class="Symfony\Component\Asset\VersionStrategy\StaticVersionStrategy" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
    </service>
    <service id="assets.empty_version_strategy" class="Symfony\Component\Asset\VersionStrategy\EmptyVersionStrategy" public="false"/>
    <service id="assets.json_manifest_version_strategy" class="Symfony\Component\Asset\VersionStrategy\JsonManifestVersionStrategy" public="false" abstract="true">
      <argument></argument>
    </service>
    <service id="assets._default_package" class="Symfony\Component\Asset\PathPackage" public="false">
      <argument></argument>
      <argument type="service" id="assets.empty_version_strategy"/>
      <argument type="service" id="assets.context"/>
    </service>
    <service id="esi" class="Symfony\Component\HttpKernel\HttpCache\Esi" public="false"/>
    <service id="esi_listener" class="Symfony\Component\HttpKernel\EventListener\SurrogateListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="esi" on-invalid="ignore"/>
    </service>
    <service id="fragment.listener" class="Symfony\Component\HttpKernel\EventListener\FragmentListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="uri_signer"/>
      <argument>/_fragment</argument>
    </service>
    <service id="translator.default" class="Symfony\Bundle\FrameworkBundle\Translation\Translator" public="false">
      <argument type="service" id=".service_locator.yQVjGlt"/>
      <argument type="service" id="translator.formatter.default"/>
      <argument>zh_CN</argument>
      <argument type="collection">
        <argument key="translation.loader.php" type="collection">
          <argument>php</argument>
        </argument>
        <argument key="translation.loader.yml" type="collection">
          <argument>yaml</argument>
          <argument>yml</argument>
        </argument>
        <argument key="translation.loader.xliff" type="collection">
          <argument>xlf</argument>
          <argument>xliff</argument>
        </argument>
        <argument key="translation.loader.po" type="collection">
          <argument>po</argument>
        </argument>
        <argument key="translation.loader.mo" type="collection">
          <argument>mo</argument>
        </argument>
        <argument key="translation.loader.qt" type="collection">
          <argument>ts</argument>
        </argument>
        <argument key="translation.loader.csv" type="collection">
          <argument>csv</argument>
        </argument>
        <argument key="translation.loader.res" type="collection">
          <argument>res</argument>
        </argument>
        <argument key="translation.loader.dat" type="collection">
          <argument>dat</argument>
        </argument>
        <argument key="translation.loader.ini" type="collection">
          <argument>ini</argument>
        </argument>
        <argument key="translation.loader.json" type="collection">
          <argument>json</argument>
        </argument>
      </argument>
      <argument type="collection">
        <argument key="cache_dir">D:\phpStudy\WWW\foxdou\var\cache\dev/translations</argument>
        <argument key="debug">true</argument>
        <argument key="resource_files" type="collection">
          <argument key="ar" type="collection">
            <argument>D:\phpStudy\WWW\foxdou\vendor\symfony\security-core/Resources/translations\security.ar.xlf</argument>
          </argument>
          <argument key="az" type="collection">
            <argument>D:\phpStudy\WWW\foxdou\vendor\symfony\security-core/Resources/translations\security.az.xlf</argument>
          </argument>
          <argument key="bg" type="collection">
            <argument>D:\phpStudy\WWW\foxdou\vendor\symfony\security-core/Resources/translations\security.bg.xlf</argument>
          </argument>
          <argument key="ca" type="collection">
            <argument>D:\phpStudy\WWW\foxdou\vendor\symfony\security-core/Resources/translations\security.ca.xlf</argument>
          </argument>
          <argument key="cs" type="collection">
            <argument>D:\phpStudy\WWW\foxdou\vendor\symfony\security-core/Resources/translations\security.cs.xlf</argument>
          </argument>
          <argument key="da" type="collection">
            <argument>D:\phpStudy\WWW\foxdou\vendor\symfony\security-core/Resources/translations\security.da.xlf</argument>
          </argument>
          <argument key="de" type="collection">
            <argument>D:\phpStudy\WWW\foxdou\vendor\symfony\security-core/Resources/translations\security.de.xlf</argument>
          </argument>
          <argument key="el" type="collection">
            <argument>D:\phpStudy\WWW\foxdou\vendor\symfony\security-core/Resources/translations\security.el.xlf</argument>
          </argument>
          <argument key="en" type="collection">
            <argument>D:\phpStudy\WWW\foxdou\vendor\symfony\security-core/Resources/translations\security.en.xlf</argument>
            <argument>D:\phpStudy\WWW\foxdou\vendor\oneup\uploader-bundle/Resources/translations\OneupUploaderBundle.en.yml</argument>
          </argument>
          <argument key="es" type="collection">
            <argument>D:\phpStudy\WWW\foxdou\vendor\symfony\security-core/Resources/translations\security.es.xlf</argument>
          </argument>
          <argument key="fa" type="collection">
            <argument>D:\phpStudy\WWW\foxdou\vendor\symfony\security-core/Resources/translations\security.fa.xlf</argument>
          </argument>
          <argument key="fr" type="collection">
            <argument>D:\phpStudy\WWW\foxdou\vendor\symfony\security-core/Resources/translations\security.fr.xlf</argument>
          </argument>
          <argument key="gl" type="collection">
            <argument>D:\phpStudy\WWW\foxdou\vendor\symfony\security-core/Resources/translations\security.gl.xlf</argument>
          </argument>
          <argument key="he" type="collection">
            <argument>D:\phpStudy\WWW\foxdou\vendor\symfony\security-core/Resources/translations\security.he.xlf</argument>
          </argument>
          <argument key="hr" type="collection">
            <argument>D:\phpStudy\WWW\foxdou\vendor\symfony\security-core/Resources/translations\security.hr.xlf</argument>
          </argument>
          <argument key="hu" type="collection">
            <argument>D:\phpStudy\WWW\foxdou\vendor\symfony\security-core/Resources/translations\security.hu.xlf</argument>
          </argument>
          <argument key="id" type="collection">
            <argument>D:\phpStudy\WWW\foxdou\vendor\symfony\security-core/Resources/translations\security.id.xlf</argument>
          </argument>
          <argument key="it" type="collection">
            <argument>D:\phpStudy\WWW\foxdou\vendor\symfony\security-core/Resources/translations\security.it.xlf</argument>
          </argument>
          <argument key="ja" type="collection">
            <argument>D:\phpStudy\WWW\foxdou\vendor\symfony\security-core/Resources/translations\security.ja.xlf</argument>
          </argument>
          <argument key="lb" type="collection">
            <argument>D:\phpStudy\WWW\foxdou\vendor\symfony\security-core/Resources/translations\security.lb.xlf</argument>
          </argument>
          <argument key="lt" type="collection">
            <argument>D:\phpStudy\WWW\foxdou\vendor\symfony\security-core/Resources/translations\security.lt.xlf</argument>
          </argument>
          <argument key="lv" type="collection">
            <argument>D:\phpStudy\WWW\foxdou\vendor\symfony\security-core/Resources/translations\security.lv.xlf</argument>
          </argument>
          <argument key="nb" type="collection">
            <argument>D:\phpStudy\WWW\foxdou\vendor\symfony\security-core/Resources/translations\security.nb.xlf</argument>
          </argument>
          <argument key="nl" type="collection">
            <argument>D:\phpStudy\WWW\foxdou\vendor\symfony\security-core/Resources/translations\security.nl.xlf</argument>
          </argument>
          <argument key="nn" type="collection">
            <argument>D:\phpStudy\WWW\foxdou\vendor\symfony\security-core/Resources/translations\security.nn.xlf</argument>
          </argument>
          <argument key="no" type="collection">
            <argument>D:\phpStudy\WWW\foxdou\vendor\symfony\security-core/Resources/translations\security.no.xlf</argument>
          </argument>
          <argument key="pl" type="collection">
            <argument>D:\phpStudy\WWW\foxdou\vendor\symfony\security-core/Resources/translations\security.pl.xlf</argument>
          </argument>
          <argument key="pt_BR" type="collection">
            <argument>D:\phpStudy\WWW\foxdou\vendor\symfony\security-core/Resources/translations\security.pt_BR.xlf</argument>
          </argument>
          <argument key="pt_PT" type="collection">
            <argument>D:\phpStudy\WWW\foxdou\vendor\symfony\security-core/Resources/translations\security.pt_PT.xlf</argument>
          </argument>
          <argument key="ro" type="collection">
            <argument>D:\phpStudy\WWW\foxdou\vendor\symfony\security-core/Resources/translations\security.ro.xlf</argument>
          </argument>
          <argument key="ru" type="collection">
            <argument>D:\phpStudy\WWW\foxdou\vendor\symfony\security-core/Resources/translations\security.ru.xlf</argument>
          </argument>
          <argument key="sk" type="collection">
            <argument>D:\phpStudy\WWW\foxdou\vendor\symfony\security-core/Resources/translations\security.sk.xlf</argument>
          </argument>
          <argument key="sl" type="collection">
            <argument>D:\phpStudy\WWW\foxdou\vendor\symfony\security-core/Resources/translations\security.sl.xlf</argument>
          </argument>
          <argument key="sr_Cyrl" type="collection">
            <argument>D:\phpStudy\WWW\foxdou\vendor\symfony\security-core/Resources/translations\security.sr_Cyrl.xlf</argument>
          </argument>
          <argument key="sr_Latn" type="collection">
            <argument>D:\phpStudy\WWW\foxdou\vendor\symfony\security-core/Resources/translations\security.sr_Latn.xlf</argument>
          </argument>
          <argument key="sv" type="collection">
            <argument>D:\phpStudy\WWW\foxdou\vendor\symfony\security-core/Resources/translations\security.sv.xlf</argument>
          </argument>
          <argument key="th" type="collection">
            <argument>D:\phpStudy\WWW\foxdou\vendor\symfony\security-core/Resources/translations\security.th.xlf</argument>
          </argument>
          <argument key="tl" type="collection">
            <argument>D:\phpStudy\WWW\foxdou\vendor\symfony\security-core/Resources/translations\security.tl.xlf</argument>
          </argument>
          <argument key="tr" type="collection">
            <argument>D:\phpStudy\WWW\foxdou\vendor\symfony\security-core/Resources/translations\security.tr.xlf</argument>
          </argument>
          <argument key="ua" type="collection">
            <argument>D:\phpStudy\WWW\foxdou\vendor\symfony\security-core/Resources/translations\security.ua.xlf</argument>
          </argument>
          <argument key="vi" type="collection">
            <argument>D:\phpStudy\WWW\foxdou\vendor\symfony\security-core/Resources/translations\security.vi.xlf</argument>
          </argument>
          <argument key="zh_CN" type="collection">
            <argument>D:\phpStudy\WWW\foxdou\vendor\symfony\security-core/Resources/translations\security.zh_CN.xlf</argument>
            <argument>D:\phpStudy\WWW\foxdou/translations\OneupUploaderBundle.zh_CN.yaml</argument>
            <argument>D:\phpStudy\WWW\foxdou/translations\messages.zh_CN.yaml</argument>
          </argument>
          <argument key="zh" type="collection">
            <argument>D:\phpStudy\WWW\foxdou\vendor\symfu\simple-form-bundle\src/Resources/translations\validation-errors.zh.yaml</argument>
          </argument>
        </argument>
      </argument>
      <call method="setConfigCacheFactory">
        <argument type="service" id="config_cache_factory"/>
      </call>
      <call method="setFallbackLocales">
        <argument type="collection">
          <argument>zh_CN</argument>
          <argument>zh_CN</argument>
        </argument>
      </call>
    </service>
    <service id="translator.logging" class="Symfony\Component\Translation\LoggingTranslator" public="false">
      <tag name="monolog.logger" channel="translation"/>
      <argument type="service" id="translator.logging.inner"/>
      <argument type="service" id="monolog.logger.translation"/>
    </service>
    <service id="translator.formatter.default" class="Symfony\Component\Translation\Formatter\MessageFormatter" public="false">
      <argument type="service" id="identity_translator"/>
    </service>
    <service id="translation.loader.php" class="Symfony\Component\Translation\Loader\PhpFileLoader" public="false">
      <tag name="translation.loader" alias="php"/>
    </service>
    <service id="translation.loader.yml" class="Symfony\Component\Translation\Loader\YamlFileLoader" public="false">
      <tag name="translation.loader" alias="yaml" legacy_alias="yml" legacy-alias="yml"/>
    </service>
    <service id="translation.loader.xliff" class="Symfony\Component\Translation\Loader\XliffFileLoader" public="false">
      <tag name="translation.loader" alias="xlf" legacy_alias="xliff" legacy-alias="xliff"/>
    </service>
    <service id="translation.loader.po" class="Symfony\Component\Translation\Loader\PoFileLoader" public="false">
      <tag name="translation.loader" alias="po"/>
    </service>
    <service id="translation.loader.mo" class="Symfony\Component\Translation\Loader\MoFileLoader" public="false">
      <tag name="translation.loader" alias="mo"/>
    </service>
    <service id="translation.loader.qt" class="Symfony\Component\Translation\Loader\QtFileLoader" public="false">
      <tag name="translation.loader" alias="ts"/>
    </service>
    <service id="translation.loader.csv" class="Symfony\Component\Translation\Loader\CsvFileLoader" public="false">
      <tag name="translation.loader" alias="csv"/>
    </service>
    <service id="translation.loader.res" class="Symfony\Component\Translation\Loader\IcuResFileLoader" public="false">
      <tag name="translation.loader" alias="res"/>
    </service>
    <service id="translation.loader.dat" class="Symfony\Component\Translation\Loader\IcuDatFileLoader" public="false">
      <tag name="translation.loader" alias="dat"/>
    </service>
    <service id="translation.loader.ini" class="Symfony\Component\Translation\Loader\IniFileLoader" public="false">
      <tag name="translation.loader" alias="ini"/>
    </service>
    <service id="translation.loader.json" class="Symfony\Component\Translation\Loader\JsonFileLoader" public="false">
      <tag name="translation.loader" alias="json"/>
    </service>
    <service id="translation.dumper.php" class="Symfony\Component\Translation\Dumper\PhpFileDumper" public="false">
      <tag name="translation.dumper" alias="php"/>
    </service>
    <service id="translation.dumper.xliff" class="Symfony\Component\Translation\Dumper\XliffFileDumper" public="false">
      <tag name="translation.dumper" alias="xlf"/>
    </service>
    <service id="translation.dumper.po" class="Symfony\Component\Translation\Dumper\PoFileDumper" public="false">
      <tag name="translation.dumper" alias="po"/>
    </service>
    <service id="translation.dumper.mo" class="Symfony\Component\Translation\Dumper\MoFileDumper" public="false">
      <tag name="translation.dumper" alias="mo"/>
    </service>
    <service id="translation.dumper.yml" class="Symfony\Component\Translation\Dumper\YamlFileDumper" public="false">
      <tag name="translation.dumper" alias="yml"/>
    </service>
    <service id="translation.dumper.yaml" class="Symfony\Component\Translation\Dumper\YamlFileDumper" public="false">
      <tag name="translation.dumper" alias="yaml"/>
      <argument>yaml</argument>
    </service>
    <service id="translation.dumper.qt" class="Symfony\Component\Translation\Dumper\QtFileDumper" public="false">
      <tag name="translation.dumper" alias="ts"/>
    </service>
    <service id="translation.dumper.csv" class="Symfony\Component\Translation\Dumper\CsvFileDumper" public="false">
      <tag name="translation.dumper" alias="csv"/>
    </service>
    <service id="translation.dumper.ini" class="Symfony\Component\Translation\Dumper\IniFileDumper" public="false">
      <tag name="translation.dumper" alias="ini"/>
    </service>
    <service id="translation.dumper.json" class="Symfony\Component\Translation\Dumper\JsonFileDumper" public="false">
      <tag name="translation.dumper" alias="json"/>
    </service>
    <service id="translation.dumper.res" class="Symfony\Component\Translation\Dumper\IcuResFileDumper" public="false">
      <tag name="translation.dumper" alias="res"/>
    </service>
    <service id="translation.extractor.php" class="Symfony\Component\Translation\Extractor\PhpExtractor" public="false">
      <tag name="translation.extractor" alias="php"/>
    </service>
    <service id="translation.reader" class="Symfony\Component\Translation\Reader\TranslationReader" public="false">
      <call method="addLoader">
        <argument>php</argument>
        <argument type="service" id="translation.loader.php"/>
      </call>
      <call method="addLoader">
        <argument>yaml</argument>
        <argument type="service" id="translation.loader.yml"/>
      </call>
      <call method="addLoader">
        <argument>yml</argument>
        <argument type="service" id="translation.loader.yml"/>
      </call>
      <call method="addLoader">
        <argument>xlf</argument>
        <argument type="service" id="translation.loader.xliff"/>
      </call>
      <call method="addLoader">
        <argument>xliff</argument>
        <argument type="service" id="translation.loader.xliff"/>
      </call>
      <call method="addLoader">
        <argument>po</argument>
        <argument type="service" id="translation.loader.po"/>
      </call>
      <call method="addLoader">
        <argument>mo</argument>
        <argument type="service" id="translation.loader.mo"/>
      </call>
      <call method="addLoader">
        <argument>ts</argument>
        <argument type="service" id="translation.loader.qt"/>
      </call>
      <call method="addLoader">
        <argument>csv</argument>
        <argument type="service" id="translation.loader.csv"/>
      </call>
      <call method="addLoader">
        <argument>res</argument>
        <argument type="service" id="translation.loader.res"/>
      </call>
      <call method="addLoader">
        <argument>dat</argument>
        <argument type="service" id="translation.loader.dat"/>
      </call>
      <call method="addLoader">
        <argument>ini</argument>
        <argument type="service" id="translation.loader.ini"/>
      </call>
      <call method="addLoader">
        <argument>json</argument>
        <argument type="service" id="translation.loader.json"/>
      </call>
    </service>
    <service id="translation.extractor" class="Symfony\Component\Translation\Extractor\ChainExtractor" public="false">
      <call method="addExtractor">
        <argument>php</argument>
        <argument type="service" id="translation.extractor.php"/>
      </call>
      <call method="addExtractor">
        <argument>twig</argument>
        <argument type="service" id="twig.translation.extractor"/>
      </call>
    </service>
    <service id="translation.writer" class="Symfony\Component\Translation\Writer\TranslationWriter" public="false">
      <call method="addDumper">
        <argument>php</argument>
        <argument type="service" id="translation.dumper.php"/>
      </call>
      <call method="addDumper">
        <argument>xlf</argument>
        <argument type="service" id="translation.dumper.xliff"/>
      </call>
      <call method="addDumper">
        <argument>po</argument>
        <argument type="service" id="translation.dumper.po"/>
      </call>
      <call method="addDumper">
        <argument>mo</argument>
        <argument type="service" id="translation.dumper.mo"/>
      </call>
      <call method="addDumper">
        <argument>yml</argument>
        <argument type="service" id="translation.dumper.yml"/>
      </call>
      <call method="addDumper">
        <argument>yaml</argument>
        <argument type="service" id="translation.dumper.yaml"/>
      </call>
      <call method="addDumper">
        <argument>ts</argument>
        <argument type="service" id="translation.dumper.qt"/>
      </call>
      <call method="addDumper">
        <argument>csv</argument>
        <argument type="service" id="translation.dumper.csv"/>
      </call>
      <call method="addDumper">
        <argument>ini</argument>
        <argument type="service" id="translation.dumper.ini"/>
      </call>
      <call method="addDumper">
        <argument>json</argument>
        <argument type="service" id="translation.dumper.json"/>
      </call>
      <call method="addDumper">
        <argument>res</argument>
        <argument type="service" id="translation.dumper.res"/>
      </call>
    </service>
    <service id="translation.warmer" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\TranslationsCacheWarmer" public="false">
      <tag name="container.service_subscriber" id="translator"/>
      <tag name="kernel.cache_warmer"/>
      <argument type="service" id=".service_locator._pu.0Tb.translation.warmer"/>
    </service>
    <service id="translator_listener" class="Symfony\Component\HttpKernel\EventListener\TranslatorListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="translator.default"/>
      <argument type="service" id="request_stack"/>
    </service>
    <service id=".cache_connection.Jl101tm" class="Symfony\Component\Cache\Adapter\AbstractAdapter" public="false">
      <argument>redis://redis:140cc880790da5e9912114273cbc9129@127.0.0.1:6379/0</argument>
      <argument type="collection">
        <argument key="lazy">true</argument>
      </argument>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createConnection"/>
    </service>
    <service id=".cache_connection.JKE6keX" class="Symfony\Component\Cache\Adapter\AbstractAdapter" public="false">
      <argument>memcached://localhost</argument>
      <argument type="collection">
        <argument key="lazy">true</argument>
      </argument>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createConnection"/>
    </service>
    <service id="app.cache.apcu" class="Symfony\Component\Cache\Adapter\ApcuAdapter" public="false">
      <tag name="cache.pool" default_lifetime="1800"/>
      <argument>6l-8OkT6pn</argument>
      <argument>1800</argument>
      <argument>%container.build_id%</argument>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="app.cache.redis" class="Symfony\Component\Cache\Adapter\RedisAdapter" public="false">
      <tag name="cache.pool" default_lifetime="1800"/>
      <argument type="service" id=".cache_connection.Jl101tm"/>
      <argument>A0P0Sm065g</argument>
      <argument>1800</argument>
      <argument type="service" id="cache.default_marshaller" on-invalid="ignore"/>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.property_access" class="Symfony\Component\Cache\Adapter\ArrayAdapter" public="false">
      <argument>0</argument>
      <argument>false</argument>
    </service>
    <service id="debug.debug_handlers_listener" class="Symfony\Component\HttpKernel\EventListener\DebugHandlersListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="php"/>
      <tag name="container.hot_path"/>
      <argument>null</argument>
      <argument type="service" id="monolog.logger.php" on-invalid="null"/>
      <argument>null</argument>
      <argument>-1</argument>
      <argument>true</argument>
      <argument type="service" id="debug.file_link_formatter"/>
      <argument>true</argument>
    </service>
    <service id="debug.stopwatch" class="Symfony\Component\Stopwatch\Stopwatch">
      <tag name="kernel.reset" method="reset"/>
      <argument>true</argument>
    </service>
    <service id="debug.event_dispatcher" class="Symfony\Component\HttpKernel\Debug\TraceableEventDispatcher" public="false">
      <tag name="container.hot_path"/>
      <tag name="monolog.logger" channel="event"/>
      <argument type="service" id="debug.event_dispatcher.inner"/>
      <argument type="service" id="debug.stopwatch"/>
      <argument type="service" id="monolog.logger.event" on-invalid="null"/>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service" id="http_exception_listener"/>
          <argument>onKernelException</argument>
        </argument>
        <argument>-2048</argument>
      </call>
      <call method="addListener">
        <argument>oneup_uploader.validation</argument>
        <argument type="collection">
          <argument type="service" id="oneup_uploader.validation_listener.max_size"/>
          <argument>onValidate</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>oneup_uploader.validation</argument>
        <argument type="collection">
          <argument type="service" id="oneup_uploader.validation_listener.allowed_mimetype"/>
          <argument>onValidate</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>oneup_uploader.validation</argument>
        <argument type="collection">
          <argument type="service" id="oneup_uploader.validation_listener.disallowed_mimetype"/>
          <argument>onValidate</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="App\Common\Handler\AccountVerificationHandler"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>7</argument>
      </call>
      <call method="addListener">
        <argument>security.authentication.failure</argument>
        <argument type="collection">
          <argument type="service" id="App\Common\Handler\AuthenticationFailureListener"/>
          <argument>onAuthenticationFailure</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="App\Common\Handler\KernelResponseSubscriber"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.view</argument>
        <argument type="collection">
          <argument type="service" id="App\Common\Handler\KernelViewSubscriber"/>
          <argument>onKernelView</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.terminate</argument>
        <argument type="collection">
          <argument type="service" id="App\Common\Handler\RequestTerminateSubscriber"/>
          <argument>onKernelTerminate</argument>
        </argument>
        <argument>-99999</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="App\Common\Handler\SystemMaintainModeHandler"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>6</argument>
      </call>
      <call method="addListener">
        <argument>oneup_uploader.post_persist.default</argument>
        <argument type="collection">
          <argument type="service" id="App\Common\Service\FileUpload\UploadFileListener"/>
          <argument>onFilePersist</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>oneup_uploader.post_persist.admin_article</argument>
        <argument type="collection">
          <argument type="service" id="App\Common\Service\FileUpload\UploadFileListener"/>
          <argument>onArticleFilePersist</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>oneup_uploader.post_persist.identity_image</argument>
        <argument type="collection">
          <argument type="service" id="App\Common\Service\FileUpload\UploadFileListener"/>
          <argument>onIdentityImagePersist</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>console.command</argument>
        <argument type="collection">
          <argument type="service" id="debug.dump_listener"/>
          <argument>configure</argument>
        </argument>
        <argument>1024</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="response_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="streamed_response_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>-1024</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="locale_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>16</argument>
      </call>
      <call method="addListener">
        <argument>kernel.finish_request</argument>
        <argument type="collection">
          <argument type="service" id="locale_listener"/>
          <argument>onKernelFinishRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="validate_request_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>256</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="resolve_controller_name_subscriber"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>24</argument>
      </call>
      <call method="addListener">
        <argument>console.error</argument>
        <argument type="collection">
          <argument type="service" id="console.error_listener"/>
          <argument>onConsoleError</argument>
        </argument>
        <argument>-128</argument>
      </call>
      <call method="addListener">
        <argument>console.terminate</argument>
        <argument type="collection">
          <argument type="service" id="console.error_listener"/>
          <argument>onConsoleTerminate</argument>
        </argument>
        <argument>-128</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="session_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>128</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="session_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>-1000</argument>
      </call>
      <call method="addListener">
        <argument>kernel.finish_request</argument>
        <argument type="collection">
          <argument type="service" id="session_listener"/>
          <argument>onFinishRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="esi_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="fragment.listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>48</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="translator_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>10</argument>
      </call>
      <call method="addListener">
        <argument>kernel.finish_request</argument>
        <argument type="collection">
          <argument type="service" id="translator_listener"/>
          <argument>onKernelFinishRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="debug.debug_handlers_listener"/>
          <argument>configure</argument>
        </argument>
        <argument>2048</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="router_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>32</argument>
      </call>
      <call method="addListener">
        <argument>kernel.finish_request</argument>
        <argument type="collection">
          <argument type="service" id="router_listener"/>
          <argument>onKernelFinishRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service" id="router_listener"/>
          <argument>onKernelException</argument>
        </argument>
        <argument>-64</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="security.rememberme.response_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>debug.security.authorization.vote</argument>
        <argument type="collection">
          <argument type="service" id="debug.security.voter.vote_listener"/>
          <argument>onVoterVote</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="debug.security.firewall"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>8</argument>
      </call>
      <call method="addListener">
        <argument>kernel.finish_request</argument>
        <argument type="collection">
          <argument type="service" id="debug.security.firewall"/>
          <argument>onKernelFinishRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller</argument>
        <argument type="collection">
          <argument type="service" id="sensio_framework_extra.controller.listener"/>
          <argument>onKernelController</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller</argument>
        <argument type="collection">
          <argument type="service" id="sensio_framework_extra.converter.listener"/>
          <argument>onKernelController</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller</argument>
        <argument type="collection">
          <argument type="service" id="sensio_framework_extra.view.listener"/>
          <argument>onKernelController</argument>
        </argument>
        <argument>-128</argument>
      </call>
      <call method="addListener">
        <argument>kernel.view</argument>
        <argument type="collection">
          <argument type="service" id="sensio_framework_extra.view.listener"/>
          <argument>onKernelView</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller</argument>
        <argument type="collection">
          <argument type="service" id="sensio_framework_extra.cache.listener"/>
          <argument>onKernelController</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="sensio_framework_extra.cache.listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller_arguments</argument>
        <argument type="collection">
          <argument type="service" id="sensio_framework_extra.security.listener"/>
          <argument>onKernelControllerArguments</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller_arguments</argument>
        <argument type="collection">
          <argument type="service" id="framework_extra_bundle.event.is_granted"/>
          <argument>onKernelControllerArguments</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>console.command</argument>
        <argument type="collection">
          <argument type="service" id="monolog.handler.console"/>
          <argument>onCommand</argument>
        </argument>
        <argument>255</argument>
      </call>
      <call method="addListener">
        <argument>console.terminate</argument>
        <argument type="collection">
          <argument type="service" id="monolog.handler.console"/>
          <argument>onTerminate</argument>
        </argument>
        <argument>-255</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service" id="swiftmailer.email_sender.listener"/>
          <argument>onException</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.terminate</argument>
        <argument type="collection">
          <argument type="service" id="swiftmailer.email_sender.listener"/>
          <argument>onTerminate</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>console.error</argument>
        <argument type="collection">
          <argument type="service" id="swiftmailer.email_sender.listener"/>
          <argument>onException</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>console.terminate</argument>
        <argument type="collection">
          <argument type="service" id="swiftmailer.email_sender.listener"/>
          <argument>onTerminate</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service" id="twig.exception_listener"/>
          <argument>logKernelException</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service" id="twig.exception_listener"/>
          <argument>onKernelException</argument>
        </argument>
        <argument>-128</argument>
      </call>
    </service>
    <service id="debug.controller_resolver" class="Symfony\Component\HttpKernel\Controller\TraceableControllerResolver" public="false">
      <tag name="monolog.logger" channel="request"/>
      <argument type="service" id="debug.controller_resolver.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.argument_resolver" class="Symfony\Component\HttpKernel\Controller\TraceableArgumentResolver" public="false">
      <argument type="service" id="debug.argument_resolver.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.log_processor" class="Symfony\Bridge\Monolog\Processor\DebugProcessor" public="false">
      <argument type="service" id="request_stack"/>
    </service>
    <service id="routing.resolver" class="Symfony\Component\Config\Loader\LoaderResolver" public="false">
      <call method="addLoader">
        <argument type="service" id="routing.loader.xml"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.yml"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.php"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.glob"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.directory"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.service"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="oneup_uploader.routing.loader"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.annotation"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.annotation.directory"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.annotation.file"/>
      </call>
    </service>
    <service id="routing.loader.xml" class="Symfony\Component\Routing\Loader\XmlFileLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
    </service>
    <service id="routing.loader.yml" class="Symfony\Component\Routing\Loader\YamlFileLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
    </service>
    <service id="routing.loader.php" class="Symfony\Component\Routing\Loader\PhpFileLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
    </service>
    <service id="routing.loader.glob" class="Symfony\Component\Routing\Loader\GlobFileLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
    </service>
    <service id="routing.loader.directory" class="Symfony\Component\Routing\Loader\DirectoryLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
    </service>
    <service id="routing.loader.service" class="Symfony\Component\Routing\Loader\DependencyInjection\ServiceRouterLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="routing.loader" class="Symfony\Bundle\FrameworkBundle\Routing\DelegatingLoader" public="true">
      <argument type="service" id="controller_name_converter"/>
      <argument type="service" id="routing.resolver"/>
      <argument type="collection"/>
    </service>
    <service id="router.default" class="Symfony\Bundle\FrameworkBundle\Routing\Router" public="false">
      <tag name="monolog.logger" channel="router"/>
      <tag name="container.service_subscriber" id="routing.loader"/>
      <argument type="service" id=".service_locator.MAfdX1A.router.default"/>
      <argument>kernel::loadRoutes</argument>
      <argument type="collection">
        <argument key="cache_dir">D:\phpStudy\WWW\foxdou\var\cache\dev</argument>
        <argument key="debug">true</argument>
        <argument key="generator_class">Symfony\Component\Routing\Generator\UrlGenerator</argument>
        <argument key="generator_base_class">Symfony\Component\Routing\Generator\UrlGenerator</argument>
        <argument key="generator_dumper_class">Symfony\Component\Routing\Generator\Dumper\PhpGeneratorDumper</argument>
        <argument key="generator_cache_class">srcApp_KernelDevDebugContainerUrlGenerator</argument>
        <argument key="matcher_class">Symfony\Bundle\FrameworkBundle\Routing\RedirectableUrlMatcher</argument>
        <argument key="matcher_base_class">Symfony\Bundle\FrameworkBundle\Routing\RedirectableUrlMatcher</argument>
        <argument key="matcher_dumper_class">Symfony\Component\Routing\Matcher\Dumper\PhpMatcherDumper</argument>
        <argument key="matcher_cache_class">srcApp_KernelDevDebugContainerUrlMatcher</argument>
        <argument key="strict_requirements">true</argument>
        <argument key="resource_type">service</argument>
      </argument>
      <argument type="service" id="router.request_context" on-invalid="ignore"/>
      <argument type="service" id="parameter_bag" on-invalid="ignore"/>
      <argument type="service" id="monolog.logger.router" on-invalid="ignore"/>
      <call method="setConfigCacheFactory">
        <argument type="service" id="config_cache_factory"/>
      </call>
    </service>
    <service id="router.request_context" class="Symfony\Component\Routing\RequestContext" public="false">
      <argument></argument>
      <argument>GET</argument>
      <argument>localhost</argument>
      <argument>http</argument>
      <argument>80</argument>
      <argument>443</argument>
    </service>
    <service id="router.cache_warmer" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\RouterCacheWarmer" public="false">
      <tag name="container.service_subscriber" id="router"/>
      <tag name="kernel.cache_warmer"/>
      <argument type="service" id=".service_locator.m8PwGkX.router.cache_warmer"/>
    </service>
    <service id="router_listener" class="Symfony\Component\HttpKernel\EventListener\RouterListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="request"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="router.default"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="router.request_context" on-invalid="ignore"/>
      <argument type="service" id="monolog.logger.request" on-invalid="ignore"/>
      <argument>D:\phpStudy\WWW\foxdou</argument>
      <argument>true</argument>
    </service>
    <service id="Symfony\Bundle\FrameworkBundle\Controller\RedirectController" class="Symfony\Bundle\FrameworkBundle\Controller\RedirectController" public="true">
      <argument type="service" id="router.default"/>
      <argument>80</argument>
      <argument>443</argument>
    </service>
    <service id="Symfony\Bundle\FrameworkBundle\Controller\TemplateController" class="Symfony\Bundle\FrameworkBundle\Controller\TemplateController" public="true">
      <argument type="service" id="twig" on-invalid="ignore"/>
      <argument>null</argument>
    </service>
    <service id="routing.loader.annotation" class="Symfony\Bundle\FrameworkBundle\Routing\AnnotatedRouteControllerLoader" public="false">
      <tag name="routing.loader" priority="-10"/>
      <argument type="service" id="annotations.cached_reader"/>
    </service>
    <service id="routing.loader.annotation.directory" class="Symfony\Component\Routing\Loader\AnnotationDirectoryLoader" public="false">
      <tag name="routing.loader" priority="-10"/>
      <argument type="service" id="file_locator"/>
      <argument type="service" id="routing.loader.annotation"/>
    </service>
    <service id="routing.loader.annotation.file" class="Symfony\Component\Routing\Loader\AnnotationFileLoader" public="false">
      <tag name="routing.loader" priority="-10"/>
      <argument type="service" id="file_locator"/>
      <argument type="service" id="routing.loader.annotation"/>
    </service>
    <service id=".2_PhpArrayAdapter~J3KHccw" class="Symfony\Component\Cache\Adapter\PhpArrayAdapter" public="false">
      <argument>D:\phpStudy\WWW\foxdou\var\cache\dev/annotations.php</argument>
      <argument type="service" id="cache.annotations"/>
      <factory class="Symfony\Component\Cache\Adapter\PhpArrayAdapter" method="create"/>
    </service>
    <service id=".1_ArrayCache~J3KHccw" class="Doctrine\Common\Cache\ArrayCache" public="false"/>
    <service id="annotations.reader" class="Doctrine\Common\Annotations\AnnotationReader" public="false">
      <call method="addGlobalIgnoredName">
        <argument>required</argument>
        <argument type="service" id="annotations.dummy_registry"/>
      </call>
    </service>
    <service id="annotations.dummy_registry" class="Doctrine\Common\Annotations\AnnotationRegistry" public="false">
      <call method="registerUniqueLoader">
        <argument>class_exists</argument>
      </call>
    </service>
    <service id="annotations.cached_reader" class="Doctrine\Common\Annotations\CachedReader" public="false">
      <tag name="annotations.cached_reader"/>
      <argument type="service" id="annotations.reader"/>
      <argument type="service" id=".1_ArrayCache~J3KHccw"/>
      <argument>true</argument>
      <property name="cacheProviderBackup" type="service" id="annotations.cache"/>
    </service>
    <service id="annotations.filesystem_cache" class="Doctrine\Common\Cache\FilesystemCache" public="false">
      <argument></argument>
    </service>
    <service id="annotations.cache_warmer" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\AnnotationsCacheWarmer" public="false">
      <tag name="kernel.cache_warmer"/>
      <argument type="service" id="annotations.reader"/>
      <argument>D:\phpStudy\WWW\foxdou\var\cache\dev/annotations.php</argument>
      <argument>#^Symfony\\(?:Component\\HttpKernel\\|Bundle\\FrameworkBundle\\Controller\\(?!AbstractController$|Controller$))#</argument>
      <argument>true</argument>
    </service>
    <service id="annotations.cache" class="Symfony\Component\Cache\DoctrineProvider" public="false">
      <argument type="service" id=".2_PhpArrayAdapter~J3KHccw"/>
    </service>
    <service id="property_accessor" class="Symfony\Component\PropertyAccess\PropertyAccessor" public="false">
      <argument>false</argument>
      <argument>false</argument>
      <argument type="service" id="cache.property_access" on-invalid="ignore"/>
    </service>
    <service id="security.authorization_checker" class="Symfony\Component\Security\Core\Authorization\AuthorizationChecker" public="true">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="debug.security.access.decision_manager"/>
      <argument>false</argument>
    </service>
    <service id="security.token_storage" class="Symfony\Component\Security\Core\Authentication\Token\Storage\TokenStorage" public="true">
      <tag name="kernel.reset" method="setToken"/>
    </service>
    <service id="security.helper" class="Symfony\Component\Security\Core\Security" public="false">
      <argument type="service" id=".service_locator.jD4_ZG7"/>
    </service>
    <service id="security.authentication.manager" class="Symfony\Component\Security\Core\Authentication\AuthenticationProviderManager" public="false">
      <argument type="iterator">
        <argument type="service" id="security.authentication.provider.dao.admin"/>
        <argument type="service" id="security.authentication.provider.anonymous.admin"/>
        <argument type="service" id="security.authentication.provider.dao.main"/>
        <argument type="service" id="security.authentication.provider.anonymous.main"/>
      </argument>
      <argument>true</argument>
      <call method="setEventDispatcher">
        <argument type="service" id="debug.event_dispatcher"/>
      </call>
    </service>
    <service id="security.authentication.trust_resolver" class="Symfony\Component\Security\Core\Authentication\AuthenticationTrustResolver" public="false">
      <argument>null</argument>
      <argument>null</argument>
    </service>
    <service id="security.authentication.session_strategy" class="Symfony\Component\Security\Http\Session\SessionAuthenticationStrategy" public="false">
      <argument>migrate</argument>
    </service>
    <service id="security.authentication.session_strategy_noop" class="Symfony\Component\Security\Http\Session\SessionAuthenticationStrategy" public="false">
      <argument>none</argument>
    </service>
    <service id="security.encoder_factory.generic" class="Symfony\Component\Security\Core\Encoder\EncoderFactory" public="false">
      <argument type="collection">
        <argument key="App\Admin\Model\AdminUser" type="collection">
          <argument key="class">Symfony\Component\Security\Core\Encoder\BCryptPasswordEncoder</argument>
          <argument key="arguments" type="collection">
            <argument>13</argument>
          </argument>
        </argument>
        <argument key="App\Common\Model\User\User" type="collection">
          <argument key="class">Symfony\Component\Security\Core\Encoder\BCryptPasswordEncoder</argument>
          <argument key="arguments" type="collection">
            <argument>13</argument>
          </argument>
        </argument>
      </argument>
    </service>
    <service id="security.user_password_encoder.generic" class="Symfony\Component\Security\Core\Encoder\UserPasswordEncoder" public="false">
      <argument type="service" id="security.encoder_factory.generic"/>
    </service>
    <service id="security.user_checker" class="Symfony\Component\Security\Core\User\UserChecker" public="false"/>
    <service id="security.authentication_utils" class="Symfony\Component\Security\Http\Authentication\AuthenticationUtils" public="true">
      <argument type="service" id="request_stack"/>
    </service>
    <service id="security.role_hierarchy" class="Symfony\Component\Security\Core\Role\RoleHierarchy" public="false">
      <argument>%security.role_hierarchy.roles%</argument>
    </service>
    <service id="security.firewall.map" class="Symfony\Bundle\SecurityBundle\Security\FirewallMap" public="false">
      <argument type="service" id=".service_locator.MamTLlI"/>
      <argument type="iterator">
        <argument key="security.firewall.map.context.dev" type="service" id=".security.request_matcher.Iy.T22O"/>
        <argument key="security.firewall.map.context.admin" type="service" id=".security.request_matcher.TlEZAKG"/>
        <argument key="security.firewall.map.context.main" type="service" id=".security.request_matcher.3UEFixr"/>
      </argument>
    </service>
    <service id="security.firewall.context" class="Symfony\Bundle\SecurityBundle\Security\FirewallContext" public="false" abstract="true">
      <argument type="collection"/>
      <argument type="service" id="security.exception_listener"/>
      <argument></argument>
      <argument></argument>
    </service>
    <service id="security.firewall.config" class="Symfony\Bundle\SecurityBundle\Security\FirewallConfig" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument type="collection"/>
      <argument></argument>
    </service>
    <service id="security.logout_url_generator" class="Symfony\Component\Security\Http\Logout\LogoutUrlGenerator" public="false">
      <argument type="service" id="request_stack" on-invalid="null"/>
      <argument type="service" id="router.default" on-invalid="null"/>
      <argument type="service" id="security.token_storage" on-invalid="null"/>
      <call method="registerListener">
        <argument>admin</argument>
        <argument>admin_logout</argument>
        <argument>logout</argument>
        <argument>_csrf_token</argument>
        <argument>null</argument>
        <argument>null</argument>
      </call>
      <call method="registerListener">
        <argument>main</argument>
        <argument>passport_logout</argument>
        <argument>logout</argument>
        <argument>_csrf_token</argument>
        <argument>null</argument>
        <argument>null</argument>
      </call>
    </service>
    <service id="security.user.provider.missing" class="Symfony\Component\Security\Core\User\MissingUserProvider" public="false" abstract="true">
      <argument></argument>
    </service>
    <service id="security.user.provider.in_memory" class="Symfony\Component\Security\Core\User\InMemoryUserProvider" public="false" abstract="true"/>
    <service id="security.user.provider.in_memory.user" class="Symfony\Component\Security\Core\User\User" public="false" abstract="true">
      <deprecated>The "%service_id%" service is deprecated since Symfony 4.1.</deprecated>
    </service>
    <service id="security.user.provider.ldap" class="Symfony\Component\Security\Core\User\LdapUserProvider" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
    </service>
    <service id="security.user.provider.chain" class="Symfony\Component\Security\Core\User\ChainUserProvider" public="false" abstract="true"/>
    <service id="security.http_utils" class="Symfony\Component\Security\Http\HttpUtils" public="false">
      <argument type="service" id="router.default" on-invalid="null"/>
      <argument type="service" id="router.default" on-invalid="null"/>
      <argument>{^https?://%s$}i</argument>
      <argument>null</argument>
    </service>
    <service id="security.validator.user_password" class="Symfony\Component\Security\Core\Validator\Constraints\UserPasswordValidator" public="false">
      <tag name="validator.constraint_validator" alias="security.validator.user_password"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.encoder_factory.generic"/>
    </service>
    <service id="cache.security_expression_language" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="false">
      <tag name="cache.pool"/>
      <argument>BtHM98N6n+</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>D:\phpStudy\WWW\foxdou\var\cache\dev/pools</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="security.authentication.listener.anonymous" class="Symfony\Component\Security\Http\Firewall\AnonymousAuthenticationListener" public="false">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument></argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="security.authentication.manager"/>
    </service>
    <service id="security.authentication.provider.anonymous" class="Symfony\Component\Security\Core\Authentication\Provider\AnonymousAuthenticationProvider" public="false">
      <argument></argument>
    </service>
    <service id="security.authentication.retry_entry_point" class="Symfony\Component\Security\Http\EntryPoint\RetryAuthenticationEntryPoint" public="false">
      <argument>80</argument>
      <argument>443</argument>
    </service>
    <service id="security.authentication.basic_entry_point" class="Symfony\Component\Security\Http\EntryPoint\BasicAuthenticationEntryPoint" public="false"/>
    <service id="security.channel_listener" class="Symfony\Component\Security\Http\Firewall\ChannelListener" public="false">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.access_map"/>
      <argument type="service" id="security.authentication.retry_entry_point"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.access_map" class="Symfony\Component\Security\Http\AccessMap" public="false">
      <call method="add">
        <argument type="service" id=".security.request_matcher.xujZZ.E"/>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_ANONYMOUSLY</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id=".security.request_matcher.qvrs5E1"/>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_ANONYMOUSLY</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id=".security.request_matcher.eSqmOJG"/>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_ANONYMOUSLY</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id=".security.request_matcher.xXVbMXb"/>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_ANONYMOUSLY</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id=".security.request_matcher.QWkwKV5"/>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_ANONYMOUSLY</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id=".security.request_matcher.cOf0fAF"/>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_ANONYMOUSLY</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id=".security.request_matcher.fBN0W4M"/>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_ANONYMOUSLY</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id=".security.request_matcher.OXN_sne"/>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_ANONYMOUSLY</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id=".security.request_matcher.COpbcNr"/>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_ANONYMOUSLY</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id=".security.request_matcher.otg0cUD"/>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_ANONYMOUSLY</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id=".security.request_matcher.Ym..OoN"/>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_ANONYMOUSLY</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id=".security.request_matcher.mIsBuQ_"/>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_ANONYMOUSLY</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id=".security.request_matcher.xb23Ocn"/>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_ANONYMOUSLY</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id=".security.request_matcher.zHFQVVM"/>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_ANONYMOUSLY</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id=".security.request_matcher.W6aZeIe"/>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_ANONYMOUSLY</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id=".security.request_matcher.pKbVAbs"/>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_ANONYMOUSLY</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id=".security.request_matcher.nrfYCPX"/>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_ANONYMOUSLY</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id=".security.request_matcher.OoANMm7"/>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_ANONYMOUSLY</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id=".security.request_matcher.9czg417"/>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_ANONYMOUSLY</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id=".security.request_matcher.jNP6DfA"/>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_ANONYMOUSLY</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id=".security.request_matcher.hS27xOU"/>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_ANONYMOUSLY</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id=".security.request_matcher..gZgm.D"/>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_ANONYMOUSLY</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id=".security.request_matcher.RVNvL8J"/>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_ANONYMOUSLY</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id=".security.request_matcher.UInEeOT"/>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_ANONYMOUSLY</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id=".security.request_matcher.KlaJxW1"/>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_FULLY</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id=".security.request_matcher.ubgvfAy"/>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_FULLY</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id=".security.request_matcher.5dJADCx"/>
        <argument type="collection">
          <argument>ROLE_ADMIN_ADMINISTRATOR</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id=".security.request_matcher.sYRE7Ew"/>
        <argument type="collection">
          <argument>ROLE_OPEN_PLATFORM</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id=".security.request_matcher.RXsndek"/>
        <argument type="collection">
          <argument>ROLE_RESELLER</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id=".security.request_matcher.lbWFmW9"/>
        <argument type="collection">
          <argument>ROLE_SUPPLIER</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id=".security.request_matcher.eoJuNvA"/>
        <argument type="collection">
          <argument>ROLE_USER</argument>
        </argument>
        <argument>null</argument>
      </call>
    </service>
    <service id="security.context_listener" class="Symfony\Component\Security\Http\Firewall\ContextListener" public="false">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="iterator">
        <argument type="service" id="App\Admin\Service\AdminUserProvider"/>
        <argument type="service" id="App\Common\Service\UserProvider"/>
      </argument>
      <argument></argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
    </service>
    <service id="security.logout_listener" class="Symfony\Component\Security\Http\Firewall\LogoutListener" public="false" abstract="true">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.http_utils"/>
      <argument type="service" id="security.logout.success_handler"/>
      <argument></argument>
      <call method="addHandler">
        <argument type="service" id="security.logout.handler.csrf_token_clearing"/>
      </call>
    </service>
    <service id="security.logout.handler.session" class="Symfony\Component\Security\Http\Logout\SessionLogoutHandler" public="false"/>
    <service id="security.logout.handler.cookie_clearing" class="Symfony\Component\Security\Http\Logout\CookieClearingLogoutHandler" public="false" abstract="true"/>
    <service id="security.logout.success_handler" class="Symfony\Component\Security\Http\Logout\DefaultLogoutSuccessHandler" public="false" abstract="true">
      <argument type="service" id="security.http_utils"/>
      <argument>/</argument>
    </service>
    <service id="security.authentication.form_entry_point" class="Symfony\Component\Security\Http\EntryPoint\FormAuthenticationEntryPoint" public="false" abstract="true">
      <argument type="service" id="http_kernel"/>
    </service>
    <service id="security.authentication.listener.abstract" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="security.authentication.session_strategy"/>
      <argument type="service" id="security.http_utils"/>
      <argument></argument>
      <argument type="service" id="security.authentication.success_handler"/>
      <argument type="service" id="security.authentication.failure_handler"/>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
    </service>
    <service id="security.authentication.custom_success_handler" class="Symfony\Component\Security\Http\Authentication\CustomAuthenticationSuccessHandler" public="false" abstract="true">
      <argument></argument>
      <argument type="collection"/>
      <argument></argument>
    </service>
    <service id="security.authentication.success_handler" class="Symfony\Component\Security\Http\Authentication\DefaultAuthenticationSuccessHandler" public="false" abstract="true">
      <argument type="service" id="security.http_utils"/>
      <argument type="collection"/>
    </service>
    <service id="security.authentication.custom_failure_handler" class="Symfony\Component\Security\Http\Authentication\CustomAuthenticationFailureHandler" public="false" abstract="true">
      <argument></argument>
      <argument type="collection"/>
    </service>
    <service id="security.authentication.failure_handler" class="Symfony\Component\Security\Http\Authentication\DefaultAuthenticationFailureHandler" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="http_kernel"/>
      <argument type="service" id="security.http_utils"/>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.authentication.listener.form" class="Symfony\Component\Security\Http\Firewall\UsernamePasswordFormAuthenticationListener" public="false" abstract="true">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="security.authentication.session_strategy"/>
      <argument type="service" id="security.http_utils"/>
      <argument></argument>
      <argument type="service" id="security.authentication.success_handler"/>
      <argument type="service" id="security.authentication.failure_handler"/>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
    </service>
    <service id="security.authentication.listener.simple_form" class="Symfony\Component\Security\Http\Firewall\SimpleFormAuthenticationListener" public="false" abstract="true">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="security.authentication.session_strategy"/>
      <argument type="service" id="security.http_utils"/>
      <argument></argument>
      <argument type="service" id="security.authentication.success_handler"/>
      <argument type="service" id="security.authentication.failure_handler"/>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <deprecated>The "%service_id%" service is deprecated since Symfony 4.2.</deprecated>
    </service>
    <service id="security.authentication.simple_success_failure_handler" class="Symfony\Component\Security\Http\Authentication\SimpleAuthenticationHandler" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument></argument>
      <argument type="service" id="security.authentication.success_handler"/>
      <argument type="service" id="security.authentication.failure_handler"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <deprecated>The "%service_id%" service is deprecated since Symfony 4.2.</deprecated>
    </service>
    <service id="security.authentication.listener.simple_preauth" class="Symfony\Component\Security\Http\Firewall\SimplePreAuthenticationListener" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument></argument>
      <argument></argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
      <deprecated>The "%service_id%" service is deprecated since Symfony 4.2.</deprecated>
    </service>
    <service id="security.authentication.listener.x509" class="Symfony\Component\Security\Http\Firewall\X509AuthenticationListener" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
    </service>
    <service id="security.authentication.listener.json" class="Symfony\Component\Security\Http\Firewall\UsernamePasswordJsonAuthenticationListener" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="security.http_utils"/>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <argument type="service" id="property_accessor" on-invalid="null"/>
    </service>
    <service id="security.authentication.listener.remote_user" class="Symfony\Component\Security\Http\Firewall\RemoteUserAuthenticationListener" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument></argument>
      <argument></argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
    </service>
    <service id="security.authentication.listener.basic" class="Symfony\Component\Security\Http\Firewall\BasicAuthenticationListener" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument></argument>
      <argument></argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.authentication.provider.dao" class="Symfony\Component\Security\Core\Authentication\Provider\DaoAuthenticationProvider" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument type="service" id="security.encoder_factory.generic"/>
      <argument>true</argument>
    </service>
    <service id="security.authentication.provider.ldap_bind" class="Symfony\Component\Security\Core\Authentication\Provider\LdapBindAuthenticationProvider" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument>true</argument>
    </service>
    <service id="security.authentication.provider.simple" class="Symfony\Component\Security\Core\Authentication\Provider\SimpleAuthenticationProvider" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument>null</argument>
      <deprecated>The "%service_id%" service is deprecated since Symfony 4.2.</deprecated>
    </service>
    <service id="security.authentication.provider.pre_authenticated" class="Symfony\Component\Security\Core\Authentication\Provider\PreAuthenticatedAuthenticationProvider" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
    </service>
    <service id="security.exception_listener" class="Symfony\Component\Security\Http\Firewall\ExceptionListener" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
      <argument type="service" id="security.http_utils"/>
      <argument></argument>
      <argument type="service" id="security.authentication.entry_point" on-invalid="null"/>
      <argument>null</argument>
      <argument type="service" id="security.access.denied_handler" on-invalid="null"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument>false</argument>
    </service>
    <service id="security.authentication.switchuser_listener" class="Symfony\Component\Security\Http\Firewall\SwitchUserListener" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument type="service" id="debug.security.access.decision_manager"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument>_switch_user</argument>
      <argument>ROLE_ALLOWED_TO_SWITCH</argument>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <argument>false</argument>
    </service>
    <service id="security.access_listener" class="Symfony\Component\Security\Http\Firewall\AccessListener" public="false">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="debug.security.access.decision_manager"/>
      <argument type="service" id="security.access_map"/>
      <argument type="service" id="security.authentication.manager"/>
    </service>
    <service id="security.authentication.listener.rememberme" class="Symfony\Component\Security\Http\Firewall\RememberMeListener" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.rememberme"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <argument></argument>
      <argument type="service" id="security.authentication.session_strategy"/>
    </service>
    <service id="security.authentication.provider.rememberme" class="Symfony\Component\Security\Core\Authentication\Provider\RememberMeAuthenticationProvider" public="false" abstract="true">
      <argument></argument>
    </service>
    <service id="security.rememberme.token.provider.in_memory" class="Symfony\Component\Security\Core\Authentication\RememberMe\InMemoryTokenProvider" public="false"/>
    <service id="security.authentication.rememberme.services.abstract" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="collection"/>
      <argument></argument>
      <argument></argument>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.authentication.rememberme.services.persistent" class="Symfony\Component\Security\Http\RememberMe\PersistentTokenBasedRememberMeServices" public="false" abstract="true">
      <argument type="collection"/>
      <argument></argument>
      <argument></argument>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.authentication.rememberme.services.simplehash" class="Symfony\Component\Security\Http\RememberMe\TokenBasedRememberMeServices" public="false" abstract="true">
      <argument type="collection"/>
      <argument></argument>
      <argument></argument>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.rememberme.response_listener" class="Symfony\Component\Security\Http\RememberMe\ResponseListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="templating.helper.logout_url" class="Symfony\Bundle\SecurityBundle\Templating\Helper\LogoutUrlHelper" public="false">
      <tag name="templating.helper" alias="logout_url"/>
      <argument type="service" id="security.logout_url_generator"/>
    </service>
    <service id="templating.helper.security" class="Symfony\Bundle\SecurityBundle\Templating\Helper\SecurityHelper" public="false">
      <tag name="templating.helper" alias="security"/>
      <argument type="service" id="security.authorization_checker" on-invalid="ignore"/>
    </service>
    <service id="twig.extension.logout_url" class="Symfony\Bridge\Twig\Extension\LogoutUrlExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="security.logout_url_generator"/>
    </service>
    <service id="twig.extension.security" class="Symfony\Bridge\Twig\Extension\SecurityExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="security.authorization_checker" on-invalid="ignore"/>
    </service>
    <service id="data_collector.security" class="Symfony\Bundle\SecurityBundle\DataCollector\SecurityDataCollector" public="false">
      <tag name="data_collector" template="@Security/Collector/security.html.twig" id="security" priority="270"/>
      <argument type="service" id="security.token_storage" on-invalid="ignore"/>
      <argument type="service" id="security.role_hierarchy"/>
      <argument type="service" id="security.logout_url_generator"/>
      <argument type="service" id="debug.security.access.decision_manager"/>
      <argument type="service" id="security.firewall.map"/>
      <argument type="service" id="debug.security.firewall" on-invalid="null"/>
    </service>
    <service id="security.authentication.guard_handler" class="Symfony\Component\Security\Guard\GuardAuthenticatorHandler" public="false">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <argument type="collection"/>
      <call method="setSessionAuthenticationStrategy">
        <argument type="service" id="security.authentication.session_strategy"/>
      </call>
    </service>
    <service id="security.authentication.provider.guard" class="Symfony\Component\Security\Guard\Provider\GuardAuthenticationProvider" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
    </service>
    <service id="security.authentication.listener.guard" class="Symfony\Component\Security\Guard\Firewall\GuardAuthenticationListener" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.authentication.guard_handler"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument></argument>
      <argument></argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="debug.security.access.decision_manager" class="Symfony\Component\Security\Core\Authorization\TraceableAccessDecisionManager" public="false">
      <argument type="service" id="debug.security.access.decision_manager.inner"/>
    </service>
    <service id="debug.security.voter.vote_listener" class="Symfony\Bundle\SecurityBundle\EventListener\VoteListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="debug.security.access.decision_manager"/>
    </service>
    <service id="debug.security.firewall" class="Symfony\Bundle\SecurityBundle\Debug\TraceableFirewallListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="security.firewall.map"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="security.logout_url_generator"/>
    </service>
    <service id="security.firewall.map.config.dev" class="Symfony\Bundle\SecurityBundle\Security\FirewallConfig" public="false">
      <argument>dev</argument>
      <argument>security.user_checker</argument>
      <argument>.security.request_matcher.Iy.T22O</argument>
      <argument>false</argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument type="collection"/>
      <argument></argument>
    </service>
    <service id=".security.request_matcher.Iy.T22O" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/(_(profiler|wdt)|css|images|js)/</argument>
    </service>
    <service id="security.firewall.map.context.dev" class="Symfony\Bundle\SecurityBundle\Security\FirewallContext" public="false">
      <argument type="iterator"/>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="service" id="security.firewall.map.config.dev"/>
    </service>
    <service id="security.firewall.map.config.admin" class="Symfony\Bundle\SecurityBundle\Security\FirewallConfig" public="false">
      <argument>admin</argument>
      <argument>security.user_checker</argument>
      <argument>.security.request_matcher.TlEZAKG</argument>
      <argument>true</argument>
      <argument>false</argument>
      <argument>App\Admin\Service\AdminUserProvider</argument>
      <argument>admin</argument>
      <argument>security.authentication.form_entry_point.admin</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="collection">
        <argument>form_login</argument>
        <argument>anonymous</argument>
      </argument>
      <argument>null</argument>
    </service>
    <service id=".security.request_matcher.TlEZAKG" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/admin/</argument>
    </service>
    <service id="security.context_listener.0" class="Symfony\Component\Security\Http\Firewall\ContextListener" public="false">
      <argument type="service" id="security.token_storage"/>
      <argument type="iterator">
        <argument type="service" id="App\Admin\Service\AdminUserProvider"/>
        <argument type="service" id="App\Common\Service\UserProvider"/>
      </argument>
      <argument>admin</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
    </service>
    <service id="security.logout_listener.admin" class="Symfony\Component\Security\Http\Firewall\LogoutListener" public="false">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.http_utils"/>
      <argument type="service" id="security.logout.success_handler.admin"/>
      <argument type="collection">
        <argument key="csrf_parameter">_csrf_token</argument>
        <argument key="csrf_token_id">logout</argument>
        <argument key="logout_path">admin_logout</argument>
      </argument>
      <call method="addHandler">
        <argument type="service" id="security.logout.handler.csrf_token_clearing"/>
      </call>
      <call method="addHandler">
        <argument type="service" id="security.logout.handler.session"/>
      </call>
    </service>
    <service id="security.logout.success_handler.admin" class="Symfony\Component\Security\Http\Logout\DefaultLogoutSuccessHandler" public="false">
      <argument type="service" id="security.http_utils"/>
      <argument>admin_dashboard_index</argument>
    </service>
    <service id="security.authentication.provider.dao.admin" class="Symfony\Component\Security\Core\Authentication\Provider\DaoAuthenticationProvider" public="false">
      <argument type="service" id="App\Admin\Service\AdminUserProvider"/>
      <argument type="service" id="security.user_checker"/>
      <argument>admin</argument>
      <argument type="service" id="security.encoder_factory.generic"/>
      <argument>true</argument>
    </service>
    <service id="security.authentication.success_handler.admin.form_login" class="Symfony\Component\Security\Http\Authentication\DefaultAuthenticationSuccessHandler" public="false">
      <argument type="service" id="security.http_utils"/>
      <argument type="collection"/>
      <call method="setOptions">
        <argument type="collection">
          <argument key="target_path_parameter">_target_path</argument>
          <argument key="login_path">admin_login</argument>
          <argument key="default_target_path">admin_dashboard_index</argument>
          <argument key="always_use_default_target_path">false</argument>
          <argument key="use_referer">false</argument>
        </argument>
      </call>
      <call method="setProviderKey">
        <argument>admin</argument>
      </call>
    </service>
    <service id="security.authentication.failure_handler.admin.form_login" class="Symfony\Component\Security\Http\Authentication\DefaultAuthenticationFailureHandler" public="false">
      <argument type="service" id="http_kernel"/>
      <argument type="service" id="security.http_utils"/>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <call method="setOptions">
        <argument type="collection">
          <argument key="login_path">admin_login</argument>
          <argument key="failure_path">null</argument>
          <argument key="failure_forward">false</argument>
          <argument key="failure_path_parameter">_failure_path</argument>
        </argument>
      </call>
    </service>
    <service id="security.authentication.listener.form.admin" class="Symfony\Component\Security\Http\Firewall\UsernamePasswordFormAuthenticationListener" public="false">
      <tag name="security.remember_me_aware" id="admin" provider="App\Admin\Service\AdminUserProvider"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="security.authentication.session_strategy"/>
      <argument type="service" id="security.http_utils"/>
      <argument>admin</argument>
      <argument type="service" id="security.authentication.success_handler.admin.form_login"/>
      <argument type="service" id="security.authentication.failure_handler.admin.form_login"/>
      <argument type="collection">
        <argument key="username_parameter">username</argument>
        <argument key="password_parameter">password</argument>
        <argument key="csrf_parameter">_token</argument>
        <argument key="csrf_token_id">authenticate</argument>
        <argument key="check_path">admin_login</argument>
        <argument key="use_forward">false</argument>
        <argument key="require_previous_session">false</argument>
        <argument key="post_only">true</argument>
      </argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <argument type="service" id="security.csrf.token_manager"/>
    </service>
    <service id="security.authentication.form_entry_point.admin" class="Symfony\Component\Security\Http\EntryPoint\FormAuthenticationEntryPoint" public="false">
      <argument type="service" id="http_kernel"/>
      <argument type="service" id="security.http_utils"/>
      <argument>admin_login</argument>
      <argument>false</argument>
    </service>
    <service id="security.authentication.listener.anonymous.admin" class="Symfony\Component\Security\Http\Firewall\AnonymousAuthenticationListener" public="false">
      <argument type="service" id="security.token_storage"/>
      <argument>%container.build_hash%</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="security.authentication.manager"/>
    </service>
    <service id="security.authentication.provider.anonymous.admin" class="Symfony\Component\Security\Core\Authentication\Provider\AnonymousAuthenticationProvider" public="false">
      <argument>%container.build_hash%</argument>
    </service>
    <service id="security.exception_listener.admin" class="Symfony\Component\Security\Http\Firewall\ExceptionListener" public="false">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
      <argument type="service" id="security.http_utils"/>
      <argument>admin</argument>
      <argument type="service" id="security.authentication.form_entry_point.admin"/>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument>false</argument>
    </service>
    <service id="security.firewall.map.context.admin" class="Symfony\Bundle\SecurityBundle\Security\FirewallContext" public="false">
      <argument type="iterator">
        <argument type="service" id="security.channel_listener"/>
        <argument type="service" id="security.context_listener.0"/>
        <argument type="service" id="security.authentication.listener.form.admin"/>
        <argument type="service" id="security.authentication.listener.anonymous.admin"/>
        <argument type="service" id="security.access_listener"/>
      </argument>
      <argument type="service" id="security.exception_listener.admin"/>
      <argument type="service" id="security.logout_listener.admin"/>
      <argument type="service" id="security.firewall.map.config.admin"/>
    </service>
    <service id="security.firewall.map.config.main" class="Symfony\Bundle\SecurityBundle\Security\FirewallConfig" public="false">
      <argument>main</argument>
      <argument>App\Common\Service\UserChecker</argument>
      <argument>.security.request_matcher.3UEFixr</argument>
      <argument>true</argument>
      <argument>false</argument>
      <argument>App\Common\Service\UserProvider</argument>
      <argument>main</argument>
      <argument>security.authentication.form_entry_point.main</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="collection">
        <argument>form_login</argument>
        <argument>anonymous</argument>
      </argument>
      <argument>null</argument>
    </service>
    <service id=".security.request_matcher.3UEFixr" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/</argument>
    </service>
    <service id="security.context_listener.1" class="Symfony\Component\Security\Http\Firewall\ContextListener" public="false">
      <argument type="service" id="security.token_storage"/>
      <argument type="iterator">
        <argument type="service" id="App\Admin\Service\AdminUserProvider"/>
        <argument type="service" id="App\Common\Service\UserProvider"/>
      </argument>
      <argument>main</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
    </service>
    <service id="security.logout_listener.main" class="Symfony\Component\Security\Http\Firewall\LogoutListener" public="false">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.http_utils"/>
      <argument type="service" id="App\Common\Handler\UserLogoutSuccessHandler"/>
      <argument type="collection">
        <argument key="csrf_parameter">_csrf_token</argument>
        <argument key="csrf_token_id">logout</argument>
        <argument key="logout_path">passport_logout</argument>
      </argument>
      <call method="addHandler">
        <argument type="service" id="security.logout.handler.csrf_token_clearing"/>
      </call>
      <call method="addHandler">
        <argument type="service" id="security.logout.handler.session"/>
      </call>
    </service>
    <service id="security.authentication.provider.dao.main" class="Symfony\Component\Security\Core\Authentication\Provider\DaoAuthenticationProvider" public="false">
      <argument type="service" id="App\Common\Service\UserProvider"/>
      <argument type="service" id="App\Common\Service\UserChecker"/>
      <argument>main</argument>
      <argument type="service" id="security.encoder_factory.generic"/>
      <argument>true</argument>
    </service>
    <service id="security.authentication.success_handler.main.form_login" class="Symfony\Component\Security\Http\Authentication\CustomAuthenticationSuccessHandler" public="false">
      <argument type="service" id="App\Common\Handler\UserLoginSuccessHandler"/>
      <argument type="collection">
        <argument key="target_path_parameter">_target_path</argument>
        <argument key="login_path">passport_login</argument>
        <argument key="default_target_path">frontpage</argument>
        <argument key="always_use_default_target_path">false</argument>
        <argument key="use_referer">false</argument>
      </argument>
      <argument>main</argument>
    </service>
    <service id="security.authentication.failure_handler.main.form_login" class="Symfony\Component\Security\Http\Authentication\DefaultAuthenticationFailureHandler" public="false">
      <argument type="service" id="http_kernel"/>
      <argument type="service" id="security.http_utils"/>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <call method="setOptions">
        <argument type="collection">
          <argument key="login_path">passport_login</argument>
          <argument key="failure_path">null</argument>
          <argument key="failure_forward">false</argument>
          <argument key="failure_path_parameter">_failure_path</argument>
        </argument>
      </call>
    </service>
    <service id="security.authentication.listener.form.main" class="Symfony\Component\Security\Http\Firewall\UsernamePasswordFormAuthenticationListener" public="false">
      <tag name="security.remember_me_aware" id="main" provider="App\Common\Service\UserProvider"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="security.authentication.session_strategy"/>
      <argument type="service" id="security.http_utils"/>
      <argument>main</argument>
      <argument type="service" id="security.authentication.success_handler.main.form_login"/>
      <argument type="service" id="security.authentication.failure_handler.main.form_login"/>
      <argument type="collection">
        <argument key="username_parameter">username</argument>
        <argument key="password_parameter">password</argument>
        <argument key="csrf_parameter">_token</argument>
        <argument key="csrf_token_id">authenticate</argument>
        <argument key="check_path">passport_login</argument>
        <argument key="use_forward">false</argument>
        <argument key="require_previous_session">false</argument>
        <argument key="post_only">true</argument>
      </argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <argument type="service" id="security.csrf.token_manager"/>
    </service>
    <service id="security.authentication.form_entry_point.main" class="Symfony\Component\Security\Http\EntryPoint\FormAuthenticationEntryPoint" public="false">
      <argument type="service" id="http_kernel"/>
      <argument type="service" id="security.http_utils"/>
      <argument>passport_login</argument>
      <argument>false</argument>
    </service>
    <service id="security.authentication.listener.anonymous.main" class="Symfony\Component\Security\Http\Firewall\AnonymousAuthenticationListener" public="false">
      <argument type="service" id="security.token_storage"/>
      <argument>%container.build_hash%</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="security.authentication.manager"/>
    </service>
    <service id="security.authentication.provider.anonymous.main" class="Symfony\Component\Security\Core\Authentication\Provider\AnonymousAuthenticationProvider" public="false">
      <argument>%container.build_hash%</argument>
    </service>
    <service id="security.exception_listener.main" class="Symfony\Component\Security\Http\Firewall\ExceptionListener" public="false">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
      <argument type="service" id="security.http_utils"/>
      <argument>main</argument>
      <argument type="service" id="security.authentication.form_entry_point.main"/>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument>false</argument>
    </service>
    <service id="security.firewall.map.context.main" class="Symfony\Bundle\SecurityBundle\Security\FirewallContext" public="false">
      <argument type="iterator">
        <argument type="service" id="security.channel_listener"/>
        <argument type="service" id="security.context_listener.1"/>
        <argument type="service" id="security.authentication.listener.form.main"/>
        <argument type="service" id="security.authentication.listener.anonymous.main"/>
        <argument type="service" id="security.access_listener"/>
      </argument>
      <argument type="service" id="security.exception_listener.main"/>
      <argument type="service" id="security.logout_listener.main"/>
      <argument type="service" id="security.firewall.map.config.main"/>
    </service>
    <service id=".service_locator.MamTLlI" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="security.firewall.map.context.admin" type="service" id="security.firewall.map.context.admin"/>
        <argument key="security.firewall.map.context.dev" type="service" id="security.firewall.map.context.dev"/>
        <argument key="security.firewall.map.context.main" type="service" id="security.firewall.map.context.main"/>
      </argument>
    </service>
    <service id=".security.request_matcher.xujZZ.E" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/$</argument>
    </service>
    <service id=".security.request_matcher.qvrs5E1" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/error/.*</argument>
    </service>
    <service id=".security.request_matcher.eSqmOJG" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/test/</argument>
    </service>
    <service id=".security.request_matcher.xXVbMXb" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/common/test/</argument>
    </service>
    <service id=".security.request_matcher.QWkwKV5" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/login</argument>
    </service>
    <service id=".security.request_matcher.cOf0fAF" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/passport/register</argument>
    </service>
    <service id=".security.request_matcher.fBN0W4M" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/passport/login</argument>
    </service>
    <service id=".security.request_matcher.OXN_sne" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/passport/activation/</argument>
    </service>
    <service id=".security.request_matcher.COpbcNr" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/passport/tool</argument>
    </service>
    <service id=".security.request_matcher.otg0cUD" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/passport/protect</argument>
    </service>
    <service id=".security.request_matcher.Ym..OoN" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/passport/question</argument>
    </service>
    <service id=".security.request_matcher.mIsBuQ_" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/passport/registerpassword-reset</argument>
    </service>
    <service id=".security.request_matcher.xb23Ocn" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/common/articles</argument>
    </service>
    <service id=".security.request_matcher.zHFQVVM" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/common/recaptcha</argument>
    </service>
    <service id=".security.request_matcher.W6aZeIe" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/common/sms-verifier/</argument>
    </service>
    <service id=".security.request_matcher.pKbVAbs" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/common/user/register</argument>
    </service>
    <service id=".security.request_matcher.nrfYCPX" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/common/user/welcome</argument>
    </service>
    <service id=".security.request_matcher.OoANMm7" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/common/user/activate/.+</argument>
    </service>
    <service id=".security.request_matcher.9czg417" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/admin/login</argument>
    </service>
    <service id=".security.request_matcher.jNP6DfA" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/common/finance/balance/add-balance/alipay/notify</argument>
    </service>
    <service id=".security.request_matcher.hS27xOU" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/reseller[\/]*$</argument>
    </service>
    <service id=".security.request_matcher..gZgm.D" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/reseller/home/</argument>
    </service>
    <service id=".security.request_matcher.RVNvL8J" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/open[\/]*$</argument>
    </service>
    <service id=".security.request_matcher.UInEeOT" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/supplier[\/]*$</argument>
    </service>
    <service id=".security.request_matcher.KlaJxW1" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/passport/.*</argument>
    </service>
    <service id=".security.request_matcher.ubgvfAy" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/common/uploader/*</argument>
    </service>
    <service id=".security.request_matcher.5dJADCx" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/admin</argument>
    </service>
    <service id=".security.request_matcher.sYRE7Ew" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/open/.*</argument>
    </service>
    <service id=".security.request_matcher.RXsndek" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/reseller/.*</argument>
    </service>
    <service id=".security.request_matcher.lbWFmW9" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/supplier/.*</argument>
    </service>
    <service id=".security.request_matcher.eoJuNvA" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/.*</argument>
    </service>
    <service id="security.command.user_password_encoder" class="Symfony\Bundle\SecurityBundle\Command\UserPasswordEncoderCommand" public="false">
      <tag name="console.command" command="security:encode-password"/>
      <argument type="service" id="security.encoder_factory.generic"/>
      <argument type="collection">
        <argument>App\Admin\Model\AdminUser</argument>
        <argument>App\Common\Model\User\User</argument>
      </argument>
      <call method="setName">
        <argument>security:encode-password</argument>
      </call>
    </service>
    <service id="sensio_framework_extra.controller.listener" class="Sensio\Bundle\FrameworkExtraBundle\EventListener\ControllerListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="annotations.cached_reader"/>
    </service>
    <service id="sensio_framework_extra.converter.listener" class="Sensio\Bundle\FrameworkExtraBundle\EventListener\ParamConverterListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="sensio_framework_extra.converter.manager"/>
      <argument>true</argument>
    </service>
    <service id="sensio_framework_extra.converter.manager" class="Sensio\Bundle\FrameworkExtraBundle\Request\ParamConverter\ParamConverterManager">
      <call method="add">
        <argument type="service" id="sensio_framework_extra.converter.doctrine.orm"/>
        <argument>0</argument>
        <argument>doctrine.orm</argument>
      </call>
      <call method="add">
        <argument type="service" id="framework_extra_bundle.date_time_param_converter"/>
        <argument>0</argument>
        <argument>datetime</argument>
      </call>
    </service>
    <service id="sensio_framework_extra.converter.doctrine.orm" class="Sensio\Bundle\FrameworkExtraBundle\Request\ParamConverter\DoctrineParamConverter" public="false">
      <tag name="request.param_converter" converter="doctrine.orm"/>
      <argument>null</argument>
      <argument>null</argument>
    </service>
    <service id="framework_extra_bundle.date_time_param_converter" class="Sensio\Bundle\FrameworkExtraBundle\Request\ParamConverter\DateTimeParamConverter" public="false">
      <tag name="request.param_converter" converter="datetime"/>
    </service>
    <service id="sensio_framework_extra.view.guesser" class="Sensio\Bundle\FrameworkExtraBundle\Templating\TemplateGuesser" public="false">
      <argument type="service" id="kernel"/>
    </service>
    <service id="sensio_framework_extra.view.listener" class="Sensio\Bundle\FrameworkExtraBundle\EventListener\TemplateListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="sensio_framework_extra.view.guesser"/>
      <argument type="service" id="twig" on-invalid="null"/>
    </service>
    <service id="sensio_framework_extra.cache.listener" class="Sensio\Bundle\FrameworkExtraBundle\EventListener\HttpCacheListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="sensio_framework_extra.security.listener" class="Sensio\Bundle\FrameworkExtraBundle\EventListener\SecurityListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="framework_extra_bundle.argument_name_convertor"/>
      <argument>null</argument>
      <argument type="service" id="security.authentication.trust_resolver" on-invalid="null"/>
      <argument type="service" id="security.role_hierarchy" on-invalid="null"/>
      <argument type="service" id="security.token_storage" on-invalid="null"/>
      <argument type="service" id="security.authorization_checker" on-invalid="null"/>
      <argument type="service" id="monolog.logger" on-invalid="null"/>
    </service>
    <service id="framework_extra_bundle.event.is_granted" class="Sensio\Bundle\FrameworkExtraBundle\EventListener\IsGrantedListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="framework_extra_bundle.argument_name_convertor"/>
      <argument type="service" id="security.authorization_checker" on-invalid="null"/>
    </service>
    <service id="framework_extra_bundle.argument_name_convertor" class="Sensio\Bundle\FrameworkExtraBundle\Request\ArgumentNameConverter" public="false">
      <argument type="service" id="argument_metadata_factory"/>
    </service>
    <service id="monolog.logger" class="Symfony\Bridge\Monolog\Logger" public="false">
      <argument>app</argument>
      <call method="useMicrosecondTimestamps">
        <argument>true</argument>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
    </service>
    <service id="monolog.logger_prototype" class="Symfony\Bridge\Monolog\Logger" abstract="true">
      <argument></argument>
    </service>
    <service id="monolog.activation_strategy.not_found" class="Symfony\Bridge\Monolog\Handler\FingersCrossed\NotFoundActivationStrategy" abstract="true"/>
    <service id="monolog.handler.fingers_crossed.error_level_activation_strategy" class="Monolog\Handler\FingersCrossed\ErrorLevelActivationStrategy" abstract="true"/>
    <service id="monolog.formatter.chrome_php" class="Monolog\Formatter\ChromePHPFormatter" public="false"/>
    <service id="monolog.formatter.gelf_message" class="Monolog\Formatter\GelfMessageFormatter" public="false"/>
    <service id="monolog.formatter.html" class="Monolog\Formatter\HtmlFormatter" public="false"/>
    <service id="monolog.formatter.json" class="Monolog\Formatter\JsonFormatter" public="false"/>
    <service id="monolog.formatter.line" class="Monolog\Formatter\LineFormatter" public="false"/>
    <service id="monolog.formatter.loggly" class="Monolog\Formatter\LogglyFormatter" public="false"/>
    <service id="monolog.formatter.normalizer" class="Monolog\Formatter\NormalizerFormatter" public="false"/>
    <service id="monolog.formatter.scalar" class="Monolog\Formatter\ScalarFormatter" public="false"/>
    <service id="monolog.formatter.wildfire" class="Monolog\Formatter\WildfireFormatter" public="false"/>
    <service id="monolog.formatter.logstash" class="Monolog\Formatter\LogstashFormatter" public="false">
      <argument>app</argument>
    </service>
    <service id="monolog.processor.psr_log_message" class="Monolog\Processor\PsrLogMessageProcessor" public="false"/>
    <service id="monolog.handler.main" class="Monolog\Handler\StreamHandler">
      <argument>D:\phpStudy\WWW\foxdou\var\log/dev.log</argument>
      <argument>100</argument>
      <argument>true</argument>
      <argument>null</argument>
      <call method="pushProcessor">
        <argument type="service" id="monolog.processor.psr_log_message"/>
      </call>
    </service>
    <service id="monolog.handler.console" class="Symfony\Bridge\Monolog\Handler\ConsoleHandler">
      <tag name="kernel.event_subscriber"/>
      <argument>null</argument>
      <argument>true</argument>
      <argument type="collection"/>
    </service>
    <service id=".4_Swift_Transport_Esmtp_Auth_NTLMAuthenticator~itgjL8Z" class="Swift_Transport_Esmtp_Auth_NTLMAuthenticator" public="false"/>
    <service id=".3_Swift_Transport_Esmtp_Auth_PlainAuthenticator~itgjL8Z" class="Swift_Transport_Esmtp_Auth_PlainAuthenticator" public="false"/>
    <service id=".2_Swift_Transport_Esmtp_Auth_LoginAuthenticator~itgjL8Z" class="Swift_Transport_Esmtp_Auth_LoginAuthenticator" public="false"/>
    <service id=".1_Swift_Transport_Esmtp_Auth_CramMd5Authenticator~itgjL8Z" class="Swift_Transport_Esmtp_Auth_CramMd5Authenticator" public="false"/>
    <service id="swiftmailer.mailer.abstract" class="Swift_Mailer" public="true" abstract="true">
      <argument type="service" id="swiftmailer.mailer.mxhichina.transport.spool"/>
    </service>
    <service id="swiftmailer.transport.smtp.configurator.abstract" class="Symfony\Bundle\SwiftmailerBundle\DependencyInjection\SmtpTransportConfigurator" public="false" abstract="true"/>
    <service id="swiftmailer.transport.sendmail.abstract" class="Swift_Transport_SendmailTransport" public="false" abstract="true"/>
    <service id="swiftmailer.transport.null.abstract" class="Swift_Transport_NullTransport" public="false" abstract="true"/>
    <service id="swiftmailer.transport.failover" class="Swift_Transport_FailoverTransport" public="false"/>
    <service id="swiftmailer.transport.buffer.abstract" class="Swift_Transport_StreamBuffer" public="false" abstract="true">
      <argument type="service" id="swiftmailer.transport.replacementfactory"/>
    </service>
    <service id="swiftmailer.transport.authhandler.abstract" class="Swift_Transport_Esmtp_AuthHandler" public="false" abstract="true">
      <argument type="collection">
        <argument type="service" id=".1_Swift_Transport_Esmtp_Auth_CramMd5Authenticator~itgjL8Z"/>
        <argument type="service" id=".2_Swift_Transport_Esmtp_Auth_LoginAuthenticator~itgjL8Z"/>
        <argument type="service" id=".3_Swift_Transport_Esmtp_Auth_PlainAuthenticator~itgjL8Z"/>
        <argument type="service" id=".4_Swift_Transport_Esmtp_Auth_NTLMAuthenticator~itgjL8Z"/>
      </argument>
    </service>
    <service id="swiftmailer.transport.eventdispatcher.abstract" class="Swift_Events_SimpleEventDispatcher" public="false" abstract="true"/>
    <service id="swiftmailer.transport.replacementfactory" class="Swift_StreamFilters_StringReplacementFilterFactory" public="false"/>
    <service id="swiftmailer.plugin.redirecting.abstract" class="Swift_Plugins_RedirectingPlugin" public="false" abstract="true"/>
    <service id="swiftmailer.plugin.antiflood.abstract" class="Swift_Plugins_AntiFloodPlugin" public="false" abstract="true"/>
    <service id="swiftmailer.plugin.impersonate.abstract" class="Swift_Plugins_ImpersonatePlugin" public="false" abstract="true"/>
    <service id="swiftmailer.plugin.messagelogger.abstract" class="Swift_Plugins_MessageLogger" abstract="true"/>
    <service id="swiftmailer.transport.smtp.abstract" class="Swift_Transport_EsmtpTransport" public="false" abstract="true"/>
    <service id="swiftmailer.transport.spool.abstract" class="Swift_Transport_SpoolTransport" public="false" abstract="true"/>
    <service id="swiftmailer.spool.file.abstract" class="Swift_FileSpool" public="false" abstract="true">
      <argument>D:\phpStudy\WWW\foxdou\src/../data/swiftmailer/spool</argument>
    </service>
    <service id="swiftmailer.spool.memory.abstract" class="Swift_MemorySpool" public="false" abstract="true"/>
    <service id="swiftmailer.email_sender.listener" class="Symfony\Bundle\SwiftmailerBundle\EventListener\EmailSenderListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="monolog.logger" on-invalid="null"/>
    </service>
    <service id="swiftmailer.data_collector" class="Symfony\Bundle\SwiftmailerBundle\DataCollector\MessageDataCollector" public="false">
      <tag name="data_collector" template="@Swiftmailer/Collector/swiftmailer.html.twig" id="swiftmailer" priority="245"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="swiftmailer.command.debug" class="Symfony\Bundle\SwiftmailerBundle\Command\DebugCommand">
      <tag name="console.command" command="debug:swiftmailer"/>
      <call method="setName">
        <argument>debug:swiftmailer</argument>
      </call>
    </service>
    <service id="swiftmailer.command.new_email" class="Symfony\Bundle\SwiftmailerBundle\Command\NewEmailCommand">
      <tag name="console.command" command="swiftmailer:email:send"/>
      <call method="setName">
        <argument>swiftmailer:email:send</argument>
      </call>
    </service>
    <service id="swiftmailer.command.send_email" class="Symfony\Bundle\SwiftmailerBundle\Command\SendEmailCommand">
      <tag name="console.command" command="swiftmailer:spool:send"/>
      <call method="setName">
        <argument>swiftmailer:spool:send</argument>
      </call>
    </service>
    <service id="swiftmailer.mailer.mxhichina.transport.eventdispatcher" class="Swift_Events_SimpleEventDispatcher" public="false"/>
    <service id="swiftmailer.mailer.mxhichina.transport.dynamic" class="Swift_Transport">
      <argument type="collection">
        <argument key="transport">smtp</argument>
        <argument key="url">%env(MAILER_URL)%</argument>
        <argument key="username">null</argument>
        <argument key="password">null</argument>
        <argument key="host">localhost</argument>
        <argument key="port">null</argument>
        <argument key="timeout">30</argument>
        <argument key="source_ip">null</argument>
        <argument key="local_domain">null</argument>
        <argument key="encryption">null</argument>
        <argument key="auth_mode">null</argument>
        <argument key="command">/usr/sbin/sendmail -bs</argument>
      </argument>
      <argument type="service" id="router.request_context" on-invalid="null"/>
      <argument type="service" id="swiftmailer.mailer.mxhichina.transport.eventdispatcher"/>
      <factory class="Symfony\Bundle\SwiftmailerBundle\DependencyInjection\SwiftmailerTransportFactory" method="createTransport"/>
    </service>
    <service id="swiftmailer.mailer.mxhichina" class="Swift_Mailer" public="true">
      <argument type="service" id="swiftmailer.mailer.mxhichina.transport.spool"/>
    </service>
    <service id="swiftmailer.mailer.mxhichina.spool.file" class="Swift_FileSpool" public="false">
      <argument>D:\phpStudy\WWW\foxdou\var\cache\dev/swiftmailer/spool/mxhichina</argument>
    </service>
    <service id="swiftmailer.mailer.mxhichina.transport.spool" class="Swift_Transport_SpoolTransport" public="false">
      <argument type="service" id="swiftmailer.mailer.mxhichina.transport.eventdispatcher"/>
      <argument type="service" id="swiftmailer.mailer.mxhichina.spool.file"/>
      <call method="registerPlugin">
        <argument type="service" id="swiftmailer.mailer.mxhichina.plugin.impersonate"/>
      </call>
      <call method="registerPlugin">
        <argument type="service" id="swiftmailer.mailer.mxhichina.plugin.antiflood"/>
      </call>
      <call method="registerPlugin">
        <argument type="service" id="swiftmailer.mailer.mxhichina.plugin.messagelogger"/>
      </call>
    </service>
    <service id="swiftmailer.mailer.mxhichina.plugin.impersonate" class="Swift_Plugins_ImpersonatePlugin" public="false">
      <tag name="swiftmailer.mxhichina.plugin"/>
      <argument>gxlclizongjun@163.com</argument>
    </service>
    <service id="swiftmailer.mailer.mxhichina.plugin.antiflood" class="Swift_Plugins_AntiFloodPlugin" public="false">
      <tag name="swiftmailer.mxhichina.plugin"/>
      <argument>99</argument>
      <argument>1</argument>
    </service>
    <service id="swiftmailer.mailer.mxhichina.plugin.messagelogger" class="Swift_Plugins_MessageLogger" public="true">
      <tag name="swiftmailer.mxhichina.plugin"/>
    </service>
    <service id="twig" class="Twig\Environment" public="true">
      <argument type="service" id="twig.loader.native_filesystem"/>
      <argument type="collection">
        <argument key="debug">true</argument>
        <argument key="strict_variables">true</argument>
        <argument key="exception_controller">twig.controller.exception::showAction</argument>
        <argument key="form_themes" type="collection">
          <argument>form_div_layout.html.twig</argument>
        </argument>
        <argument key="autoescape">name</argument>
        <argument key="cache">D:\phpStudy\WWW\foxdou\var\cache\dev/twig</argument>
        <argument key="charset">UTF-8</argument>
        <argument key="default_path">D:\phpStudy\WWW\foxdou/templates</argument>
        <argument key="paths" type="collection"/>
        <argument key="date" type="collection">
          <argument key="format">F j, Y H:i</argument>
          <argument key="interval_format">%d days</argument>
          <argument key="timezone">null</argument>
        </argument>
        <argument key="number_format" type="collection">
          <argument key="decimals">0</argument>
          <argument key="decimal_point">.</argument>
          <argument key="thousands_separator">,</argument>
        </argument>
      </argument>
      <call method="addExtension">
        <argument type="service" id="twig.extension.dump"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.security_csrf"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.logout_url"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.security"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.profiler"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.trans"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.assets"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.code"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.routing"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.yaml"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.debug.stopwatch"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.httpkernel"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.httpfoundation"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="App\Common\Twig\AppExtension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="App\Common\Twig\SecurityExtension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="App\Common\Twig\SourceCodeExtension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="App\Open\Twig\NavExtension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.webprofiler"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="Endroid\QrCodeBundle\Twig\QrCodeExtension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="oneup_uploader.twig.extension.uploader"/>
      </call>
      <call method="addGlobal">
        <argument>app</argument>
        <argument type="service" id="twig.app_variable"/>
      </call>
      <call method="addRuntimeLoader">
        <argument type="service" id="twig.runtime_loader"/>
      </call>
      <configurator service="twig.configurator.environment" method="configure"/>
    </service>
    <service id="twig.app_variable" class="Symfony\Bridge\Twig\AppVariable" public="false">
      <call method="setEnvironment">
        <argument>dev</argument>
      </call>
      <call method="setDebug">
        <argument>true</argument>
      </call>
      <call method="setTokenStorage">
        <argument type="service" id="security.token_storage" on-invalid="ignore"/>
      </call>
      <call method="setRequestStack">
        <argument type="service" id="request_stack" on-invalid="ignore"/>
      </call>
    </service>
    <service id="twig.cache_warmer" class="Symfony\Bundle\TwigBundle\CacheWarmer\TemplateCacheCacheWarmer" public="false">
      <tag name="kernel.cache_warmer"/>
      <tag name="container.service_subscriber" id="twig"/>
      <argument type="service" id=".service_locator.lSIKWsr.twig.cache_warmer"/>
      <argument>null</argument>
      <argument type="collection"/>
    </service>
    <service id="twig.template_iterator" class="Symfony\Bundle\TwigBundle\TemplateIterator" public="false">
      <argument type="service" id="kernel"/>
      <argument>D:\phpStudy\WWW\foxdou\src</argument>
      <argument type="collection"/>
      <argument>D:\phpStudy\WWW\foxdou/templates</argument>
    </service>
    <service id="twig.template_cache_warmer" class="Symfony\Bundle\TwigBundle\CacheWarmer\TemplateCacheWarmer" public="false">
      <tag name="kernel.cache_warmer"/>
      <tag name="container.service_subscriber" id="twig"/>
      <argument type="service" id=".service_locator.lSIKWsr.twig.template_cache_warmer"/>
      <argument type="service" id="twig.template_iterator"/>
    </service>
    <service id="twig.loader.native_filesystem" class="Symfony\Bundle\TwigBundle\Loader\NativeFilesystemLoader" public="false">
      <tag name="twig.loader"/>
      <argument type="collection"/>
      <argument>D:\phpStudy\WWW\foxdou</argument>
      <call method="addPath">
        <argument>D:\phpStudy\WWW\foxdou\vendor\symfony\debug-bundle/Resources/views</argument>
        <argument>Debug</argument>
      </call>
      <call method="addPath">
        <argument>D:\phpStudy\WWW\foxdou\vendor\symfony\debug-bundle/Resources/views</argument>
        <argument>!Debug</argument>
      </call>
      <call method="addPath">
        <argument>D:\phpStudy\WWW\foxdou\vendor\symfony\web-profiler-bundle/Resources/views</argument>
        <argument>WebProfiler</argument>
      </call>
      <call method="addPath">
        <argument>D:\phpStudy\WWW\foxdou\vendor\symfony\web-profiler-bundle/Resources/views</argument>
        <argument>!WebProfiler</argument>
      </call>
      <call method="addPath">
        <argument>D:\phpStudy\WWW\foxdou\vendor\symfony\framework-bundle/Resources/views</argument>
        <argument>Framework</argument>
      </call>
      <call method="addPath">
        <argument>D:\phpStudy\WWW\foxdou\vendor\symfony\framework-bundle/Resources/views</argument>
        <argument>!Framework</argument>
      </call>
      <call method="addPath">
        <argument>D:\phpStudy\WWW\foxdou\vendor\symfony\security-bundle/Resources/views</argument>
        <argument>Security</argument>
      </call>
      <call method="addPath">
        <argument>D:\phpStudy\WWW\foxdou\vendor\symfony\security-bundle/Resources/views</argument>
        <argument>!Security</argument>
      </call>
      <call method="addPath">
        <argument>D:\phpStudy\WWW\foxdou\vendor\symfony\swiftmailer-bundle/Resources/views</argument>
        <argument>Swiftmailer</argument>
      </call>
      <call method="addPath">
        <argument>D:\phpStudy\WWW\foxdou\vendor\symfony\swiftmailer-bundle/Resources/views</argument>
        <argument>!Swiftmailer</argument>
      </call>
      <call method="addPath">
        <argument>D:\phpStudy\WWW\foxdou\vendor\symfony\twig-bundle/Resources/views</argument>
        <argument>Twig</argument>
      </call>
      <call method="addPath">
        <argument>D:\phpStudy\WWW\foxdou\vendor\symfony\twig-bundle/Resources/views</argument>
        <argument>!Twig</argument>
      </call>
      <call method="addPath">
        <argument>D:\phpStudy\WWW\foxdou\vendor\symfu\simple-form-bundle\src/Resources/views</argument>
        <argument>SimpleForm</argument>
      </call>
      <call method="addPath">
        <argument>D:\phpStudy\WWW\foxdou\vendor\symfu\simple-form-bundle\src/Resources/views</argument>
        <argument>!SimpleForm</argument>
      </call>
      <call method="addPath">
        <argument>D:\phpStudy\WWW\foxdou/templates</argument>
      </call>
    </service>
    <service id="twig.loader.chain" class="Twig\Loader\ChainLoader" public="false"/>
    <service id="twig.extension.profiler" class="Symfony\Bridge\Twig\Extension\ProfilerExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="twig.profile"/>
      <argument type="service" id="debug.stopwatch" on-invalid="null"/>
    </service>
    <service id="twig.profile" class="Twig\Profiler\Profile" public="false"/>
    <service id="data_collector.twig" class="Symfony\Bridge\Twig\DataCollector\TwigDataCollector" public="false">
      <tag name="data_collector" template="@WebProfiler/Collector/twig.html.twig" id="twig" priority="257"/>
      <argument type="service" id="twig.profile"/>
      <argument type="service" id="twig"/>
    </service>
    <service id="twig.extension.trans" class="Symfony\Bridge\Twig\Extension\TranslationExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="translator.default" on-invalid="null"/>
    </service>
    <service id="twig.extension.assets" class="Symfony\Bridge\Twig\Extension\AssetExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="assets.packages"/>
    </service>
    <service id="twig.extension.code" class="Symfony\Bridge\Twig\Extension\CodeExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="debug.file_link_formatter" on-invalid="ignore"/>
      <argument>D:\phpStudy\WWW\foxdou</argument>
      <argument>UTF-8</argument>
    </service>
    <service id="twig.extension.routing" class="Symfony\Bridge\Twig\Extension\RoutingExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="router.default"/>
    </service>
    <service id="twig.extension.yaml" class="Symfony\Bridge\Twig\Extension\YamlExtension" public="false">
      <tag name="twig.extension"/>
    </service>
    <service id="twig.extension.debug.stopwatch" class="Symfony\Bridge\Twig\Extension\StopwatchExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="debug.stopwatch" on-invalid="ignore"/>
      <argument>true</argument>
    </service>
    <service id="twig.extension.httpkernel" class="Symfony\Bridge\Twig\Extension\HttpKernelExtension" public="false">
      <tag name="twig.extension"/>
    </service>
    <service id="twig.runtime.httpkernel" class="Symfony\Bridge\Twig\Extension\HttpKernelRuntime" public="false">
      <tag name="twig.runtime"/>
      <argument type="service" id="fragment.handler"/>
    </service>
    <service id="twig.extension.httpfoundation" class="Symfony\Bridge\Twig\Extension\HttpFoundationExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="router.request_context" on-invalid="ignore"/>
    </service>
    <service id="twig.extension.debug" class="Twig\Extension\DebugExtension" public="false"/>
    <service id="twig.extension.weblink" class="Symfony\Bridge\Twig\Extension\WebLinkExtension" public="false">
      <argument type="service" id="request_stack"/>
    </service>
    <service id="twig.translation.extractor" class="Symfony\Bridge\Twig\Translation\TwigExtractor" public="false">
      <tag name="translation.extractor" alias="twig"/>
      <argument type="service" id="twig"/>
    </service>
    <service id="twig.exception_listener" class="Symfony\Component\HttpKernel\EventListener\ExceptionListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="request"/>
      <argument>twig.controller.exception::showAction</argument>
      <argument type="service" id="monolog.logger.request" on-invalid="null"/>
      <argument>true</argument>
    </service>
    <service id="twig.controller.exception" class="Symfony\Bundle\TwigBundle\Controller\ExceptionController" public="true">
      <argument type="service" id="twig"/>
      <argument>true</argument>
    </service>
    <service id="twig.controller.preview_error" class="Symfony\Bundle\TwigBundle\Controller\PreviewErrorController" public="true">
      <argument type="service" id="http_kernel"/>
      <argument>twig.controller.exception::showAction</argument>
    </service>
    <service id="twig.configurator.environment" class="Symfony\Bundle\TwigBundle\DependencyInjection\Configurator\EnvironmentConfigurator" public="false">
      <argument>F j, Y H:i</argument>
      <argument>%d days</argument>
      <argument>null</argument>
      <argument>0</argument>
      <argument>.</argument>
      <argument>,</argument>
    </service>
    <service id="twig.runtime_loader" class="Twig\RuntimeLoader\ContainerRuntimeLoader" public="false">
      <argument type="service" id=".service_locator.xEWwCJt"/>
    </service>
    <service id="twig.command.debug" class="Symfony\Bridge\Twig\Command\DebugCommand" public="false">
      <tag name="console.command" command="debug:twig"/>
      <argument type="service" id="twig"/>
      <argument>D:\phpStudy\WWW\foxdou</argument>
      <argument>%kernel.bundles_metadata%</argument>
      <argument>D:\phpStudy\WWW\foxdou/templates</argument>
      <argument>D:\phpStudy\WWW\foxdou\src</argument>
      <call method="setName">
        <argument>debug:twig</argument>
      </call>
    </service>
    <service id="twig.command.lint" class="Symfony\Bundle\TwigBundle\Command\LintCommand" public="false">
      <tag name="console.command" command="lint:twig"/>
      <argument type="service" id="twig"/>
      <call method="setName">
        <argument>lint:twig</argument>
      </call>
    </service>
    <service id="Endroid\QrCode\Writer\BinaryWriter" class="Endroid\QrCode\Writer\BinaryWriter" public="true" autowire="true" autoconfigure="true">
      <tag name="endroid.qr_code.writer"/>
    </service>
    <service id="Endroid\QrCode\Writer\DebugWriter" class="Endroid\QrCode\Writer\DebugWriter" public="true" autowire="true" autoconfigure="true">
      <tag name="endroid.qr_code.writer"/>
    </service>
    <service id="Endroid\QrCode\Writer\EpsWriter" class="Endroid\QrCode\Writer\EpsWriter" public="true" autowire="true" autoconfigure="true">
      <tag name="endroid.qr_code.writer"/>
    </service>
    <service id="Endroid\QrCode\Writer\PngWriter" class="Endroid\QrCode\Writer\PngWriter" public="true" autowire="true" autoconfigure="true">
      <tag name="endroid.qr_code.writer"/>
    </service>
    <service id="Endroid\QrCode\Writer\SvgWriter" class="Endroid\QrCode\Writer\SvgWriter" public="true" autowire="true" autoconfigure="true">
      <tag name="endroid.qr_code.writer"/>
    </service>
    <service id="Endroid\QrCodeBundle\Controller\GenerateController" class="Endroid\QrCodeBundle\Controller\GenerateController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <argument type="service" id="Endroid\QrCode\Factory\QrCodeFactory"/>
    </service>
    <service id="Endroid\QrCode\WriterRegistry" class="Endroid\QrCode\WriterRegistry" public="false" autowire="true" autoconfigure="true">
      <call method="addWriters">
        <argument type="tagged" tag="endroid.qr_code.writer"/>
      </call>
      <call method="addWriter">
        <argument type="service" id="Endroid\QrCode\Writer\BinaryWriter"/>
      </call>
      <call method="addWriter">
        <argument type="service" id="Endroid\QrCode\Writer\DebugWriter"/>
      </call>
      <call method="addWriter">
        <argument type="service" id="Endroid\QrCode\Writer\EpsWriter"/>
      </call>
      <call method="addWriter">
        <argument type="service" id="Endroid\QrCode\Writer\PngWriter"/>
      </call>
      <call method="addWriter">
        <argument type="service" id="Endroid\QrCode\Writer\SvgWriter"/>
      </call>
    </service>
    <service id="Endroid\QrCode\Factory\QrCodeFactory" class="Endroid\QrCode\Factory\QrCodeFactory" public="false" autowire="true" autoconfigure="true">
      <argument type="collection">
        <argument key="writer">png</argument>
        <argument key="size">300</argument>
        <argument key="margin">0</argument>
        <argument key="foreground_color" type="collection">
          <argument key="r">0</argument>
          <argument key="g">0</argument>
          <argument key="b">0</argument>
          <argument key="a">0</argument>
        </argument>
        <argument key="background_color" type="collection">
          <argument key="r">255</argument>
          <argument key="g">255</argument>
          <argument key="b">255</argument>
          <argument key="a">0</argument>
        </argument>
        <argument key="error_correction_level">low</argument>
        <argument key="encoding">UTF-8</argument>
        <argument key="label">null</argument>
        <argument key="label_font_size">20</argument>
        <argument key="label_alignment">left</argument>
        <argument key="label_margin" type="collection">
          <argument key="b">0</argument>
        </argument>
        <argument key="logo_path">null</argument>
        <argument key="logo_width">150</argument>
        <argument key="logo_height">200</argument>
        <argument key="validate_result">false</argument>
        <argument key="writer_options" type="collection">
          <argument key="exclude_xml_declaration">true</argument>
        </argument>
      </argument>
      <argument type="service" id="Endroid\QrCode\WriterRegistry"/>
    </service>
    <service id="Endroid\QrCodeBundle\Twig\QrCodeExtension" class="Endroid\QrCodeBundle\Twig\QrCodeExtension" public="false" autowire="true" autoconfigure="true">
      <tag name="twig.extension"/>
      <argument type="service" id="Endroid\QrCode\Factory\QrCodeFactory"/>
      <argument type="service" id="router.default"/>
    </service>
    <service id="Symfu\SimpleFormBundle\Form" class="Symfu\SimpleFormBundle\Form" autowire="true" autoconfigure="true">
      <tag name="kernel.reset" method="reset"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.qFNxiTm.Symfu\SimpleFormBundle\Form"/>
      </call>
    </service>
    <service id="Symfu\SimpleValidation\TransformerManagerInterface" class="Symfu\SimpleFormBundle\TransformerManager" public="true" autowire="true" autoconfigure="true">
      <argument type="service" id="service_container"/>
    </service>
    <service id="Symfu\SimpleValidation\ValidationManagerInterface" class="Symfu\SimpleFormBundle\ValidationManager" public="true" autowire="true" autoconfigure="true">
      <argument type="service" id="service_container"/>
    </service>
    <service id="oneup_uploader.chunk_manager" class="Oneup\UploaderBundle\Uploader\Chunk\ChunkManager" public="true">
      <argument>%oneup_uploader.chunks%</argument>
      <argument type="service" id="oneup_uploader.chunks_storage"/>
    </service>
    <service id="oneup_uploader.orphanage_manager" class="Oneup\UploaderBundle\Uploader\Orphanage\OrphanageManager" public="true">
      <argument type="service" id="service_container"/>
      <argument>%oneup_uploader.orphanage%</argument>
    </service>
    <service id="oneup_uploader.namer.uniqid" class="Oneup\UploaderBundle\Uploader\Naming\UniqidNamer" public="true"/>
    <service id="oneup_uploader.namer.urlsafe" class="Oneup\UploaderBundle\Uploader\Naming\UrlSafeNamer"/>
    <service id="oneup_uploader.routing.loader" class="Oneup\UploaderBundle\Routing\RouteLoader" public="true">
      <tag name="routing.loader"/>
      <argument>%oneup_uploader.controllers%</argument>
    </service>
    <service id="oneup_uploader.command.clear_chunks" class="Oneup\UploaderBundle\Command\ClearChunkCommand">
      <tag name="console.command" command="oneup:uploader:clear-chunks"/>
      <call method="setName">
        <argument>oneup:uploader:clear-chunks</argument>
      </call>
    </service>
    <service id="oneup_uploader.command.clear_orphans" class="Oneup\UploaderBundle\Command\ClearOrphansCommand">
      <tag name="console.command" command="oneup:uploader:clear-orphans"/>
      <call method="setName">
        <argument>oneup:uploader:clear-orphans</argument>
      </call>
    </service>
    <service id="oneup_uploader.templating.uploader_helper" class="Oneup\UploaderBundle\Templating\Helper\UploaderHelper" public="true">
      <tag name="templating.helper" alias="oneup_uploader"/>
      <argument type="service" id="router.default"/>
      <argument>%oneup_uploader.maxsize%</argument>
    </service>
    <service id="oneup_uploader.validation_listener.max_size" class="Oneup\UploaderBundle\EventListener\MaxSizeValidationListener">
      <tag name="kernel.event_listener" event="oneup_uploader.validation" method="onValidate"/>
    </service>
    <service id="oneup_uploader.validation_listener.allowed_mimetype" class="Oneup\UploaderBundle\EventListener\AllowedMimetypeAndExtensionValidationListener">
      <tag name="kernel.event_listener" event="oneup_uploader.validation" method="onValidate"/>
    </service>
    <service id="oneup_uploader.validation_listener.disallowed_mimetype" class="Oneup\UploaderBundle\EventListener\DisallowedMimetypeValidationListener">
      <tag name="kernel.event_listener" event="oneup_uploader.validation" method="onValidate"/>
    </service>
    <service id="oneup_uploader.error_handler.noop" class="Oneup\UploaderBundle\Uploader\ErrorHandler\NoopErrorHandler" public="false"/>
    <service id="oneup_uploader.error_handler.fineuploader" class="Oneup\UploaderBundle\Uploader\ErrorHandler\NoopErrorHandler" public="false"/>
    <service id="oneup_uploader.error_handler.blueimp" class="Oneup\UploaderBundle\Uploader\ErrorHandler\BlueimpErrorHandler" public="false">
      <argument type="service" id="translator.default"/>
    </service>
    <service id="oneup_uploader.error_handler.uploadify" class="Oneup\UploaderBundle\Uploader\ErrorHandler\NoopErrorHandler" public="false"/>
    <service id="oneup_uploader.error_handler.yui3" class="Oneup\UploaderBundle\Uploader\ErrorHandler\NoopErrorHandler" public="false"/>
    <service id="oneup_uploader.error_handler.fancyupload" class="Oneup\UploaderBundle\Uploader\ErrorHandler\NoopErrorHandler" public="false"/>
    <service id="oneup_uploader.error_handler.mooupload" class="Oneup\UploaderBundle\Uploader\ErrorHandler\NoopErrorHandler" public="false"/>
    <service id="oneup_uploader.error_handler.dropzone" class="Oneup\UploaderBundle\Uploader\ErrorHandler\DropzoneErrorHandler" public="false"/>
    <service id="oneup_uploader.error_handler.plupload" class="Oneup\UploaderBundle\Uploader\ErrorHandler\PluploadErrorHandler" public="false"/>
    <service id="oneup_uploader.error_handler.custom" class="Oneup\UploaderBundle\Uploader\ErrorHandler\NoopErrorHandler" public="false"/>
    <service id="oneup_uploader.twig.extension.uploader" class="Oneup\UploaderBundle\Twig\Extension\UploaderExtension" public="true">
      <tag name="twig.extension"/>
      <argument type="service" id="oneup_uploader.templating.uploader_helper"/>
    </service>
    <service id="oneup_uploader.chunks_storage" class="Oneup\UploaderBundle\Uploader\Chunk\Storage\FilesystemStorage">
      <argument>D:\phpStudy\WWW\foxdou\var\cache\dev/uploader/chunks</argument>
    </service>
    <service id="oneup_uploader.storage.default" class="Oneup\UploaderBundle\Uploader\Storage\FlysystemStorage">
      <argument type="service" id="oneup_flysystem.default_filesystem"/>
      <argument>102400</argument>
      <argument>null</argument>
      <argument></argument>
    </service>
    <service id="oneup_uploader.controller.default" class="Oneup\UploaderBundle\Controller\DropzoneController" public="true">
      <tag name="oneup_uploader.routable" type="default"/>
      <tag name="oneup_uploader.controller"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="oneup_uploader.storage.default"/>
      <argument type="service" id="oneup_uploader.error_handler.dropzone"/>
      <argument type="collection">
        <argument key="frontend">dropzone</argument>
        <argument key="max_size">10240000</argument>
        <argument key="namer">App\Common\Service\FileUpload\UploadFileNamer</argument>
        <argument key="route_prefix">/uploads/files</argument>
        <argument key="endpoints" type="collection">
          <argument key="upload">/common/uploader/default</argument>
          <argument key="progress">null</argument>
          <argument key="cancel">null</argument>
        </argument>
        <argument key="storage" type="collection">
          <argument key="type">flysystem</argument>
          <argument key="directory">D:\phpStudy\WWW\foxdou/web/uploads/files</argument>
          <argument key="filesystem">oneup_flysystem.default_filesystem</argument>
          <argument key="service">null</argument>
          <argument key="stream_wrapper">null</argument>
          <argument key="sync_buffer_size">100K</argument>
        </argument>
        <argument key="allowed_mimetypes" type="collection">
          <argument key="image/jpeg" type="collection">
            <argument>jpg</argument>
            <argument>jpeg</argument>
            <argument>jpe</argument>
          </argument>
          <argument key="image/png" type="collection">
            <argument>png</argument>
          </argument>
          <argument key="image/gif" type="collection">
            <argument>gif</argument>
          </argument>
          <argument key="image/zip" type="collection">
            <argument>zip</argument>
          </argument>
          <argument key="image/doc" type="collection">
            <argument>doc</argument>
          </argument>
          <argument key="image/pdf" type="collection">
            <argument>pdf</argument>
          </argument>
          <argument key="image/txt" type="collection">
            <argument>txt</argument>
          </argument>
          <argument key="image/xls" type="collection">
            <argument>xls</argument>
          </argument>
        </argument>
        <argument key="custom_frontend" type="collection">
          <argument key="name">null</argument>
          <argument key="class">null</argument>
        </argument>
        <argument key="disallowed_mimetypes" type="collection"/>
        <argument key="error_handler">null</argument>
        <argument key="use_orphanage">false</argument>
        <argument key="enable_progress">false</argument>
        <argument key="enable_cancelation">false</argument>
        <argument key="root_folder">false</argument>
      </argument>
      <argument>default</argument>
    </service>
    <service id="oneup_uploader.storage.admin_article" class="Oneup\UploaderBundle\Uploader\Storage\FlysystemStorage">
      <argument type="service" id="oneup_flysystem.admin_article_filesystem"/>
      <argument>102400</argument>
      <argument>null</argument>
      <argument></argument>
    </service>
    <service id="oneup_uploader.controller.admin_article" class="Oneup\UploaderBundle\Controller\DropzoneController" public="true">
      <tag name="oneup_uploader.routable" type="admin_article"/>
      <tag name="oneup_uploader.controller"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="oneup_uploader.storage.admin_article"/>
      <argument type="service" id="oneup_uploader.error_handler.dropzone"/>
      <argument type="collection">
        <argument key="frontend">dropzone</argument>
        <argument key="max_size">5242880</argument>
        <argument key="namer">App\Common\Service\FileUpload\UploadFileNamer</argument>
        <argument key="route_prefix">/uploads/article</argument>
        <argument key="endpoints" type="collection">
          <argument key="upload">/admin/uploader/article</argument>
          <argument key="progress">null</argument>
          <argument key="cancel">null</argument>
        </argument>
        <argument key="storage" type="collection">
          <argument key="type">flysystem</argument>
          <argument key="directory">D:\phpStudy\WWW\foxdou/web/uploads/article</argument>
          <argument key="filesystem">oneup_flysystem.admin_article_filesystem</argument>
          <argument key="service">null</argument>
          <argument key="stream_wrapper">null</argument>
          <argument key="sync_buffer_size">100K</argument>
        </argument>
        <argument key="allowed_mimetypes" type="collection">
          <argument key="image/jpeg" type="collection">
            <argument>jpg</argument>
            <argument>jpeg</argument>
            <argument>jpe</argument>
          </argument>
          <argument key="image/png" type="collection">
            <argument>png</argument>
          </argument>
          <argument key="image/gif" type="collection">
            <argument>gif</argument>
          </argument>
          <argument key="image/bmp" type="collection">
            <argument>bmp</argument>
          </argument>
        </argument>
        <argument key="custom_frontend" type="collection">
          <argument key="name">null</argument>
          <argument key="class">null</argument>
        </argument>
        <argument key="disallowed_mimetypes" type="collection"/>
        <argument key="error_handler">null</argument>
        <argument key="use_orphanage">false</argument>
        <argument key="enable_progress">false</argument>
        <argument key="enable_cancelation">false</argument>
        <argument key="root_folder">false</argument>
      </argument>
      <argument>admin_article</argument>
    </service>
    <service id="oneup_uploader.storage.identity_image" class="Oneup\UploaderBundle\Uploader\Storage\FlysystemStorage">
      <argument type="service" id="oneup_flysystem.identity_image_filesystem"/>
      <argument>102400</argument>
      <argument>null</argument>
      <argument></argument>
    </service>
    <service id="oneup_uploader.controller.identity_image" class="Oneup\UploaderBundle\Controller\DropzoneController" public="true">
      <tag name="oneup_uploader.routable" type="identity_image"/>
      <tag name="oneup_uploader.controller"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="oneup_uploader.storage.identity_image"/>
      <argument type="service" id="oneup_uploader.error_handler.dropzone"/>
      <argument type="collection">
        <argument key="frontend">dropzone</argument>
        <argument key="max_size">10240000</argument>
        <argument key="namer">App\Common\Service\FileUpload\UploadFileNamer</argument>
        <argument key="route_prefix">/uploads/identity</argument>
        <argument key="endpoints" type="collection">
          <argument key="upload">/common/uploader/identity</argument>
          <argument key="progress">null</argument>
          <argument key="cancel">null</argument>
        </argument>
        <argument key="storage" type="collection">
          <argument key="type">flysystem</argument>
          <argument key="directory">D:\phpStudy\WWW\foxdou/web/uploads/identity</argument>
          <argument key="filesystem">oneup_flysystem.identity_image_filesystem</argument>
          <argument key="service">null</argument>
          <argument key="stream_wrapper">null</argument>
          <argument key="sync_buffer_size">100K</argument>
        </argument>
        <argument key="allowed_mimetypes" type="collection">
          <argument key="image/jpeg" type="collection">
            <argument>jpg</argument>
            <argument>jpeg</argument>
            <argument>jpe</argument>
          </argument>
          <argument key="image/png" type="collection">
            <argument>png</argument>
          </argument>
          <argument key="image/gif" type="collection">
            <argument>gif</argument>
          </argument>
          <argument key="image/bmp" type="collection">
            <argument>bmp</argument>
          </argument>
        </argument>
        <argument key="custom_frontend" type="collection">
          <argument key="name">null</argument>
          <argument key="class">null</argument>
        </argument>
        <argument key="disallowed_mimetypes" type="collection"/>
        <argument key="error_handler">null</argument>
        <argument key="use_orphanage">false</argument>
        <argument key="enable_progress">false</argument>
        <argument key="enable_cancelation">false</argument>
        <argument key="root_folder">false</argument>
      </argument>
      <argument>identity_image</argument>
    </service>
    <service id="oneup_flysystem.adapter_factory.local" class="Oneup\FlysystemBundle\DependencyInjection\Factory\Adapter\LocalFactory">
      <tag name="oneup_flysystem.adapter_factory"/>
    </service>
    <service id="oneup_flysystem.adapter_factory.nulladapter" class="Oneup\FlysystemBundle\DependencyInjection\Factory\Adapter\NullAdapterFactory">
      <tag name="oneup_flysystem.adapter_factory"/>
    </service>
    <service id="oneup_flysystem.adapter_factory.zip" class="Oneup\FlysystemBundle\DependencyInjection\Factory\Adapter\ZipFactory">
      <tag name="oneup_flysystem.adapter_factory"/>
    </service>
    <service id="oneup_flysystem.adapter_factory.awss3v2" class="Oneup\FlysystemBundle\DependencyInjection\Factory\Adapter\AwsS3V2Factory">
      <tag name="oneup_flysystem.adapter_factory"/>
    </service>
    <service id="oneup_flysystem.adapter_factory.awss3v3" class="Oneup\FlysystemBundle\DependencyInjection\Factory\Adapter\AwsS3V3Factory">
      <tag name="oneup_flysystem.adapter_factory"/>
    </service>
    <service id="oneup_flysystem.adapter_factory.dropbox" class="Oneup\FlysystemBundle\DependencyInjection\Factory\Adapter\DropboxFactory">
      <tag name="oneup_flysystem.adapter_factory"/>
    </service>
    <service id="oneup_flysystem.adapter_factory.googlecloudstorage" class="Oneup\FlysystemBundle\DependencyInjection\Factory\Adapter\GoogleCloudStorageFactory">
      <tag name="oneup_flysystem.adapter_factory"/>
    </service>
    <service id="oneup_flysystem.adapter_factory.rackspace" class="Oneup\FlysystemBundle\DependencyInjection\Factory\Adapter\RackspaceFactory">
      <tag name="oneup_flysystem.adapter_factory"/>
    </service>
    <service id="oneup_flysystem.adapter_factory.webdav" class="Oneup\FlysystemBundle\DependencyInjection\Factory\Adapter\WebDavFactory">
      <tag name="oneup_flysystem.adapter_factory"/>
    </service>
    <service id="oneup_flysystem.adapter_factory.ftp" class="Oneup\FlysystemBundle\DependencyInjection\Factory\Adapter\FtpFactory">
      <tag name="oneup_flysystem.adapter_factory"/>
    </service>
    <service id="oneup_flysystem.adapter_factory.sftp" class="Oneup\FlysystemBundle\DependencyInjection\Factory\Adapter\SftpFactory">
      <tag name="oneup_flysystem.adapter_factory"/>
    </service>
    <service id="oneup_flysystem.adapter_factory.gridfs" class="Oneup\FlysystemBundle\DependencyInjection\Factory\Adapter\GridFSFactory">
      <tag name="oneup_flysystem.adapter_factory"/>
    </service>
    <service id="oneup_flysystem.adapter_factory.customadapter" class="Oneup\FlysystemBundle\DependencyInjection\Factory\Adapter\CustomAdapterFactory">
      <tag name="oneup_flysystem.adapter_factory"/>
    </service>
    <service id="oneup_flysystem.adapter_factory.memory" class="Oneup\FlysystemBundle\DependencyInjection\Factory\Adapter\MemoryAdapterFactory">
      <tag name="oneup_flysystem.adapter_factory"/>
    </service>
    <service id="oneup_flysystem.adapter_factory.fallback" class="Oneup\FlysystemBundle\DependencyInjection\Factory\Adapter\FallbackFactory">
      <tag name="oneup_flysystem.adapter_factory"/>
    </service>
    <service id="oneup_flysystem.adapter_factory.gaufrette" class="Oneup\FlysystemBundle\DependencyInjection\Factory\Adapter\GaufretteFactory">
      <tag name="oneup_flysystem.adapter_factory"/>
    </service>
    <service id="oneup_flysystem.adapter_factory.replicate" class="Oneup\FlysystemBundle\DependencyInjection\Factory\Adapter\ReplicateFactory">
      <tag name="oneup_flysystem.adapter_factory"/>
    </service>
    <service id="oneup_flysystem.cache_factory.adapter" class="Oneup\FlysystemBundle\DependencyInjection\Factory\Cache\AdapterFactory">
      <tag name="oneup_flysystem.cache_factory"/>
    </service>
    <service id="oneup_flysystem.cache_factory.memory" class="Oneup\FlysystemBundle\DependencyInjection\Factory\Cache\MemoryFactory">
      <tag name="oneup_flysystem.cache_factory"/>
    </service>
    <service id="oneup_flysystem.cache_factory.noop" class="Oneup\FlysystemBundle\DependencyInjection\Factory\Cache\NoopFactory">
      <tag name="oneup_flysystem.cache_factory"/>
    </service>
    <service id="oneup_flysystem.cache_factory.memcached" class="Oneup\FlysystemBundle\DependencyInjection\Factory\Cache\MemcachedFactory">
      <tag name="oneup_flysystem.cache_factory"/>
    </service>
    <service id="oneup_flysystem.cache_factory.php_redis" class="Oneup\FlysystemBundle\DependencyInjection\Factory\Cache\PhpRedisFactory">
      <tag name="oneup_flysystem.cache_factory"/>
    </service>
    <service id="oneup_flysystem.cache_factory.predis" class="Oneup\FlysystemBundle\DependencyInjection\Factory\Cache\PredisFactory">
      <tag name="oneup_flysystem.cache_factory"/>
    </service>
    <service id="oneup_flysystem.cache_factory.stash" class="Oneup\FlysystemBundle\DependencyInjection\Factory\Cache\StashFactory">
      <tag name="oneup_flysystem.cache_factory"/>
    </service>
    <service id="oneup_flysystem.cache_factory.psr6" class="Oneup\FlysystemBundle\DependencyInjection\Factory\Cache\Psr6Factory">
      <tag name="oneup_flysystem.cache_factory"/>
    </service>
    <service id="oneup_flysystem.adapter.local" class="League\Flysystem\Adapter\Local" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
    </service>
    <service id="oneup_flysystem.adapter.cached" class="League\Flysystem\Cached\CachedAdapter" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
    </service>
    <service id="oneup_flysystem.adapter.nulladapter" class="League\Flysystem\Adapter\NullAdapter" public="false" abstract="true"/>
    <service id="oneup_flysystem.adapter.memory" class="League\Flysystem\Memory\MemoryAdapter" public="false" abstract="true"/>
    <service id="oneup_flysystem.adapter.zip" class="League\Flysystem\ZipArchive\ZipArchiveAdapter" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument></argument>
    </service>
    <service id="oneup_flysystem.adapter.awss3v2" class="League\Flysystem\AwsS3v2\AwsS3Adapter" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument></argument>
    </service>
    <service id="oneup_flysystem.adapter.awss3v3" class="League\Flysystem\AwsS3v3\AwsS3Adapter" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument></argument>
    </service>
    <service id="oneup_flysystem.adapter.dropbox" class="Spatie\FlysystemDropbox\DropboxAdapter" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
    </service>
    <service id="oneup_flysystem.adapter.googlecloudstorage" class="Superbalist\Flysystem\GoogleStorage\GoogleStorageAdapter" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
    </service>
    <service id="oneup_flysystem.adapter.rackspace" class="League\Flysystem\Rackspace\RackspaceAdapter" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument></argument>
    </service>
    <service id="oneup_flysystem.adapter.webdav" class="League\Flysystem\WebDAV\WebDAVAdapter" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
    </service>
    <service id="oneup_flysystem.adapter.ftp" class="League\Flysystem\Adapter\Ftp" public="false" abstract="true">
      <argument></argument>
    </service>
    <service id="oneup_flysystem.adapter.sftp" class="League\Flysystem\Sftp\SftpAdapter" public="false" abstract="true">
      <argument></argument>
    </service>
    <service id="oneup_flysystem.adapter.gridfs" class="League\Flysystem\GridFS\GridFSAdapter" public="false" abstract="true">
      <argument></argument>
    </service>
    <service id="oneup_flysystem.adapter.fallback" class="Litipk\Flysystem\Fallback\FallbackAdapter" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument></argument>
    </service>
    <service id="oneup_flysystem.adapter.gaufrette" class="Jenko\Flysystem\GaufretteAdapter" public="false" abstract="true">
      <argument></argument>
    </service>
    <service id="oneup_flysystem.adapter.replicate" class="League\Flysystem\Replicate\ReplicateAdapter" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
    </service>
    <service id="oneup_flysystem.mount_manager" class="League\Flysystem\MountManager" public="true"/>
    <service id="oneup_flysystem.filesystem" class="League\Flysystem\Filesystem" public="true" abstract="true">
      <argument></argument>
      <argument></argument>
    </service>
    <service id="oneup_flysystem.cache.adapter" class="League\Flysystem\Cached\Storage\Adapter" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument></argument>
    </service>
    <service id="oneup_flysystem.cache.memory" class="League\Flysystem\Cached\Storage\Memory" public="false" abstract="true"/>
    <service id="oneup_flysystem.cache.noop" class="League\Flysystem\Cached\Storage\Noop" public="false" abstract="true"/>
    <service id="oneup_flysystem.cache.memcached" class="League\Flysystem\Cached\Storage\Memcached" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument></argument>
    </service>
    <service id="oneup_flysystem.cache.predis" class="League\Flysystem\Cached\Storage\Predis" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument></argument>
    </service>
    <service id="oneup_flysystem.cache.php_redis" class="League\Flysystem\Cached\Storage\PhpRedis" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument></argument>
    </service>
    <service id="oneup_flysystem.cache.stash" class="League\Flysystem\Cached\Storage\Stash" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument></argument>
    </service>
    <service id="oneup_flysystem.cache.psr6" class="League\Flysystem\Cached\Storage\Psr6Cache" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument></argument>
    </service>
    <service id="oneup_flysystem.plugin.empty_dir" class="League\Flysystem\Plugin\EmptyDir"/>
    <service id="oneup_flysystem.plugin.get_with_metadata" class="League\Flysystem\Plugin\GetWithMetadata"/>
    <service id="oneup_flysystem.plugin.list_files" class="League\Flysystem\Plugin\ListFiles"/>
    <service id="oneup_flysystem.plugin.list_paths" class="League\Flysystem\Plugin\ListPaths"/>
    <service id="oneup_flysystem.plugin.list_with" class="League\Flysystem\Plugin\ListWith"/>
    <service id="oneup_flysystem.default_adapter_adapter" class="League\Flysystem\Adapter\Local" public="false">
      <argument>D:\phpStudy\WWW\foxdou/web/uploads/files</argument>
      <argument>2</argument>
      <argument>2</argument>
      <argument type="collection">
        <argument key="file" type="collection">
          <argument key="public">420</argument>
          <argument key="private">384</argument>
        </argument>
        <argument key="dir" type="collection">
          <argument key="public">493</argument>
          <argument key="private">448</argument>
        </argument>
      </argument>
    </service>
    <service id="oneup_flysystem.admin_article_adapter_adapter" class="League\Flysystem\Adapter\Local" public="false">
      <argument>D:\phpStudy\WWW\foxdou/web/uploads/article</argument>
      <argument>2</argument>
      <argument>2</argument>
      <argument type="collection">
        <argument key="file" type="collection">
          <argument key="public">420</argument>
          <argument key="private">384</argument>
        </argument>
        <argument key="dir" type="collection">
          <argument key="public">493</argument>
          <argument key="private">448</argument>
        </argument>
      </argument>
    </service>
    <service id="oneup_flysystem.identity_image_adapter_adapter" class="League\Flysystem\Adapter\Local" public="false">
      <argument>D:\phpStudy\WWW\foxdou/web/uploads/identity</argument>
      <argument>2</argument>
      <argument>2</argument>
      <argument type="collection">
        <argument key="file" type="collection">
          <argument key="public">420</argument>
          <argument key="private">384</argument>
        </argument>
        <argument key="dir" type="collection">
          <argument key="public">493</argument>
          <argument key="private">448</argument>
        </argument>
      </argument>
    </service>
    <service id="oneup_flysystem.default_filesystem" class="League\Flysystem\Filesystem" public="false">
      <tag name="oneup_flysystem.filesystem" key="default"/>
      <argument type="service" id="oneup_flysystem.default_adapter_adapter"/>
      <argument type="collection">
        <argument key="disable_asserts">false</argument>
      </argument>
    </service>
    <service id="oneup_flysystem.admin_article_filesystem" class="League\Flysystem\Filesystem" public="false">
      <tag name="oneup_flysystem.filesystem" key="admin_article"/>
      <argument type="service" id="oneup_flysystem.admin_article_adapter_adapter"/>
      <argument type="collection">
        <argument key="disable_asserts">false</argument>
      </argument>
    </service>
    <service id="oneup_flysystem.identity_image_filesystem" class="League\Flysystem\Filesystem" public="false">
      <tag name="oneup_flysystem.filesystem" key="identity_image"/>
      <argument type="service" id="oneup_flysystem.identity_image_adapter_adapter"/>
      <argument type="collection">
        <argument key="disable_asserts">false</argument>
      </argument>
    </service>
    <service id=".instanceof.Symfony\Component\Console\Command\Command.0.App\Admin\Command\UpdateProductPriceCommand" class="App\Admin\Command\UpdateProductPriceCommand" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Admin\Command\UpdateProductPriceCommand" class="App\Admin\Command\UpdateProductPriceCommand" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Admin\Command\UpdateProductPriceCommand" class="App\Admin\Command\UpdateProductPriceCommand" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Admin\Controller\AdminBaseController" class="App\Admin\Controller\AdminBaseController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Admin\Controller\AdminBaseController" class="App\Admin\Controller\AdminBaseController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Admin\Controller\AdminBaseController" class="App\Admin\Controller\AdminBaseController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Admin\Controller\AuditController" class="App\Admin\Controller\AuditController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Admin\Controller\AuditController" class="App\Admin\Controller\AuditController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Admin\Controller\AuditController" class="App\Admin\Controller\AuditController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Admin\Controller\DashboardController" class="App\Admin\Controller\DashboardController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Admin\Controller\DashboardController" class="App\Admin\Controller\DashboardController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Admin\Controller\DashboardController" class="App\Admin\Controller\DashboardController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Admin\Controller\FileUploadController" class="App\Admin\Controller\FileUploadController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Admin\Controller\FileUploadController" class="App\Admin\Controller\FileUploadController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Admin\Controller\FileUploadController" class="App\Admin\Controller\FileUploadController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Admin\Controller\FinanceController" class="App\Admin\Controller\FinanceController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Admin\Controller\FinanceController" class="App\Admin\Controller\FinanceController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Admin\Controller\FinanceController" class="App\Admin\Controller\FinanceController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Admin\Controller\FinancePaymentMethodController" class="App\Admin\Controller\FinancePaymentMethodController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Admin\Controller\FinancePaymentMethodController" class="App\Admin\Controller\FinancePaymentMethodController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Admin\Controller\FinancePaymentMethodController" class="App\Admin\Controller\FinancePaymentMethodController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Admin\Controller\FinanceWithdrawController" class="App\Admin\Controller\FinanceWithdrawController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Admin\Controller\FinanceWithdrawController" class="App\Admin\Controller\FinanceWithdrawController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Admin\Controller\FinanceWithdrawController" class="App\Admin\Controller\FinanceWithdrawController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Admin\Controller\LoginController" class="App\Admin\Controller\LoginController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Admin\Controller\LoginController" class="App\Admin\Controller\LoginController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Admin\Controller\LoginController" class="App\Admin\Controller\LoginController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Admin\Controller\NotifyMessageController" class="App\Admin\Controller\NotifyMessageController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Admin\Controller\NotifyMessageController" class="App\Admin\Controller\NotifyMessageController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Admin\Controller\NotifyMessageController" class="App\Admin\Controller\NotifyMessageController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Admin\Controller\OrderController" class="App\Admin\Controller\OrderController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Admin\Controller\OrderController" class="App\Admin\Controller\OrderController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Admin\Controller\OrderController" class="App\Admin\Controller\OrderController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Admin\Controller\PlugController" class="App\Admin\Controller\PlugController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Admin\Controller\PlugController" class="App\Admin\Controller\PlugController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Admin\Controller\PlugController" class="App\Admin\Controller\PlugController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Admin\Controller\ProductManagement\AbstractSourceGroupController" class="App\Admin\Controller\ProductManagement\AbstractSourceGroupController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Admin\Controller\ProductManagement\AbstractSourceGroupController" class="App\Admin\Controller\ProductManagement\AbstractSourceGroupController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Admin\Controller\ProductManagement\AbstractSourceGroupController" class="App\Admin\Controller\ProductManagement\AbstractSourceGroupController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Admin\Controller\ProductManagement\FlowController" class="App\Admin\Controller\ProductManagement\FlowController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Admin\Controller\ProductManagement\FlowController" class="App\Admin\Controller\ProductManagement\FlowController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Admin\Controller\ProductManagement\FlowController" class="App\Admin\Controller\ProductManagement\FlowController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Admin\Controller\ProductManagement\MobileController" class="App\Admin\Controller\ProductManagement\MobileController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Admin\Controller\ProductManagement\MobileController" class="App\Admin\Controller\ProductManagement\MobileController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Admin\Controller\ProductManagement\MobileController" class="App\Admin\Controller\ProductManagement\MobileController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Admin\Controller\ProductManagement\PhoneNumberAttributionController" class="App\Admin\Controller\ProductManagement\PhoneNumberAttributionController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Admin\Controller\ProductManagement\PhoneNumberAttributionController" class="App\Admin\Controller\ProductManagement\PhoneNumberAttributionController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Admin\Controller\ProductManagement\PhoneNumberAttributionController" class="App\Admin\Controller\ProductManagement\PhoneNumberAttributionController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Admin\Controller\ProductManagement\RegionController" class="App\Admin\Controller\ProductManagement\RegionController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Admin\Controller\ProductManagement\RegionController" class="App\Admin\Controller\ProductManagement\RegionController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Admin\Controller\ProductManagement\RegionController" class="App\Admin\Controller\ProductManagement\RegionController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Admin\Controller\ProductManagement\SourceGroupController" class="App\Admin\Controller\ProductManagement\SourceGroupController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Admin\Controller\ProductManagement\SourceGroupController" class="App\Admin\Controller\ProductManagement\SourceGroupController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Admin\Controller\ProductManagement\SourceGroupController" class="App\Admin\Controller\ProductManagement\SourceGroupController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Admin\Controller\ProductManagement\SpecialUserSettingController" class="App\Admin\Controller\ProductManagement\SpecialUserSettingController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Admin\Controller\ProductManagement\SpecialUserSettingController" class="App\Admin\Controller\ProductManagement\SpecialUserSettingController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Admin\Controller\ProductManagement\SpecialUserSettingController" class="App\Admin\Controller\ProductManagement\SpecialUserSettingController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Admin\Controller\ProductManagement\TelephoneController" class="App\Admin\Controller\ProductManagement\TelephoneController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Admin\Controller\ProductManagement\TelephoneController" class="App\Admin\Controller\ProductManagement\TelephoneController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Admin\Controller\ProductManagement\TelephoneController" class="App\Admin\Controller\ProductManagement\TelephoneController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Admin\Controller\ProductManagement\TencentController" class="App\Admin\Controller\ProductManagement\TencentController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Admin\Controller\ProductManagement\TencentController" class="App\Admin\Controller\ProductManagement\TencentController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Admin\Controller\ProductManagement\TencentController" class="App\Admin\Controller\ProductManagement\TencentController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Admin\Controller\ProductManagement\TencentProductCategoryController" class="App\Admin\Controller\ProductManagement\TencentProductCategoryController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Admin\Controller\ProductManagement\TencentProductCategoryController" class="App\Admin\Controller\ProductManagement\TencentProductCategoryController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Admin\Controller\ProductManagement\TencentProductCategoryController" class="App\Admin\Controller\ProductManagement\TencentProductCategoryController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Admin\Controller\ProductManagement\VirtualNetworkOperatorController" class="App\Admin\Controller\ProductManagement\VirtualNetworkOperatorController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Admin\Controller\ProductManagement\VirtualNetworkOperatorController" class="App\Admin\Controller\ProductManagement\VirtualNetworkOperatorController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Admin\Controller\ProductManagement\VirtualNetworkOperatorController" class="App\Admin\Controller\ProductManagement\VirtualNetworkOperatorController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Admin\Controller\ProfileController" class="App\Admin\Controller\ProfileController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Admin\Controller\ProfileController" class="App\Admin\Controller\ProfileController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Admin\Controller\ProfileController" class="App\Admin\Controller\ProfileController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Admin\Controller\ServicesMallOrderController" class="App\Admin\Controller\ServicesMallOrderController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Admin\Controller\ServicesMallOrderController" class="App\Admin\Controller\ServicesMallOrderController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Admin\Controller\ServicesMallOrderController" class="App\Admin\Controller\ServicesMallOrderController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Admin\Controller\ServicesMallProductController" class="App\Admin\Controller\ServicesMallProductController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Admin\Controller\ServicesMallProductController" class="App\Admin\Controller\ServicesMallProductController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Admin\Controller\ServicesMallProductController" class="App\Admin\Controller\ServicesMallProductController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Admin\Controller\SystemAdministration\AdministratorController" class="App\Admin\Controller\SystemAdministration\AdministratorController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Admin\Controller\SystemAdministration\AdministratorController" class="App\Admin\Controller\SystemAdministration\AdministratorController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Admin\Controller\SystemAdministration\AdministratorController" class="App\Admin\Controller\SystemAdministration\AdministratorController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Admin\Controller\SystemAdministration\AdministratorRoleController" class="App\Admin\Controller\SystemAdministration\AdministratorRoleController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Admin\Controller\SystemAdministration\AdministratorRoleController" class="App\Admin\Controller\SystemAdministration\AdministratorRoleController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Admin\Controller\SystemAdministration\AdministratorRoleController" class="App\Admin\Controller\SystemAdministration\AdministratorRoleController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Admin\Controller\SystemAdministration\ArticleCategoryController" class="App\Admin\Controller\SystemAdministration\ArticleCategoryController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Admin\Controller\SystemAdministration\ArticleCategoryController" class="App\Admin\Controller\SystemAdministration\ArticleCategoryController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Admin\Controller\SystemAdministration\ArticleCategoryController" class="App\Admin\Controller\SystemAdministration\ArticleCategoryController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Admin\Controller\SystemAdministration\ArticleController" class="App\Admin\Controller\SystemAdministration\ArticleController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Admin\Controller\SystemAdministration\ArticleController" class="App\Admin\Controller\SystemAdministration\ArticleController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Admin\Controller\SystemAdministration\ArticleController" class="App\Admin\Controller\SystemAdministration\ArticleController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Admin\Controller\SystemAdministration\CacheController" class="App\Admin\Controller\SystemAdministration\CacheController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Admin\Controller\SystemAdministration\CacheController" class="App\Admin\Controller\SystemAdministration\CacheController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Admin\Controller\SystemAdministration\CacheController" class="App\Admin\Controller\SystemAdministration\CacheController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Admin\Controller\SystemAdministration\LoggingController" class="App\Admin\Controller\SystemAdministration\LoggingController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Admin\Controller\SystemAdministration\LoggingController" class="App\Admin\Controller\SystemAdministration\LoggingController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Admin\Controller\SystemAdministration\LoggingController" class="App\Admin\Controller\SystemAdministration\LoggingController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Admin\Controller\SystemAdministration\MiscController" class="App\Admin\Controller\SystemAdministration\MiscController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Admin\Controller\SystemAdministration\MiscController" class="App\Admin\Controller\SystemAdministration\MiscController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Admin\Controller\SystemAdministration\MiscController" class="App\Admin\Controller\SystemAdministration\MiscController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Admin\Controller\SystemAdministration\RedisController" class="App\Admin\Controller\SystemAdministration\RedisController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Admin\Controller\SystemAdministration\RedisController" class="App\Admin\Controller\SystemAdministration\RedisController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Admin\Controller\SystemAdministration\RedisController" class="App\Admin\Controller\SystemAdministration\RedisController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Admin\Controller\SystemAdministration\SystemAdministrationController" class="App\Admin\Controller\SystemAdministration\SystemAdministrationController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Admin\Controller\SystemAdministration\SystemAdministrationController" class="App\Admin\Controller\SystemAdministration\SystemAdministrationController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Admin\Controller\SystemAdministration\SystemAdministrationController" class="App\Admin\Controller\SystemAdministration\SystemAdministrationController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Admin\Controller\SystemAdministration\SystemSettingController" class="App\Admin\Controller\SystemAdministration\SystemSettingController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Admin\Controller\SystemAdministration\SystemSettingController" class="App\Admin\Controller\SystemAdministration\SystemSettingController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Admin\Controller\SystemAdministration\SystemSettingController" class="App\Admin\Controller\SystemAdministration\SystemSettingController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Admin\Controller\UserApplicationController" class="App\Admin\Controller\UserApplicationController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Admin\Controller\UserApplicationController" class="App\Admin\Controller\UserApplicationController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Admin\Controller\UserApplicationController" class="App\Admin\Controller\UserApplicationController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Admin\Controller\UserController" class="App\Admin\Controller\UserController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Admin\Controller\UserController" class="App\Admin\Controller\UserController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Admin\Controller\UserController" class="App\Admin\Controller\UserController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Admin\Controller\UserDetail\MainController" class="App\Admin\Controller\UserDetail\MainController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Admin\Controller\UserDetail\MainController" class="App\Admin\Controller\UserDetail\MainController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Admin\Controller\UserDetail\MainController" class="App\Admin\Controller\UserDetail\MainController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Admin\Controller\UserDetail\OpenPlatformController" class="App\Admin\Controller\UserDetail\OpenPlatformController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Admin\Controller\UserDetail\OpenPlatformController" class="App\Admin\Controller\UserDetail\OpenPlatformController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Admin\Controller\UserDetail\OpenPlatformController" class="App\Admin\Controller\UserDetail\OpenPlatformController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Admin\Controller\UserDetail\ResellerPlatformController" class="App\Admin\Controller\UserDetail\ResellerPlatformController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Admin\Controller\UserDetail\ResellerPlatformController" class="App\Admin\Controller\UserDetail\ResellerPlatformController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Admin\Controller\UserDetail\ResellerPlatformController" class="App\Admin\Controller\UserDetail\ResellerPlatformController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Admin\Controller\UserDetail\SupplierPlatformController" class="App\Admin\Controller\UserDetail\SupplierPlatformController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Admin\Controller\UserDetail\SupplierPlatformController" class="App\Admin\Controller\UserDetail\SupplierPlatformController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Admin\Controller\UserDetail\SupplierPlatformController" class="App\Admin\Controller\UserDetail\SupplierPlatformController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Admin\Controller\UserDetail\UserDetailController" class="App\Admin\Controller\UserDetail\UserDetailController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Admin\Controller\UserDetail\UserDetailController" class="App\Admin\Controller\UserDetail\UserDetailController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Admin\Controller\UserDetail\UserDetailController" class="App\Admin\Controller\UserDetail\UserDetailController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Admin\Controller\UserSubAccountLevelController" class="App\Admin\Controller\UserSubAccountLevelController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Admin\Controller\UserSubAccountLevelController" class="App\Admin\Controller\UserSubAccountLevelController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Admin\Controller\UserSubAccountLevelController" class="App\Admin\Controller\UserSubAccountLevelController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Admin\Form\AdminEditForm" class="App\Admin\Form\AdminEditForm" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ResetInterface.0.App\Admin\Form\AdminEditForm" class="App\Admin\Form\AdminEditForm" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Admin\Form\AdminEditForm" class="App\Admin\Form\AdminEditForm" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Admin\Form\ArticleEditForm" class="App\Admin\Form\ArticleEditForm" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ResetInterface.0.App\Admin\Form\ArticleEditForm" class="App\Admin\Form\ArticleEditForm" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Admin\Form\ArticleEditForm" class="App\Admin\Form\ArticleEditForm" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Admin\Form\PhoneNumberAttributionEditForm" class="App\Admin\Form\PhoneNumberAttributionEditForm" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ResetInterface.0.App\Admin\Form\PhoneNumberAttributionEditForm" class="App\Admin\Form\PhoneNumberAttributionEditForm" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Admin\Form\PhoneNumberAttributionEditForm" class="App\Admin\Form\PhoneNumberAttributionEditForm" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Admin\Form\ProductSearchForm" class="App\Admin\Form\ProductSearchForm" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ResetInterface.0.App\Admin\Form\ProductSearchForm" class="App\Admin\Form\ProductSearchForm" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Admin\Form\ProductSearchForm" class="App\Admin\Form\ProductSearchForm" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Admin\Form\RegionEditForm" class="App\Admin\Form\RegionEditForm" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ResetInterface.0.App\Admin\Form\RegionEditForm" class="App\Admin\Form\RegionEditForm" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Admin\Form\RegionEditForm" class="App\Admin\Form\RegionEditForm" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Admin\Form\SystemSetting\PassportSettingForm" class="App\Admin\Form\SystemSetting\PassportSettingForm" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ResetInterface.0.App\Admin\Form\SystemSetting\PassportSettingForm" class="App\Admin\Form\SystemSetting\PassportSettingForm" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Admin\Form\SystemSetting\PassportSettingForm" class="App\Admin\Form\SystemSetting\PassportSettingForm" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Admin\Form\SystemSetting\ResellerPlatformSettingForm" class="App\Admin\Form\SystemSetting\ResellerPlatformSettingForm" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ResetInterface.0.App\Admin\Form\SystemSetting\ResellerPlatformSettingForm" class="App\Admin\Form\SystemSetting\ResellerPlatformSettingForm" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Admin\Form\SystemSetting\ResellerPlatformSettingForm" class="App\Admin\Form\SystemSetting\ResellerPlatformSettingForm" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Admin\Form\SystemSetting\SupplierPlatformSettingForm" class="App\Admin\Form\SystemSetting\SupplierPlatformSettingForm" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ResetInterface.0.App\Admin\Form\SystemSetting\SupplierPlatformSettingForm" class="App\Admin\Form\SystemSetting\SupplierPlatformSettingForm" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Admin\Form\SystemSetting\SupplierPlatformSettingForm" class="App\Admin\Form\SystemSetting\SupplierPlatformSettingForm" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Admin\Form\SystemSetting\SystemForm" class="App\Admin\Form\SystemSetting\SystemForm" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ResetInterface.0.App\Admin\Form\SystemSetting\SystemForm" class="App\Admin\Form\SystemSetting\SystemForm" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Admin\Form\SystemSetting\SystemForm" class="App\Admin\Form\SystemSetting\SystemForm" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Admin\Form\TencentProductCategoryEditForm" class="App\Admin\Form\TencentProductCategoryEditForm" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ResetInterface.0.App\Admin\Form\TencentProductCategoryEditForm" class="App\Admin\Form\TencentProductCategoryEditForm" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Admin\Form\TencentProductCategoryEditForm" class="App\Admin\Form\TencentProductCategoryEditForm" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Admin\Form\VirtualNetworkOperatorEditForm" class="App\Admin\Form\VirtualNetworkOperatorEditForm" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ResetInterface.0.App\Admin\Form\VirtualNetworkOperatorEditForm" class="App\Admin\Form\VirtualNetworkOperatorEditForm" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Admin\Form\VirtualNetworkOperatorEditForm" class="App\Admin\Form\VirtualNetworkOperatorEditForm" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Admin\Service\AdminBaseService" class="App\Admin\Service\AdminBaseService" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Admin\Service\AdminBaseService" class="App\Admin\Service\AdminBaseService" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Admin\Service\AdminOperatonLogManager" class="App\Admin\Service\AdminOperatonLogManager" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Admin\Service\AdminOperatonLogManager" class="App\Admin\Service\AdminOperatonLogManager" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Admin\Service\AdminUserManager" class="App\Admin\Service\AdminUserManager" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Admin\Service\AdminUserManager" class="App\Admin\Service\AdminUserManager" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Admin\Service\BaseProductManager" class="App\Admin\Service\BaseProductManager" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Admin\Service\BaseProductManager" class="App\Admin\Service\BaseProductManager" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Admin\Service\ProductFlowManager" class="App\Admin\Service\ProductFlowManager" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Admin\Service\ProductFlowManager" class="App\Admin\Service\ProductFlowManager" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Admin\Service\ProductMobileManager" class="App\Admin\Service\ProductMobileManager" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Admin\Service\ProductMobileManager" class="App\Admin\Service\ProductMobileManager" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Admin\Service\ProductTelephoneManager" class="App\Admin\Service\ProductTelephoneManager" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Admin\Service\ProductTelephoneManager" class="App\Admin\Service\ProductTelephoneManager" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Admin\Service\ProductTencentManager" class="App\Admin\Service\ProductTencentManager" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Admin\Service\ProductTencentManager" class="App\Admin\Service\ProductTencentManager" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Console\Command\Command.0.App\Common\Command\GenerateModelCommand" class="App\Common\Command\GenerateModelCommand" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Common\Command\GenerateModelCommand" class="App\Common\Command\GenerateModelCommand" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Console\Command\Command.0.App\Common\Command\GenerateSettingClasses" class="App\Common\Command\GenerateSettingClasses" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Common\Command\GenerateSettingClasses" class="App\Common\Command\GenerateSettingClasses" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Common\Controller\ArticleController" class="App\Common\Controller\ArticleController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Common\Controller\ArticleController" class="App\Common\Controller\ArticleController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Common\Controller\ArticleController" class="App\Common\Controller\ArticleController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Common\Controller\BaseController" class="App\Common\Controller\BaseController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Common\Controller\BaseController" class="App\Common\Controller\BaseController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Common\Controller\BaseController" class="App\Common\Controller\BaseController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Common\Controller\CrudController" class="App\Common\Controller\CrudController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Common\Controller\CrudController" class="App\Common\Controller\CrudController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Common\Controller\CrudController" class="App\Common\Controller\CrudController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Common\Controller\FileUploadController" class="App\Common\Controller\FileUploadController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Common\Controller\FileUploadController" class="App\Common\Controller\FileUploadController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Common\Controller\FileUploadController" class="App\Common\Controller\FileUploadController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Common\Controller\Finance\BalanceController" class="App\Common\Controller\Finance\BalanceController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Common\Controller\Finance\BalanceController" class="App\Common\Controller\Finance\BalanceController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Common\Controller\Finance\BalanceController" class="App\Common\Controller\Finance\BalanceController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Common\Controller\FrontpageController" class="App\Common\Controller\FrontpageController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Common\Controller\FrontpageController" class="App\Common\Controller\FrontpageController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Common\Controller\FrontpageController" class="App\Common\Controller\FrontpageController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Common\Controller\RecaptchaController" class="App\Common\Controller\RecaptchaController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Common\Controller\RecaptchaController" class="App\Common\Controller\RecaptchaController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Common\Controller\RecaptchaController" class="App\Common\Controller\RecaptchaController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Common\Controller\SmsVerifierController" class="App\Common\Controller\SmsVerifierController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Common\Controller\SmsVerifierController" class="App\Common\Controller\SmsVerifierController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Common\Controller\SmsVerifierController" class="App\Common\Controller\SmsVerifierController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Common\Form\IndividualUserRegisterForm" class="App\Common\Form\IndividualUserRegisterForm" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ResetInterface.0.App\Common\Form\IndividualUserRegisterForm" class="App\Common\Form\IndividualUserRegisterForm" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Common\Form\IndividualUserRegisterForm" class="App\Common\Form\IndividualUserRegisterForm" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Common\Form\UserForm" class="App\Common\Form\UserForm" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ResetInterface.0.App\Common\Form\UserForm" class="App\Common\Form\UserForm" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Common\Form\UserForm" class="App\Common\Form\UserForm" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.App\Common\Handler\AccountVerificationHandler" class="App\Common\Handler\AccountVerificationHandler" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Common\Handler\AccountVerificationHandler" class="App\Common\Handler\AccountVerificationHandler" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.App\Common\Handler\AuthenticationFailureListener" class="App\Common\Handler\AuthenticationFailureListener" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Common\Handler\AuthenticationFailureListener" class="App\Common\Handler\AuthenticationFailureListener" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.App\Common\Handler\KernelResponseSubscriber" class="App\Common\Handler\KernelResponseSubscriber" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Common\Handler\KernelResponseSubscriber" class="App\Common\Handler\KernelResponseSubscriber" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.App\Common\Handler\KernelViewSubscriber" class="App\Common\Handler\KernelViewSubscriber" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Common\Handler\KernelViewSubscriber" class="App\Common\Handler\KernelViewSubscriber" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.App\Common\Handler\RequestTerminateSubscriber" class="App\Common\Handler\RequestTerminateSubscriber" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Common\Handler\RequestTerminateSubscriber" class="App\Common\Handler\RequestTerminateSubscriber" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.App\Common\Handler\SystemMaintainModeHandler" class="App\Common\Handler\SystemMaintainModeHandler" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Common\Handler\SystemMaintainModeHandler" class="App\Common\Handler\SystemMaintainModeHandler" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Common\Service\AuthenticationService" class="App\Common\Service\AuthenticationService" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Common\Service\AuthenticationService" class="App\Common\Service\AuthenticationService" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ResetInterface.0.App\Common\Service\Cache\AppCacheRedis" class="App\Common\Service\Cache\AppCacheRedis" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Psr\Log\LoggerAwareInterface.0.App\Common\Service\Cache\AppCacheRedis" class="App\Common\Service\Cache\AppCacheRedis" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Common\Service\Cache\AppCacheRedis" class="App\Common\Service\Cache\AppCacheRedis" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ResetInterface.0.App\Common\Service\Cache\ChainCache" class="App\Common\Service\Cache\ChainCache" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Common\Service\Cache\ChainCache" class="App\Common\Service\Cache\ChainCache" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Common\Service\CsrfTokenManager" class="App\Common\Service\CsrfTokenManager" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Common\Service\CsrfTokenManager" class="App\Common\Service\CsrfTokenManager" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Common\Service\ExternalService\IdentityVerifyService" class="App\Common\Service\ExternalService\IdentityVerifyService" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Common\Service\ExternalService\IdentityVerifyService" class="App\Common\Service\ExternalService\IdentityVerifyService" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Common\Service\FileUpload\UploadFileListener" class="App\Common\Service\FileUpload\UploadFileListener" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.App\Common\Service\FileUpload\UploadFileListener" class="App\Common\Service\FileUpload\UploadFileListener" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Common\Service\FileUpload\UploadFileListener" class="App\Common\Service\FileUpload\UploadFileListener" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Common\Service\FileUpload\UploadFileManager" class="App\Common\Service\FileUpload\UploadFileManager" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Common\Service\FileUpload\UploadFileManager" class="App\Common\Service\FileUpload\UploadFileManager" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Common\Service\Order\OrderService" class="App\Common\Service\Order\OrderService" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Common\Service\Order\OrderService" class="App\Common\Service\Order\OrderService" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Common\Service\Payment\AlipayService" class="App\Common\Service\Payment\AlipayService" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Common\Service\Payment\AlipayService" class="App\Common\Service\Payment\AlipayService" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Common\Service\Payment\UserMoneyTradeLogManager" class="App\Common\Service\Payment\UserMoneyTradeLogManager" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Common\Service\Payment\UserMoneyTradeLogManager" class="App\Common\Service\Payment\UserMoneyTradeLogManager" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Common\Service\QueryMobileBalance" class="App\Common\Service\QueryMobileBalance" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Common\Service\QueryMobileBalance" class="App\Common\Service\QueryMobileBalance" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Common\Service\RecaptchaService" class="App\Common\Service\RecaptchaService" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Common\Service\RecaptchaService" class="App\Common\Service\RecaptchaService" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ResetInterface.0.App\Common\Service\SimpleRecordResetter" class="App\Common\Service\SimpleRecordResetter" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Common\Service\SimpleRecordResetter" class="App\Common\Service\SimpleRecordResetter" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Common\Service\SmsService" class="App\Common\Service\SmsService" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Common\Service\SmsService" class="App\Common\Service\SmsService" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Common\Service\SystemSettingManager" class="App\Common\Service\SystemSettingManager" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Common\Service\SystemSettingManager" class="App\Common\Service\SystemSettingManager" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Common\Service\UserManager" class="App\Common\Service\UserManager" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Common\Service\UserManager" class="App\Common\Service\UserManager" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Common\Service\UuidGenerator" class="App\Common\Service\UuidGenerator" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Common\Service\UuidGenerator" class="App\Common\Service\UuidGenerator" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Common\Service\VerifyService" class="App\Common\Service\VerifyService" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Common\Service\VerifyService" class="App\Common\Service\VerifyService" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Common\Service\WebAuthenticationManager" class="App\Common\Service\WebAuthenticationManager" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Common\Service\WebAuthenticationManager" class="App\Common\Service\WebAuthenticationManager" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Twig_ExtensionInterface.0.App\Common\Twig\AppExtension" class="App\Common\Twig\AppExtension" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Twig\Extension\ExtensionInterface.0.App\Common\Twig\AppExtension" class="App\Common\Twig\AppExtension" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Common\Twig\AppExtension" class="App\Common\Twig\AppExtension" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Twig_ExtensionInterface.0.App\Common\Twig\SecurityExtension" class="App\Common\Twig\SecurityExtension" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Twig\Extension\ExtensionInterface.0.App\Common\Twig\SecurityExtension" class="App\Common\Twig\SecurityExtension" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Common\Twig\SecurityExtension" class="App\Common\Twig\SecurityExtension" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Twig_ExtensionInterface.0.App\Common\Twig\SourceCodeExtension" class="App\Common\Twig\SourceCodeExtension" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Twig\Extension\ExtensionInterface.0.App\Common\Twig\SourceCodeExtension" class="App\Common\Twig\SourceCodeExtension" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Common\Twig\SourceCodeExtension" class="App\Common\Twig\SourceCodeExtension" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Open\Controller\DashboardController" class="App\Open\Controller\DashboardController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Open\Controller\DashboardController" class="App\Open\Controller\DashboardController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Open\Controller\DashboardController" class="App\Open\Controller\DashboardController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Open\Controller\FinanceController" class="App\Open\Controller\FinanceController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Open\Controller\FinanceController" class="App\Open\Controller\FinanceController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Open\Controller\FinanceController" class="App\Open\Controller\FinanceController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Open\Controller\FrontpageController" class="App\Open\Controller\FrontpageController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Open\Controller\FrontpageController" class="App\Open\Controller\FrontpageController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Open\Controller\FrontpageController" class="App\Open\Controller\FrontpageController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Open\Controller\OpenBaseController" class="App\Open\Controller\OpenBaseController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Open\Controller\OpenBaseController" class="App\Open\Controller\OpenBaseController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Open\Controller\OpenBaseController" class="App\Open\Controller\OpenBaseController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Open\Controller\ServiceController" class="App\Open\Controller\ServiceController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Open\Controller\ServiceController" class="App\Open\Controller\ServiceController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Open\Controller\ServiceController" class="App\Open\Controller\ServiceController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Open\Controller\UserController" class="App\Open\Controller\UserController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Open\Controller\UserController" class="App\Open\Controller\UserController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Open\Controller\UserController" class="App\Open\Controller\UserController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Twig_ExtensionInterface.0.App\Open\Twig\NavExtension" class="App\Open\Twig\NavExtension" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Twig\Extension\ExtensionInterface.0.App\Open\Twig\NavExtension" class="App\Open\Twig\NavExtension" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Open\Twig\NavExtension" class="App\Open\Twig\NavExtension" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Passport\Controller\HomeController" class="App\Passport\Controller\HomeController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Passport\Controller\HomeController" class="App\Passport\Controller\HomeController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Passport\Controller\HomeController" class="App\Passport\Controller\HomeController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Passport\Controller\IdentityManagementController" class="App\Passport\Controller\IdentityManagementController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Passport\Controller\IdentityManagementController" class="App\Passport\Controller\IdentityManagementController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Passport\Controller\IdentityManagementController" class="App\Passport\Controller\IdentityManagementController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Passport\Controller\LoginController" class="App\Passport\Controller\LoginController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Passport\Controller\LoginController" class="App\Passport\Controller\LoginController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Passport\Controller\LoginController" class="App\Passport\Controller\LoginController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Passport\Controller\PassportBaseController" class="App\Passport\Controller\PassportBaseController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Passport\Controller\PassportBaseController" class="App\Passport\Controller\PassportBaseController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Passport\Controller\PassportBaseController" class="App\Passport\Controller\PassportBaseController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Passport\Controller\PasswordResetController" class="App\Passport\Controller\PasswordResetController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Passport\Controller\PasswordResetController" class="App\Passport\Controller\PasswordResetController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Passport\Controller\PasswordResetController" class="App\Passport\Controller\PasswordResetController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Passport\Controller\ProtectController" class="App\Passport\Controller\ProtectController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Passport\Controller\ProtectController" class="App\Passport\Controller\ProtectController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Passport\Controller\ProtectController" class="App\Passport\Controller\ProtectController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Passport\Controller\QuestionController" class="App\Passport\Controller\QuestionController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Passport\Controller\QuestionController" class="App\Passport\Controller\QuestionController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Passport\Controller\QuestionController" class="App\Passport\Controller\QuestionController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Passport\Controller\RegisterController" class="App\Passport\Controller\RegisterController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Passport\Controller\RegisterController" class="App\Passport\Controller\RegisterController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Passport\Controller\RegisterController" class="App\Passport\Controller\RegisterController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Passport\Controller\SafeCenterController" class="App\Passport\Controller\SafeCenterController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Passport\Controller\SafeCenterController" class="App\Passport\Controller\SafeCenterController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Passport\Controller\SafeCenterController" class="App\Passport\Controller\SafeCenterController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Passport\Controller\ToolController" class="App\Passport\Controller\ToolController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Passport\Controller\ToolController" class="App\Passport\Controller\ToolController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Passport\Controller\ToolController" class="App\Passport\Controller\ToolController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Passport\Controller\UserController" class="App\Passport\Controller\UserController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Passport\Controller\UserController" class="App\Passport\Controller\UserController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Passport\Controller\UserController" class="App\Passport\Controller\UserController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Passport\Controller\UsersMessageController" class="App\Passport\Controller\UsersMessageController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Passport\Controller\UsersMessageController" class="App\Passport\Controller\UsersMessageController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Passport\Controller\UsersMessageController" class="App\Passport\Controller\UsersMessageController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Passport\Form\BusinessIdentitySubmitForm" class="App\Passport\Form\BusinessIdentitySubmitForm" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ResetInterface.0.App\Passport\Form\BusinessIdentitySubmitForm" class="App\Passport\Form\BusinessIdentitySubmitForm" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Passport\Form\BusinessIdentitySubmitForm" class="App\Passport\Form\BusinessIdentitySubmitForm" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Passport\Form\IndividualIdentitySubmitForm" class="App\Passport\Form\IndividualIdentitySubmitForm" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ResetInterface.0.App\Passport\Form\IndividualIdentitySubmitForm" class="App\Passport\Form\IndividualIdentitySubmitForm" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Passport\Form\IndividualIdentitySubmitForm" class="App\Passport\Form\IndividualIdentitySubmitForm" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Passport\Service\EmailMsgNoticeService" class="App\Passport\Service\EmailMsgNoticeService" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Passport\Service\EmailMsgNoticeService" class="App\Passport\Service\EmailMsgNoticeService" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Passport\Service\IpService" class="App\Passport\Service\IpService" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Passport\Service\IpService" class="App\Passport\Service\IpService" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Passport\Service\MobileMsgNoticeService" class="App\Passport\Service\MobileMsgNoticeService" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Passport\Service\MobileMsgNoticeService" class="App\Passport\Service\MobileMsgNoticeService" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Passport\Service\RequestToolService" class="App\Passport\Service\RequestToolService" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Passport\Service\RequestToolService" class="App\Passport\Service\RequestToolService" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Passport\Service\UserPasswordService" class="App\Passport\Service\UserPasswordService" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Passport\Service\UserPasswordService" class="App\Passport\Service\UserPasswordService" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Reseller\Controller\AffiliateController" class="App\Reseller\Controller\AffiliateController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Reseller\Controller\AffiliateController" class="App\Reseller\Controller\AffiliateController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Reseller\Controller\AffiliateController" class="App\Reseller\Controller\AffiliateController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Reseller\Controller\DashboardController" class="App\Reseller\Controller\DashboardController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Reseller\Controller\DashboardController" class="App\Reseller\Controller\DashboardController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Reseller\Controller\DashboardController" class="App\Reseller\Controller\DashboardController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Reseller\Controller\EmployeeController" class="App\Reseller\Controller\EmployeeController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Reseller\Controller\EmployeeController" class="App\Reseller\Controller\EmployeeController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Reseller\Controller\EmployeeController" class="App\Reseller\Controller\EmployeeController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Reseller\Controller\FaqController" class="App\Reseller\Controller\FaqController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Reseller\Controller\FaqController" class="App\Reseller\Controller\FaqController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Reseller\Controller\FaqController" class="App\Reseller\Controller\FaqController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Reseller\Controller\FinanceController" class="App\Reseller\Controller\FinanceController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Reseller\Controller\FinanceController" class="App\Reseller\Controller\FinanceController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Reseller\Controller\FinanceController" class="App\Reseller\Controller\FinanceController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Reseller\Controller\HomeController" class="App\Reseller\Controller\HomeController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Reseller\Controller\HomeController" class="App\Reseller\Controller\HomeController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Reseller\Controller\HomeController" class="App\Reseller\Controller\HomeController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Reseller\Controller\OrderController" class="App\Reseller\Controller\OrderController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Reseller\Controller\OrderController" class="App\Reseller\Controller\OrderController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Reseller\Controller\OrderController" class="App\Reseller\Controller\OrderController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Reseller\Controller\PrinterSettingController" class="App\Reseller\Controller\PrinterSettingController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Reseller\Controller\PrinterSettingController" class="App\Reseller\Controller\PrinterSettingController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Reseller\Controller\PrinterSettingController" class="App\Reseller\Controller\PrinterSettingController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Reseller\Controller\ProductController" class="App\Reseller\Controller\ProductController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Reseller\Controller\ProductController" class="App\Reseller\Controller\ProductController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Reseller\Controller\ProductController" class="App\Reseller\Controller\ProductController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Reseller\Controller\RechargeController" class="App\Reseller\Controller\RechargeController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Reseller\Controller\RechargeController" class="App\Reseller\Controller\RechargeController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Reseller\Controller\RechargeController" class="App\Reseller\Controller\RechargeController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Reseller\Controller\ResellerAccountController" class="App\Reseller\Controller\ResellerAccountController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Reseller\Controller\ResellerAccountController" class="App\Reseller\Controller\ResellerAccountController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Reseller\Controller\ResellerAccountController" class="App\Reseller\Controller\ResellerAccountController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Reseller\Controller\ResellerBaseController" class="App\Reseller\Controller\ResellerBaseController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Reseller\Controller\ResellerBaseController" class="App\Reseller\Controller\ResellerBaseController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Reseller\Controller\ResellerBaseController" class="App\Reseller\Controller\ResellerBaseController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Reseller\Controller\SafeController" class="App\Reseller\Controller\SafeController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Reseller\Controller\SafeController" class="App\Reseller\Controller\SafeController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Reseller\Controller\SafeController" class="App\Reseller\Controller\SafeController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Reseller\Controller\UserController" class="App\Reseller\Controller\UserController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Reseller\Controller\UserController" class="App\Reseller\Controller\UserController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Reseller\Controller\UserController" class="App\Reseller\Controller\UserController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Reseller\Form\OrderRechargeForm" class="App\Reseller\Form\OrderRechargeForm" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ResetInterface.0.App\Reseller\Form\OrderRechargeForm" class="App\Reseller\Form\OrderRechargeForm" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Reseller\Form\OrderRechargeForm" class="App\Reseller\Form\OrderRechargeForm" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Reseller\Form\PrintSettingForm" class="App\Reseller\Form\PrintSettingForm" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ResetInterface.0.App\Reseller\Form\PrintSettingForm" class="App\Reseller\Form\PrintSettingForm" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Reseller\Form\PrintSettingForm" class="App\Reseller\Form\PrintSettingForm" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Reseller\Form\TransferForm" class="App\Reseller\Form\TransferForm" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ResetInterface.0.App\Reseller\Form\TransferForm" class="App\Reseller\Form\TransferForm" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Reseller\Form\TransferForm" class="App\Reseller\Form\TransferForm" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Reseller\Service\ProductService" class="App\Reseller\Service\ProductService" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Reseller\Service\ProductService" class="App\Reseller\Service\ProductService" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Supplier\Controller\DashboardController" class="App\Supplier\Controller\DashboardController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Supplier\Controller\DashboardController" class="App\Supplier\Controller\DashboardController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Supplier\Controller\DashboardController" class="App\Supplier\Controller\DashboardController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Supplier\Controller\FinanceController" class="App\Supplier\Controller\FinanceController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Supplier\Controller\FinanceController" class="App\Supplier\Controller\FinanceController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Supplier\Controller\FinanceController" class="App\Supplier\Controller\FinanceController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Supplier\Controller\HomeController" class="App\Supplier\Controller\HomeController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Supplier\Controller\HomeController" class="App\Supplier\Controller\HomeController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Supplier\Controller\HomeController" class="App\Supplier\Controller\HomeController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Supplier\Controller\OrdersController" class="App\Supplier\Controller\OrdersController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Supplier\Controller\OrdersController" class="App\Supplier\Controller\OrdersController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Supplier\Controller\OrdersController" class="App\Supplier\Controller\OrdersController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Supplier\Controller\SourceGroupController" class="App\Supplier\Controller\SourceGroupController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Supplier\Controller\SourceGroupController" class="App\Supplier\Controller\SourceGroupController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Supplier\Controller\SourceGroupController" class="App\Supplier\Controller\SourceGroupController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Supplier\Controller\SupplierBaseController" class="App\Supplier\Controller\SupplierBaseController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Supplier\Controller\SupplierBaseController" class="App\Supplier\Controller\SupplierBaseController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Supplier\Controller\SupplierBaseController" class="App\Supplier\Controller\SupplierBaseController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Supplier\Controller\UserController" class="App\Supplier\Controller\UserController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Supplier\Controller\UserController" class="App\Supplier\Controller\UserController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Supplier\Controller\UserController" class="App\Supplier\Controller\UserController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Supplier\Form\BusinessIdentitySubmitForm" class="App\Supplier\Form\BusinessIdentitySubmitForm" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ResetInterface.0.App\Supplier\Form\BusinessIdentitySubmitForm" class="App\Supplier\Form\BusinessIdentitySubmitForm" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Supplier\Form\BusinessIdentitySubmitForm" class="App\Supplier\Form\BusinessIdentitySubmitForm" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Test\Controller\SimpleFormDemoController" class="App\Test\Controller\SimpleFormDemoController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Test\Controller\SimpleFormDemoController" class="App\Test\Controller\SimpleFormDemoController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Test\Controller\SimpleFormDemoController" class="App\Test\Controller\SimpleFormDemoController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Test\Controller\TestController" class="App\Test\Controller\TestController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Test\Controller\TestController" class="App\Test\Controller\TestController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Test\Controller\TestController" class="App\Test\Controller\TestController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Test\Form\TestForm" class="App\Test\Form\TestForm" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ResetInterface.0.App\Test\Form\TestForm" class="App\Test\Form\TestForm" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Test\Form\TestForm" class="App\Test\Form\TestForm" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Console\Command\Command.0.web_server.command.server_run" class="Symfony\Bundle\WebServerBundle\Command\ServerRunCommand" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.web_server.command.server_run" class="Symfony\Bundle\WebServerBundle\Command\ServerRunCommand" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Console\Command\Command.0.web_server.command.server_start" class="Symfony\Bundle\WebServerBundle\Command\ServerStartCommand" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.web_server.command.server_start" class="Symfony\Bundle\WebServerBundle\Command\ServerStartCommand" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Endroid\QrCode\Writer\WriterInterface.0.Endroid\QrCode\Writer\BinaryWriter" class="Endroid\QrCode\Writer\BinaryWriter" public="true" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Endroid\QrCode\Writer\BinaryWriter" class="Endroid\QrCode\Writer\BinaryWriter" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Endroid\QrCode\Writer\WriterInterface.0.Endroid\QrCode\Writer\DebugWriter" class="Endroid\QrCode\Writer\DebugWriter" public="true" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Endroid\QrCode\Writer\DebugWriter" class="Endroid\QrCode\Writer\DebugWriter" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Endroid\QrCode\Writer\WriterInterface.0.Endroid\QrCode\Writer\EpsWriter" class="Endroid\QrCode\Writer\EpsWriter" public="true" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Endroid\QrCode\Writer\EpsWriter" class="Endroid\QrCode\Writer\EpsWriter" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Endroid\QrCode\Writer\WriterInterface.0.Endroid\QrCode\Writer\PngWriter" class="Endroid\QrCode\Writer\PngWriter" public="true" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Endroid\QrCode\Writer\PngWriter" class="Endroid\QrCode\Writer\PngWriter" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Endroid\QrCode\Writer\WriterInterface.0.Endroid\QrCode\Writer\SvgWriter" class="Endroid\QrCode\Writer\SvgWriter" public="true" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Endroid\QrCode\Writer\SvgWriter" class="Endroid\QrCode\Writer\SvgWriter" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Twig_ExtensionInterface.0.Endroid\QrCodeBundle\Twig\QrCodeExtension" class="Endroid\QrCodeBundle\Twig\QrCodeExtension" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Twig\Extension\ExtensionInterface.0.Endroid\QrCodeBundle\Twig\QrCodeExtension" class="Endroid\QrCodeBundle\Twig\QrCodeExtension" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Endroid\QrCodeBundle\Twig\QrCodeExtension" class="Endroid\QrCodeBundle\Twig\QrCodeExtension" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.Symfu\SimpleFormBundle\Form" class="Symfu\SimpleFormBundle\Form" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ResetInterface.0.Symfu\SimpleFormBundle\Form" class="Symfu\SimpleFormBundle\Form" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Symfu\SimpleFormBundle\Form" class="Symfu\SimpleFormBundle\Form" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".service_locator.1LBo7D5" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="form" type="service" id="Symfu\SimpleFormBundle\Form"/>
      </argument>
    </service>
    <service id=".service_locator.0BwjP.V" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="smsService" type="service" id="App\Common\Service\SmsService"/>
      </argument>
    </service>
    <service id=".service_locator.pqb1G1K" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="uploadFileManager" type="service" id="App\Common\Service\FileUpload\UploadFileManager"/>
      </argument>
    </service>
    <service id=".service_locator.DmTkD_n" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="helper" type="service" id="security.authentication_utils"/>
      </argument>
    </service>
    <service id=".service_locator.K1FCyS_" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="form" type="service" id="Symfu\SimpleFormBundle\Form"/>
        <argument key="orderManager" type="service" id="App\Common\Service\Order\OrderService"/>
      </argument>
    </service>
    <service id=".service_locator.WznNWr0" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="orderService" type="service" id="App\Common\Service\Order\OrderService"/>
      </argument>
    </service>
    <service id=".service_locator.aOeuIsd" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="editForm" type="service" id="App\Admin\Form\PhoneNumberAttributionEditForm"/>
        <argument key="searchForm" type="service" id="Symfu\SimpleFormBundle\Form"/>
      </argument>
    </service>
    <service id=".service_locator.dGFoWrl" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="form" type="service" id="App\Admin\Form\PhoneNumberAttributionEditForm"/>
      </argument>
    </service>
    <service id=".service_locator.q5pzBQS" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="editForm" type="service" id="App\Admin\Form\RegionEditForm"/>
        <argument key="searchForm" type="service" id="Symfu\SimpleFormBundle\Form"/>
      </argument>
    </service>
    <service id=".service_locator.I8.e3sZ" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="form" type="service" id="App\Admin\Form\RegionEditForm"/>
      </argument>
    </service>
    <service id=".service_locator.03MCyGN" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="cache" type="service" id="cache.app.simple"/>
      </argument>
    </service>
    <service id=".service_locator.HHT5or7" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="form" type="service" id="Symfu\SimpleFormBundle\Form"/>
        <argument key="logManager" type="service" id="App\Admin\Service\AdminOperatonLogManager"/>
      </argument>
    </service>
    <service id=".service_locator.7x2N.kf" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="editForm" type="service" id="Symfu\SimpleFormBundle\Form"/>
        <argument key="searchForm" type="service" id="Symfu\SimpleFormBundle\Form"/>
      </argument>
    </service>
    <service id=".service_locator.0f.Pp24" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="editForm" type="service" id="App\Admin\Form\VirtualNetworkOperatorEditForm"/>
        <argument key="searchForm" type="service" id="Symfu\SimpleFormBundle\Form"/>
      </argument>
    </service>
    <service id=".service_locator.qioiIMI" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="form" type="service" id="App\Admin\Form\VirtualNetworkOperatorEditForm"/>
      </argument>
    </service>
    <service id=".service_locator.b49cuD8" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="adminOperatonLogManager" type="service" id="App\Admin\Service\AdminOperatonLogManager"/>
        <argument key="adminUserManager" type="service" id="App\Admin\Service\AdminUserManager"/>
        <argument key="form" type="service" id="Symfu\SimpleFormBundle\Form"/>
        <argument key="translator" type="service" id="translator.default"/>
      </argument>
    </service>
    <service id=".service_locator.0K3xZet" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="editForm" type="service" id="App\Admin\Form\AdminEditForm"/>
        <argument key="searchForm" type="service" id="Symfu\SimpleFormBundle\Form"/>
      </argument>
    </service>
    <service id=".service_locator.RHwpfox" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="adminOperatonLogManager" type="service" id="App\Admin\Service\AdminOperatonLogManager"/>
        <argument key="adminUserManager" type="service" id="App\Admin\Service\AdminUserManager"/>
        <argument key="form" type="service" id="App\Admin\Form\AdminEditForm"/>
      </argument>
    </service>
    <service id=".service_locator.73roCKf" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="adminOperatonLogManager" type="service" id="App\Admin\Service\AdminOperatonLogManager"/>
        <argument key="form" type="service" id="Symfu\SimpleFormBundle\Form"/>
      </argument>
    </service>
    <service id=".service_locator.TIrOq8w" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="form" type="service" id="Symfu\SimpleFormBundle\Form"/>
        <argument key="operatonLogManager" type="service" id="App\Admin\Service\AdminOperatonLogManager"/>
      </argument>
    </service>
    <service id=".service_locator.XfmG6yy" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="articleManager" type="service" id="App\Common\Service\ArticleManager"/>
      </argument>
    </service>
    <service id=".service_locator.Eu1D_g1" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="form" type="service" id="App\Admin\Form\ArticleEditForm"/>
        <argument key="operatonLogManager" type="service" id="App\Admin\Service\AdminOperatonLogManager"/>
      </argument>
    </service>
    <service id=".service_locator.te4BFWu" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="form" type="service" id="App\Admin\Form\ArticleEditForm"/>
        <argument key="operatonLogManager" type="service" id="App\Admin\Service\AdminOperatonLogManager"/>
        <argument key="uploadFileManager" type="service" id="App\Common\Service\FileUpload\UploadFileManager"/>
      </argument>
    </service>
    <service id=".service_locator.ErQKBbM" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="passportSettingForm" type="service" id="App\Admin\Form\SystemSetting\PassportSettingForm"/>
        <argument key="resellerPlatformSettingForm" type="service" id="App\Admin\Form\SystemSetting\ResellerPlatformSettingForm"/>
        <argument key="settings" type="service" id="App\Common\Service\SystemSetting"/>
        <argument key="supplierPlatformSettingForm" type="service" id="App\Admin\Form\SystemSetting\SupplierPlatformSettingForm"/>
        <argument key="systemForm" type="service" id="App\Admin\Form\SystemSetting\SystemForm"/>
      </argument>
    </service>
    <service id=".service_locator.LxTyTgl" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="form" type="service" id="Symfu\SimpleFormBundle\Form"/>
        <argument key="userManager" type="service" id="App\Common\Service\UserManager"/>
      </argument>
    </service>
    <service id=".service_locator.NhBd0iO" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="alipayService" type="service" id="App\Common\Bundle\SimplePay\Service\AlipayService"/>
      </argument>
    </service>
    <service id=".service_locator.IWWOp.J" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="alipayService" type="service" id="App\Common\Bundle\SimplePay\Service\AlipayService"/>
        <argument key="urlGenerator" type="service" id="router.default"/>
      </argument>
    </service>
    <service id=".service_locator.0i4fG.5" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="recaptchaService" type="service" id="App\Common\Service\RecaptchaService"/>
      </argument>
    </service>
    <service id=".service_locator.dlf6qch" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="recaptchaService" type="service" id="App\Common\Service\RecaptchaService"/>
        <argument key="smsService" type="service" id="App\Common\Service\SmsService"/>
      </argument>
    </service>
    <service id=".service_locator.SvuyVJk" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="mailer" type="service" id="swiftmailer.mailer.mxhichina"/>
        <argument key="recaptchaService" type="service" id="App\Common\Service\RecaptchaService"/>
      </argument>
    </service>
    <service id=".service_locator.1n6P8pO" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="logger" type="service" id="monolog.logger"/>
      </argument>
    </service>
    <service id=".service_locator.vDjLN1k" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="ipService" type="service" id="App\Passport\Service\IpService"/>
      </argument>
    </service>
    <service id=".service_locator.iO4b0nm" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="form" type="service" id="App\Passport\Form\IndividualIdentitySubmitForm"/>
      </argument>
    </service>
    <service id=".service_locator._8rcJjt" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="form" type="service" id="App\Passport\Form\BusinessIdentitySubmitForm"/>
      </argument>
    </service>
    <service id=".service_locator.AGu6.j5" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="form" type="service" id="Symfu\SimpleFormBundle\Form"/>
        <argument key="userManager" type="service" id="App\Common\Service\UserManager"/>
        <argument key="verifyService" type="service" id="App\Common\Service\VerifyService"/>
      </argument>
    </service>
    <service id=".service_locator.j6FKjiR" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="form" type="service" id="Symfu\SimpleFormBundle\Form"/>
        <argument key="identityVerifyService" type="service" id="App\Common\Service\ExternalService\IdentityVerifyService"/>
        <argument key="session" type="service" id="session"/>
        <argument key="settings" type="service" id="App\Common\Service\SystemSetting"/>
      </argument>
    </service>
    <service id=".service_locator.7fGS9UX" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="form" type="service" id="Symfu\SimpleFormBundle\Form"/>
        <argument key="identityVerifyService" type="service" id="App\Common\Service\ExternalService\IdentityVerifyService"/>
        <argument key="mailer" type="service" id="swiftmailer.mailer.mxhichina"/>
        <argument key="settings" type="service" id="App\Common\Service\SystemSetting"/>
      </argument>
    </service>
    <service id=".service_locator.zfGyZlZ" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="emailMsgNoticeService" type="service" id="App\Passport\Service\EmailMsgNoticeService"/>
        <argument key="recaptchaService" type="service" id="App\Common\Service\RecaptchaService"/>
      </argument>
    </service>
    <service id=".service_locator.9PjmJGW" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="mobileMsgNoticeService" type="service" id="App\Passport\Service\MobileMsgNoticeService"/>
        <argument key="recaptchaService" type="service" id="App\Common\Service\RecaptchaService"/>
      </argument>
    </service>
    <service id=".service_locator.DLnyT36" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="userManager" type="service" id="App\Common\Service\UserManager"/>
      </argument>
    </service>
    <service id=".service_locator.e3F9ByC" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="form" type="service" id="App\Reseller\Form\TransferForm"/>
        <argument key="userManager" type="service" id="App\Common\Service\UserManager"/>
        <argument key="uuidGenerator" type="service" id="App\Common\Service\UuidGenerator"/>
      </argument>
    </service>
    <service id=".service_locator.PDz3ypR" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="form" type="service" id="Symfu\SimpleFormBundle\Form"/>
        <argument key="userManager" type="service" id="App\Common\Service\UserManager"/>
        <argument key="uuidGenerator" type="service" id="App\Common\Service\UuidGenerator"/>
      </argument>
    </service>
    <service id=".service_locator.3Qq53Xk" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="articleManager" type="service" id="App\Common\Service\ArticleManager"/>
        <argument key="helper" type="service" id="security.authentication_utils"/>
      </argument>
    </service>
    <service id=".service_locator.F.dW8Vu" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="ispManager" type="service" id="App\Common\Service\IspManager"/>
        <argument key="orderService" type="service" id="App\Common\Service\Order\OrderService"/>
        <argument key="productService" type="service" id="App\Reseller\Service\ProductService"/>
        <argument key="settingManager" type="service" id="App\Common\Service\SystemSettingManager"/>
        <argument key="urlGenerator" type="service" id="router.default"/>
      </argument>
    </service>
    <service id=".service_locator.jcyut7p" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="ispManager" type="service" id="App\Common\Service\IspManager"/>
        <argument key="orderService" type="service" id="App\Common\Service\Order\OrderService"/>
        <argument key="userManager" type="service" id="App\Common\Service\UserManager"/>
      </argument>
    </service>
    <service id=".service_locator.B0BYLu." class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="ispManager" type="service" id="App\Common\Service\IspManager"/>
        <argument key="productService" type="service" id="App\Reseller\Service\ProductService"/>
        <argument key="session" type="service" id="session"/>
      </argument>
    </service>
    <service id=".service_locator.Q.4qrO9" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="orderService" type="service" id="App\Common\Service\Order\OrderService"/>
        <argument key="productService" type="service" id="App\Reseller\Service\ProductService"/>
        <argument key="session" type="service" id="session"/>
        <argument key="urlGenerator" type="service" id="router.default"/>
      </argument>
    </service>
    <service id=".service_locator.2xjGnuA" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="form" type="service" id="App\Reseller\Form\PrintSettingForm"/>
      </argument>
    </service>
    <service id=".service_locator.CHOTxCK" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="ispManager" type="service" id="App\Common\Service\IspManager"/>
      </argument>
    </service>
    <service id=".service_locator.UVyikea" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="ispManager" type="service" id="App\Common\Service\IspManager"/>
        <argument key="productService" type="service" id="App\Reseller\Service\ProductService"/>
      </argument>
    </service>
    <service id=".service_locator.447XkUG" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="orderManager" type="service" id="App\Common\Service\Order\OrderService"/>
      </argument>
    </service>
    <service id=".service_locator.5My5vxv" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="form" type="service" id="Symfu\SimpleFormBundle\Form"/>
        <argument key="parameters" type="service" id="parameter_bag"/>
        <argument key="translator" type="service" id="translator.default"/>
      </argument>
    </service>
    <service id=".service_locator.v2jGrEb" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="parameters" type="service" id="parameter_bag"/>
      </argument>
    </service>
    <service id=".service_locator.kHm4B1b" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="csrfTokenManager" type="service" id="security.csrf.token_manager"/>
      </argument>
    </service>
    <service id=".service_locator.AueRQUW" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="form" type="service" id="App\Common\Form\UserForm"/>
      </argument>
    </service>
    <service id=".service_locator.RZ6Wxtc" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="form" type="service" id="App\Test\Form\TestForm"/>
      </argument>
    </service>
    <service id=".service_locator..efTsB1" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="form" type="service" id="Symfu\SimpleFormBundle\Form"/>
        <argument key="testForm" type="service" id="App\Test\Form\TestForm"/>
      </argument>
    </service>
    <service id=".service_locator.iRSmm.3" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="chainCache" type="service" id="App\Common\Service\Cache\ChainCache"/>
        <argument key="settings" type="service" id="App\Common\Service\SystemSetting"/>
        <argument key="simpleCache" type="service" id="cache.app.simple"/>
      </argument>
    </service>
    <service id=".service_locator.h2m2aP." class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="App\Admin\Controller\AuditController::accountApplicationAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\AuditController::accountReviewAction" type="service" id=".service_locator.0BwjP.V"/>
        <argument key="App\Admin\Controller\AuditController::delWithdrawAccountsAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\AuditController::identitiesAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\AuditController::identityReviewSubmitAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\AuditController::productSuppliesAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\AuditController::withdrawAccountsAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\AuditController::withdrawAccountsReviewAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\AuditController::withdrawsAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\FileUploadController::deleteAction" type="service" id=".service_locator.pqb1G1K"/>
        <argument key="App\Admin\Controller\LoginController::login" type="service" id=".service_locator.DmTkD_n"/>
        <argument key="App\Admin\Controller\OrderController::queryMobileBalanceLogsAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\OrderController::rechargeAction" type="service" id=".service_locator.K1FCyS_"/>
        <argument key="App\Admin\Controller\OrderController::rechargeAgainAction" type="service" id=".service_locator.WznNWr0"/>
        <argument key="App\Admin\Controller\OrderController::setFailureSupAction" type="service" id=".service_locator.WznNWr0"/>
        <argument key="App\Admin\Controller\OrderController::suppliersAction" type="service" id=".service_locator.K1FCyS_"/>
        <argument key="App\Admin\Controller\ProductManagement\AbstractSourceGroupController::delete_product_sourcesAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\ProductManagement\AbstractSourceGroupController::groupsOfProductAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\ProductManagement\AbstractSourceGroupController::indexAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\ProductManagement\AbstractSourceGroupController::update_product_source_enable_statusAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\ProductManagement\AbstractSourceGroupController::update_product_source_review_statusAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\ProductManagement\AbstractSourceGroupController::update_source_group_statusAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\ProductManagement\AbstractSourceGroupController::update_source_priceAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\ProductManagement\AbstractSourceGroupController::update_source_statusAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\ProductManagement\AbstractSourceGroupController::update_supplier_account_statusAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\ProductManagement\FlowController::addStep1Action" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\ProductManagement\FlowController::addStep2Action" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\ProductManagement\FlowController::batch_update_attributesAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\ProductManagement\FlowController::delete_by_idsAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\ProductManagement\FlowController::delete_special_user_settingsAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\ProductManagement\FlowController::editAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\ProductManagement\FlowController::indexAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\ProductManagement\FlowController::save_special_user_settingsAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\ProductManagement\FlowController::scheduled_price_changesAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\ProductManagement\FlowController::special_user_settingsAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\ProductManagement\FlowController::update_group_attributesAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\ProductManagement\FlowController::update_product_source_settingsAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\ProductManagement\MobileController::addStep1Action" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\ProductManagement\MobileController::addStep2Action" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\ProductManagement\MobileController::batch_update_attributesAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\ProductManagement\MobileController::delete_by_idsAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\ProductManagement\MobileController::delete_special_user_settingsAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\ProductManagement\MobileController::editAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\ProductManagement\MobileController::indexAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\ProductManagement\MobileController::save_special_user_settingsAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\ProductManagement\MobileController::scheduled_price_changesAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\ProductManagement\MobileController::special_user_settingsAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\ProductManagement\MobileController::update_group_attributesAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\ProductManagement\MobileController::update_product_source_settingsAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\ProductManagement\PhoneNumberAttributionController::deleteAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\ProductManagement\PhoneNumberAttributionController::indexAction" type="service" id=".service_locator.aOeuIsd"/>
        <argument key="App\Admin\Controller\ProductManagement\PhoneNumberAttributionController::saveAction" type="service" id=".service_locator.dGFoWrl"/>
        <argument key="App\Admin\Controller\ProductManagement\RegionController::city_picker_dataAction" type="service" id=".service_locator.03MCyGN"/>
        <argument key="App\Admin\Controller\ProductManagement\RegionController::deleteAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\ProductManagement\RegionController::indexAction" type="service" id=".service_locator.q5pzBQS"/>
        <argument key="App\Admin\Controller\ProductManagement\RegionController::saveAction" type="service" id=".service_locator.I8.e3sZ"/>
        <argument key="App\Admin\Controller\ProductManagement\SourceGroupController::delete_product_sourcesAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\ProductManagement\SourceGroupController::groupsOfProductAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\ProductManagement\SourceGroupController::indexAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\ProductManagement\SourceGroupController::update_product_source_enable_statusAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\ProductManagement\SourceGroupController::update_product_source_review_statusAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\ProductManagement\SourceGroupController::update_source_group_statusAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\ProductManagement\SourceGroupController::update_source_priceAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\ProductManagement\SourceGroupController::update_source_statusAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\ProductManagement\SourceGroupController::update_supplier_account_statusAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\ProductManagement\SpecialUserSettingController::delete_special_user_settingsAction" type="service" id=".service_locator.HHT5or7"/>
        <argument key="App\Admin\Controller\ProductManagement\SpecialUserSettingController::save_special_user_settingsAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\ProductManagement\SpecialUserSettingController::special_user_settingsAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\ProductManagement\TelephoneController::addStep1Action" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\ProductManagement\TelephoneController::addStep2Action" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\ProductManagement\TelephoneController::batch_update_attributesAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\ProductManagement\TelephoneController::delete_by_idsAction" type="service" id=".service_locator.HHT5or7"/>
        <argument key="App\Admin\Controller\ProductManagement\TelephoneController::delete_special_user_settingsAction" type="service" id=".service_locator.HHT5or7"/>
        <argument key="App\Admin\Controller\ProductManagement\TelephoneController::editAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\ProductManagement\TelephoneController::indexAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\ProductManagement\TelephoneController::save_special_user_settingsAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\ProductManagement\TelephoneController::scheduled_price_changesAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\ProductManagement\TelephoneController::special_user_settingsAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\ProductManagement\TelephoneController::update_group_attributesAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\ProductManagement\TelephoneController::update_product_source_settingsAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\ProductManagement\TencentController::addStep1Action" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\ProductManagement\TencentController::addStep2Action" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\ProductManagement\TencentController::batch_update_attributesAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\ProductManagement\TencentController::delete_by_idsAction" type="service" id=".service_locator.HHT5or7"/>
        <argument key="App\Admin\Controller\ProductManagement\TencentController::delete_special_user_settingsAction" type="service" id=".service_locator.HHT5or7"/>
        <argument key="App\Admin\Controller\ProductManagement\TencentController::editAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\ProductManagement\TencentController::indexAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\ProductManagement\TencentController::save_special_user_settingsAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\ProductManagement\TencentController::scheduled_price_changesAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\ProductManagement\TencentController::special_user_settingsAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\ProductManagement\TencentController::update_group_attributesAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\ProductManagement\TencentController::update_product_source_settingsAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\ProductManagement\TencentProductCategoryController::deleteAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\ProductManagement\TencentProductCategoryController::indexAction" type="service" id=".service_locator.7x2N.kf"/>
        <argument key="App\Admin\Controller\ProductManagement\TencentProductCategoryController::saveAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\ProductManagement\VirtualNetworkOperatorController::deleteAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\ProductManagement\VirtualNetworkOperatorController::indexAction" type="service" id=".service_locator.0f.Pp24"/>
        <argument key="App\Admin\Controller\ProductManagement\VirtualNetworkOperatorController::saveAction" type="service" id=".service_locator.qioiIMI"/>
        <argument key="App\Admin\Controller\ProfileController::changePasswordAction" type="service" id=".service_locator.b49cuD8"/>
        <argument key="App\Admin\Controller\SystemAdministration\AdministratorController::administratorsAction" type="service" id=".service_locator.0K3xZet"/>
        <argument key="App\Admin\Controller\SystemAdministration\AdministratorController::deleteAction" type="service" id=".service_locator.73roCKf"/>
        <argument key="App\Admin\Controller\SystemAdministration\AdministratorController::saveUserAction" type="service" id=".service_locator.RHwpfox"/>
        <argument key="App\Admin\Controller\SystemAdministration\ArticleCategoryController::deleteCategoryAction" type="service" id=".service_locator.TIrOq8w"/>
        <argument key="App\Admin\Controller\SystemAdministration\ArticleCategoryController::saveAction" type="service" id=".service_locator.73roCKf"/>
        <argument key="App\Admin\Controller\SystemAdministration\ArticleController::deleteAction" type="service" id=".service_locator.TIrOq8w"/>
        <argument key="App\Admin\Controller\SystemAdministration\ArticleController::editAction" type="service" id=".service_locator.Eu1D_g1"/>
        <argument key="App\Admin\Controller\SystemAdministration\ArticleController::indexAction" type="service" id=".service_locator.XfmG6yy"/>
        <argument key="App\Admin\Controller\SystemAdministration\ArticleController::saveAction" type="service" id=".service_locator.te4BFWu"/>
        <argument key="App\Admin\Controller\SystemAdministration\LoggingController::admin_operation_logsAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\SystemAdministration\SystemSettingController::editAction" type="service" id=".service_locator.ErQKBbM"/>
        <argument key="App\Admin\Controller\SystemAdministration\SystemSettingController::saveAction" type="service" id=".service_locator.ErQKBbM"/>
        <argument key="App\Admin\Controller\UserController::PassManagementAction" type="service" id=".service_locator.LxTyTgl"/>
        <argument key="App\Admin\Controller\UserController::accountStatusLogAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\UserController::addPriceGroupAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\UserController::addServiceGroupAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\UserController::ajaxLevelAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\UserController::editPriceGroupAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\UserController::editServiceGroupAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\UserController::getAgentAccountAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\UserController::getSupplierAccountAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\UserController::levelAddAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\UserController::levelEditAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\UserController::openAccountLogAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\UserController::serviceGroupAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\UserController::setPriceGroupAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\UserDetail\MainController::operationLogsAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\UserDetail\MainController::realNameInfoHistoryAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\UserDetail\OpenPlatformController::ajaxChargeLogsAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\UserDetail\OpenPlatformController::ajaxFinanceDetailAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\UserDetail\OpenPlatformController::ajaxOperationLogsAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\UserDetail\OpenPlatformController::ajaxOrdersAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\UserDetail\OpenPlatformController::ajaxRequestLogsAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\UserDetail\OpenPlatformController::ajaxTradeLogsAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\UserDetail\OpenPlatformController::appsAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\UserDetail\OpenPlatformController::servicesAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\UserDetail\ResellerPlatformController::ajaxChargeLogsAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\UserDetail\ResellerPlatformController::ajaxExtensionAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\UserDetail\ResellerPlatformController::ajaxFinanceDetailAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\UserDetail\ResellerPlatformController::ajaxOperationLogsAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\UserDetail\ResellerPlatformController::ajaxOrdersAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\UserDetail\ResellerPlatformController::ajaxTradeLogs" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\UserDetail\SupplierPlatformController::ajaxChargeLogsAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\UserDetail\SupplierPlatformController::ajaxFinanceDetailAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\UserDetail\SupplierPlatformController::ajaxOperationLogsAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\UserDetail\SupplierPlatformController::ajaxOrdersAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\UserDetail\SupplierPlatformController::ajaxTradeLogs" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\UserSubAccountLevelController::indexAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\UserSubAccountLevelController::saveAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Common\Controller\ArticleController::indexAction" type="service" id=".service_locator.XfmG6yy"/>
        <argument key="App\Common\Controller\ArticleController::jsonAction" type="service" id=".service_locator.XfmG6yy"/>
        <argument key="App\Common\Controller\FileUploadController::deleteAction" type="service" id=".service_locator.pqb1G1K"/>
        <argument key="App\Common\Controller\Finance\BalanceController::addBalanceViaAlipayNotifyAction" type="service" id=".service_locator.NhBd0iO"/>
        <argument key="App\Common\Controller\Finance\BalanceController::addBalanceViaAlipayOnlinePaymentAction" type="service" id=".service_locator.IWWOp.J"/>
        <argument key="App\Common\Controller\Finance\BalanceController::addBalanceViaAlipayReturnAction" type="service" id=".service_locator.NhBd0iO"/>
        <argument key="App\Common\Controller\Finance\BalanceController::addBalanceViaAlipayTransferAction" type="service" id=".service_locator.NhBd0iO"/>
        <argument key="App\Common\Controller\Finance\BalanceController::submitAlipayOrderAndGotoCashierAction" type="service" id=".service_locator.IWWOp.J"/>
        <argument key="App\Common\Controller\FrontpageController::indexAction" type="service" id=".service_locator.DmTkD_n"/>
        <argument key="App\Common\Controller\RecaptchaController::indexAction" type="service" id=".service_locator.0i4fG.5"/>
        <argument key="App\Common\Controller\SmsVerifierController::sendSmsAction" type="service" id=".service_locator.dlf6qch"/>
        <argument key="App\Common\Controller\SmsVerifierController::sendVerifyCodeByEmailAction" type="service" id=".service_locator.SvuyVJk"/>
        <argument key="App\Open\Controller\DashboardController::announcementsAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Open\Controller\DashboardController::operationLogsAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Open\Controller\DashboardController::userInfoAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Open\Controller\FrontpageController::indexAction" type="service" id=".service_locator.DmTkD_n"/>
        <argument key="App\Passport\Controller\HomeController::indexAction" type="service" id=".service_locator.1n6P8pO"/>
        <argument key="App\Passport\Controller\HomeController::ipQueryAction" type="service" id=".service_locator.vDjLN1k"/>
        <argument key="App\Passport\Controller\IdentityManagementController::businessSubmitAction" type="service" id=".service_locator._8rcJjt"/>
        <argument key="App\Passport\Controller\IdentityManagementController::individualSubmitAction" type="service" id=".service_locator.iO4b0nm"/>
        <argument key="App\Passport\Controller\LoginController::loginAction" type="service" id=".service_locator.DmTkD_n"/>
        <argument key="App\Passport\Controller\PasswordResetController::indexAction" type="service" id=".service_locator.0i4fG.5"/>
        <argument key="App\Passport\Controller\RegisterController::businessAction" type="service" id=".service_locator.7fGS9UX"/>
        <argument key="App\Passport\Controller\RegisterController::checkAction" type="service" id=".service_locator.j6FKjiR"/>
        <argument key="App\Passport\Controller\RegisterController::checkEmailAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Passport\Controller\RegisterController::individualAction" type="service" id=".service_locator.j6FKjiR"/>
        <argument key="App\Passport\Controller\RegisterController::resendActivationEmailAction" type="service" id=".service_locator.AGu6.j5"/>
        <argument key="App\Passport\Controller\SafeCenterController::sendEmailVerifyAction" type="service" id=".service_locator.zfGyZlZ"/>
        <argument key="App\Passport\Controller\SafeCenterController::sendMobileVerifyAction" type="service" id=".service_locator.9PjmJGW"/>
        <argument key="App\Passport\Controller\SafeCenterController::sendUserEmailVerifyAction" type="service" id=".service_locator.zfGyZlZ"/>
        <argument key="App\Passport\Controller\SafeCenterController::sendUserMobileVerifyAction" type="service" id=".service_locator.9PjmJGW"/>
        <argument key="App\Passport\Controller\UserController::contact_info_updateAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Passport\Controller\UserController::updateAction" type="service" id=".service_locator.iO4b0nm"/>
        <argument key="App\Reseller\Controller\DashboardController::operationLogsAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Reseller\Controller\FinanceController::checkUserAction" type="service" id=".service_locator.DLnyT36"/>
        <argument key="App\Reseller\Controller\FinanceController::exportTradeLogsAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Reseller\Controller\FinanceController::exportTransactionsAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Reseller\Controller\FinanceController::fundingLogsAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Reseller\Controller\FinanceController::fundingSummaryAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Reseller\Controller\FinanceController::rebateLogsAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Reseller\Controller\FinanceController::rebateLogsSummaryAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Reseller\Controller\FinanceController::tradeLogsAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Reseller\Controller\FinanceController::transactionSummaryAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Reseller\Controller\FinanceController::transactionsAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Reseller\Controller\FinanceController::transferAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Reseller\Controller\FinanceController::transferConfirmAction" type="service" id=".service_locator.e3F9ByC"/>
        <argument key="App\Reseller\Controller\FinanceController::withdrawAction" type="service" id=".service_locator.PDz3ypR"/>
        <argument key="App\Reseller\Controller\HomeController::announcementsAction" type="service" id=".service_locator.XfmG6yy"/>
        <argument key="App\Reseller\Controller\HomeController::faqsAction" type="service" id=".service_locator.XfmG6yy"/>
        <argument key="App\Reseller\Controller\HomeController::indexAction" type="service" id=".service_locator.3Qq53Xk"/>
        <argument key="App\Reseller\Controller\HomeController::recruitmentAction" type="service" id=".service_locator.XfmG6yy"/>
        <argument key="App\Reseller\Controller\OrderController::checkNumbersAndPrepareOrderAction" type="service" id=".service_locator.B0BYLu."/>
        <argument key="App\Reseller\Controller\OrderController::checkoutBatchOrder" type="service" id=".service_locator.Q.4qrO9"/>
        <argument key="App\Reseller\Controller\OrderController::checkoutOrderAction" type="service" id=".service_locator.jcyut7p"/>
        <argument key="App\Reseller\Controller\OrderController::exportAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Reseller\Controller\OrderController::indexAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Reseller\Controller\OrderController::listAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Reseller\Controller\OrderController::placeOrderAction" type="service" id=".service_locator.F.dW8Vu"/>
        <argument key="App\Reseller\Controller\PrinterSettingController::indexAction" type="service" id=".service_locator.2xjGnuA"/>
        <argument key="App\Reseller\Controller\PrinterSettingController::savePrintSettingsAction" type="service" id=".service_locator.2xjGnuA"/>
        <argument key="App\Reseller\Controller\ProductController::indexAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Reseller\Controller\RechargeController::availableProductsAction" type="service" id=".service_locator.UVyikea"/>
        <argument key="App\Reseller\Controller\RechargeController::numberInfoAction" type="service" id=".service_locator.CHOTxCK"/>
        <argument key="App\Reseller\Controller\UserController::contact_info_updateAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Supplier\Controller\DashboardController::announcementsAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Supplier\Controller\DashboardController::operationLogsAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Supplier\Controller\DashboardController::profileAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Supplier\Controller\FinanceController::addWithdrawAccountAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Supplier\Controller\FinanceController::addWithdrawAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Supplier\Controller\FinanceController::detailAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Supplier\Controller\FinanceController::tradeListAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Supplier\Controller\FinanceController::withdrawAccountAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Supplier\Controller\FinanceController::withdrawAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Supplier\Controller\HomeController::indexAction" type="service" id=".service_locator.DmTkD_n"/>
        <argument key="App\Supplier\Controller\OrdersController::editStatusSupAction" type="service" id=".service_locator.447XkUG"/>
        <argument key="App\Supplier\Controller\OrdersController::orderListAction" type="service" id=".service_locator.K1FCyS_"/>
        <argument key="App\Supplier\Controller\SourceGroupController::addNewProductAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Supplier\Controller\SourceGroupController::addTemplateAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Supplier\Controller\SourceGroupController::editTemplateAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Supplier\Controller\SourceGroupController::indexAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Supplier\Controller\SourceGroupController::productsListAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Supplier\Controller\UserController::contact_info_updateAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Supplier\Controller\UserController::updateAction" type="service" id=".service_locator.iO4b0nm"/>
        <argument key="App\Test\Controller\SimpleFormDemoController::showAction" type="service" id=".service_locator.5My5vxv"/>
        <argument key="App\Test\Controller\SimpleFormDemoController::submitAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Test\Controller\TestController::cacheAction" type="service" id=".service_locator.03MCyGN"/>
        <argument key="App\Test\Controller\TestController::csrfAction" type="service" id=".service_locator.kHm4B1b"/>
        <argument key="App\Test\Controller\TestController::form2Action" type="service" id=".service_locator.RZ6Wxtc"/>
        <argument key="App\Test\Controller\TestController::formAction" type="service" id=".service_locator..efTsB1"/>
        <argument key="App\Test\Controller\TestController::helloAction" type="service" id=".service_locator.v2jGrEb"/>
        <argument key="App\Test\Controller\TestController::phpinfoAction" type="service" id=".service_locator.AueRQUW"/>
        <argument key="App\Test\Controller\TestController::settings" type="service" id=".service_locator.iRSmm.3"/>
        <argument key="App\Test\Controller\TestController::zzAction" type="service" id=".service_locator.AueRQUW"/>
        <argument key="App\Admin\Controller\AuditController:accountApplicationAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\AuditController:accountReviewAction" type="service" id=".service_locator.0BwjP.V"/>
        <argument key="App\Admin\Controller\AuditController:delWithdrawAccountsAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\AuditController:identitiesAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\AuditController:identityReviewSubmitAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\AuditController:productSuppliesAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\AuditController:withdrawAccountsAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\AuditController:withdrawAccountsReviewAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\AuditController:withdrawsAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\FileUploadController:deleteAction" type="service" id=".service_locator.pqb1G1K"/>
        <argument key="App\Admin\Controller\LoginController:login" type="service" id=".service_locator.DmTkD_n"/>
        <argument key="App\Admin\Controller\OrderController:queryMobileBalanceLogsAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\OrderController:rechargeAction" type="service" id=".service_locator.K1FCyS_"/>
        <argument key="App\Admin\Controller\OrderController:rechargeAgainAction" type="service" id=".service_locator.WznNWr0"/>
        <argument key="App\Admin\Controller\OrderController:setFailureSupAction" type="service" id=".service_locator.WznNWr0"/>
        <argument key="App\Admin\Controller\OrderController:suppliersAction" type="service" id=".service_locator.K1FCyS_"/>
        <argument key="App\Admin\Controller\ProductManagement\AbstractSourceGroupController:delete_product_sourcesAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\ProductManagement\AbstractSourceGroupController:groupsOfProductAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\ProductManagement\AbstractSourceGroupController:indexAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\ProductManagement\AbstractSourceGroupController:update_product_source_enable_statusAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\ProductManagement\AbstractSourceGroupController:update_product_source_review_statusAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\ProductManagement\AbstractSourceGroupController:update_source_group_statusAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\ProductManagement\AbstractSourceGroupController:update_source_priceAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\ProductManagement\AbstractSourceGroupController:update_source_statusAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\ProductManagement\AbstractSourceGroupController:update_supplier_account_statusAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\ProductManagement\FlowController:addStep1Action" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\ProductManagement\FlowController:addStep2Action" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\ProductManagement\FlowController:batch_update_attributesAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\ProductManagement\FlowController:delete_by_idsAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\ProductManagement\FlowController:delete_special_user_settingsAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\ProductManagement\FlowController:editAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\ProductManagement\FlowController:indexAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\ProductManagement\FlowController:save_special_user_settingsAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\ProductManagement\FlowController:scheduled_price_changesAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\ProductManagement\FlowController:special_user_settingsAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\ProductManagement\FlowController:update_group_attributesAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\ProductManagement\FlowController:update_product_source_settingsAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\ProductManagement\MobileController:addStep1Action" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\ProductManagement\MobileController:addStep2Action" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\ProductManagement\MobileController:batch_update_attributesAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\ProductManagement\MobileController:delete_by_idsAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\ProductManagement\MobileController:delete_special_user_settingsAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\ProductManagement\MobileController:editAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\ProductManagement\MobileController:indexAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\ProductManagement\MobileController:save_special_user_settingsAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\ProductManagement\MobileController:scheduled_price_changesAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\ProductManagement\MobileController:special_user_settingsAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\ProductManagement\MobileController:update_group_attributesAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\ProductManagement\MobileController:update_product_source_settingsAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\ProductManagement\PhoneNumberAttributionController:deleteAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\ProductManagement\PhoneNumberAttributionController:indexAction" type="service" id=".service_locator.aOeuIsd"/>
        <argument key="App\Admin\Controller\ProductManagement\PhoneNumberAttributionController:saveAction" type="service" id=".service_locator.dGFoWrl"/>
        <argument key="App\Admin\Controller\ProductManagement\RegionController:city_picker_dataAction" type="service" id=".service_locator.03MCyGN"/>
        <argument key="App\Admin\Controller\ProductManagement\RegionController:deleteAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\ProductManagement\RegionController:indexAction" type="service" id=".service_locator.q5pzBQS"/>
        <argument key="App\Admin\Controller\ProductManagement\RegionController:saveAction" type="service" id=".service_locator.I8.e3sZ"/>
        <argument key="App\Admin\Controller\ProductManagement\SourceGroupController:delete_product_sourcesAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\ProductManagement\SourceGroupController:groupsOfProductAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\ProductManagement\SourceGroupController:indexAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\ProductManagement\SourceGroupController:update_product_source_enable_statusAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\ProductManagement\SourceGroupController:update_product_source_review_statusAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\ProductManagement\SourceGroupController:update_source_group_statusAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\ProductManagement\SourceGroupController:update_source_priceAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\ProductManagement\SourceGroupController:update_source_statusAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\ProductManagement\SourceGroupController:update_supplier_account_statusAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\ProductManagement\SpecialUserSettingController:delete_special_user_settingsAction" type="service" id=".service_locator.HHT5or7"/>
        <argument key="App\Admin\Controller\ProductManagement\SpecialUserSettingController:save_special_user_settingsAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\ProductManagement\SpecialUserSettingController:special_user_settingsAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\ProductManagement\TelephoneController:addStep1Action" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\ProductManagement\TelephoneController:addStep2Action" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\ProductManagement\TelephoneController:batch_update_attributesAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\ProductManagement\TelephoneController:delete_by_idsAction" type="service" id=".service_locator.HHT5or7"/>
        <argument key="App\Admin\Controller\ProductManagement\TelephoneController:delete_special_user_settingsAction" type="service" id=".service_locator.HHT5or7"/>
        <argument key="App\Admin\Controller\ProductManagement\TelephoneController:editAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\ProductManagement\TelephoneController:indexAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\ProductManagement\TelephoneController:save_special_user_settingsAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\ProductManagement\TelephoneController:scheduled_price_changesAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\ProductManagement\TelephoneController:special_user_settingsAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\ProductManagement\TelephoneController:update_group_attributesAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\ProductManagement\TelephoneController:update_product_source_settingsAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\ProductManagement\TencentController:addStep1Action" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\ProductManagement\TencentController:addStep2Action" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\ProductManagement\TencentController:batch_update_attributesAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\ProductManagement\TencentController:delete_by_idsAction" type="service" id=".service_locator.HHT5or7"/>
        <argument key="App\Admin\Controller\ProductManagement\TencentController:delete_special_user_settingsAction" type="service" id=".service_locator.HHT5or7"/>
        <argument key="App\Admin\Controller\ProductManagement\TencentController:editAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\ProductManagement\TencentController:indexAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\ProductManagement\TencentController:save_special_user_settingsAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\ProductManagement\TencentController:scheduled_price_changesAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\ProductManagement\TencentController:special_user_settingsAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\ProductManagement\TencentController:update_group_attributesAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\ProductManagement\TencentController:update_product_source_settingsAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\ProductManagement\TencentProductCategoryController:deleteAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\ProductManagement\TencentProductCategoryController:indexAction" type="service" id=".service_locator.7x2N.kf"/>
        <argument key="App\Admin\Controller\ProductManagement\TencentProductCategoryController:saveAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\ProductManagement\VirtualNetworkOperatorController:deleteAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\ProductManagement\VirtualNetworkOperatorController:indexAction" type="service" id=".service_locator.0f.Pp24"/>
        <argument key="App\Admin\Controller\ProductManagement\VirtualNetworkOperatorController:saveAction" type="service" id=".service_locator.qioiIMI"/>
        <argument key="App\Admin\Controller\ProfileController:changePasswordAction" type="service" id=".service_locator.b49cuD8"/>
        <argument key="App\Admin\Controller\SystemAdministration\AdministratorController:administratorsAction" type="service" id=".service_locator.0K3xZet"/>
        <argument key="App\Admin\Controller\SystemAdministration\AdministratorController:deleteAction" type="service" id=".service_locator.73roCKf"/>
        <argument key="App\Admin\Controller\SystemAdministration\AdministratorController:saveUserAction" type="service" id=".service_locator.RHwpfox"/>
        <argument key="App\Admin\Controller\SystemAdministration\ArticleCategoryController:deleteCategoryAction" type="service" id=".service_locator.TIrOq8w"/>
        <argument key="App\Admin\Controller\SystemAdministration\ArticleCategoryController:saveAction" type="service" id=".service_locator.73roCKf"/>
        <argument key="App\Admin\Controller\SystemAdministration\ArticleController:deleteAction" type="service" id=".service_locator.TIrOq8w"/>
        <argument key="App\Admin\Controller\SystemAdministration\ArticleController:editAction" type="service" id=".service_locator.Eu1D_g1"/>
        <argument key="App\Admin\Controller\SystemAdministration\ArticleController:indexAction" type="service" id=".service_locator.XfmG6yy"/>
        <argument key="App\Admin\Controller\SystemAdministration\ArticleController:saveAction" type="service" id=".service_locator.te4BFWu"/>
        <argument key="App\Admin\Controller\SystemAdministration\LoggingController:admin_operation_logsAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\SystemAdministration\SystemSettingController:editAction" type="service" id=".service_locator.ErQKBbM"/>
        <argument key="App\Admin\Controller\SystemAdministration\SystemSettingController:saveAction" type="service" id=".service_locator.ErQKBbM"/>
        <argument key="App\Admin\Controller\UserController:PassManagementAction" type="service" id=".service_locator.LxTyTgl"/>
        <argument key="App\Admin\Controller\UserController:accountStatusLogAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\UserController:addPriceGroupAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\UserController:addServiceGroupAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\UserController:ajaxLevelAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\UserController:editPriceGroupAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\UserController:editServiceGroupAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\UserController:getAgentAccountAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\UserController:getSupplierAccountAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\UserController:levelAddAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\UserController:levelEditAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\UserController:openAccountLogAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\UserController:serviceGroupAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\UserController:setPriceGroupAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\UserDetail\MainController:operationLogsAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\UserDetail\MainController:realNameInfoHistoryAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\UserDetail\OpenPlatformController:ajaxChargeLogsAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\UserDetail\OpenPlatformController:ajaxFinanceDetailAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\UserDetail\OpenPlatformController:ajaxOperationLogsAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\UserDetail\OpenPlatformController:ajaxOrdersAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\UserDetail\OpenPlatformController:ajaxRequestLogsAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\UserDetail\OpenPlatformController:ajaxTradeLogsAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\UserDetail\OpenPlatformController:appsAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\UserDetail\OpenPlatformController:servicesAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\UserDetail\ResellerPlatformController:ajaxChargeLogsAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\UserDetail\ResellerPlatformController:ajaxExtensionAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\UserDetail\ResellerPlatformController:ajaxFinanceDetailAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\UserDetail\ResellerPlatformController:ajaxOperationLogsAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\UserDetail\ResellerPlatformController:ajaxOrdersAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\UserDetail\ResellerPlatformController:ajaxTradeLogs" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\UserDetail\SupplierPlatformController:ajaxChargeLogsAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\UserDetail\SupplierPlatformController:ajaxFinanceDetailAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\UserDetail\SupplierPlatformController:ajaxOperationLogsAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\UserDetail\SupplierPlatformController:ajaxOrdersAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\UserDetail\SupplierPlatformController:ajaxTradeLogs" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\UserSubAccountLevelController:indexAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Admin\Controller\UserSubAccountLevelController:saveAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Common\Controller\ArticleController:indexAction" type="service" id=".service_locator.XfmG6yy"/>
        <argument key="App\Common\Controller\ArticleController:jsonAction" type="service" id=".service_locator.XfmG6yy"/>
        <argument key="App\Common\Controller\FileUploadController:deleteAction" type="service" id=".service_locator.pqb1G1K"/>
        <argument key="App\Common\Controller\Finance\BalanceController:addBalanceViaAlipayNotifyAction" type="service" id=".service_locator.NhBd0iO"/>
        <argument key="App\Common\Controller\Finance\BalanceController:addBalanceViaAlipayOnlinePaymentAction" type="service" id=".service_locator.IWWOp.J"/>
        <argument key="App\Common\Controller\Finance\BalanceController:addBalanceViaAlipayReturnAction" type="service" id=".service_locator.NhBd0iO"/>
        <argument key="App\Common\Controller\Finance\BalanceController:addBalanceViaAlipayTransferAction" type="service" id=".service_locator.NhBd0iO"/>
        <argument key="App\Common\Controller\Finance\BalanceController:submitAlipayOrderAndGotoCashierAction" type="service" id=".service_locator.IWWOp.J"/>
        <argument key="App\Common\Controller\FrontpageController:indexAction" type="service" id=".service_locator.DmTkD_n"/>
        <argument key="App\Common\Controller\RecaptchaController:indexAction" type="service" id=".service_locator.0i4fG.5"/>
        <argument key="App\Common\Controller\SmsVerifierController:sendSmsAction" type="service" id=".service_locator.dlf6qch"/>
        <argument key="App\Common\Controller\SmsVerifierController:sendVerifyCodeByEmailAction" type="service" id=".service_locator.SvuyVJk"/>
        <argument key="App\Open\Controller\DashboardController:announcementsAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Open\Controller\DashboardController:operationLogsAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Open\Controller\DashboardController:userInfoAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Open\Controller\FrontpageController:indexAction" type="service" id=".service_locator.DmTkD_n"/>
        <argument key="App\Passport\Controller\HomeController:indexAction" type="service" id=".service_locator.1n6P8pO"/>
        <argument key="App\Passport\Controller\HomeController:ipQueryAction" type="service" id=".service_locator.vDjLN1k"/>
        <argument key="App\Passport\Controller\IdentityManagementController:businessSubmitAction" type="service" id=".service_locator._8rcJjt"/>
        <argument key="App\Passport\Controller\IdentityManagementController:individualSubmitAction" type="service" id=".service_locator.iO4b0nm"/>
        <argument key="App\Passport\Controller\LoginController:loginAction" type="service" id=".service_locator.DmTkD_n"/>
        <argument key="App\Passport\Controller\PasswordResetController:indexAction" type="service" id=".service_locator.0i4fG.5"/>
        <argument key="App\Passport\Controller\RegisterController:businessAction" type="service" id=".service_locator.7fGS9UX"/>
        <argument key="App\Passport\Controller\RegisterController:checkAction" type="service" id=".service_locator.j6FKjiR"/>
        <argument key="App\Passport\Controller\RegisterController:checkEmailAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Passport\Controller\RegisterController:individualAction" type="service" id=".service_locator.j6FKjiR"/>
        <argument key="App\Passport\Controller\RegisterController:resendActivationEmailAction" type="service" id=".service_locator.AGu6.j5"/>
        <argument key="App\Passport\Controller\SafeCenterController:sendEmailVerifyAction" type="service" id=".service_locator.zfGyZlZ"/>
        <argument key="App\Passport\Controller\SafeCenterController:sendMobileVerifyAction" type="service" id=".service_locator.9PjmJGW"/>
        <argument key="App\Passport\Controller\SafeCenterController:sendUserEmailVerifyAction" type="service" id=".service_locator.zfGyZlZ"/>
        <argument key="App\Passport\Controller\SafeCenterController:sendUserMobileVerifyAction" type="service" id=".service_locator.9PjmJGW"/>
        <argument key="App\Passport\Controller\UserController:contact_info_updateAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Passport\Controller\UserController:updateAction" type="service" id=".service_locator.iO4b0nm"/>
        <argument key="App\Reseller\Controller\DashboardController:operationLogsAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Reseller\Controller\FinanceController:checkUserAction" type="service" id=".service_locator.DLnyT36"/>
        <argument key="App\Reseller\Controller\FinanceController:exportTradeLogsAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Reseller\Controller\FinanceController:exportTransactionsAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Reseller\Controller\FinanceController:fundingLogsAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Reseller\Controller\FinanceController:fundingSummaryAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Reseller\Controller\FinanceController:rebateLogsAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Reseller\Controller\FinanceController:rebateLogsSummaryAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Reseller\Controller\FinanceController:tradeLogsAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Reseller\Controller\FinanceController:transactionSummaryAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Reseller\Controller\FinanceController:transactionsAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Reseller\Controller\FinanceController:transferAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Reseller\Controller\FinanceController:transferConfirmAction" type="service" id=".service_locator.e3F9ByC"/>
        <argument key="App\Reseller\Controller\FinanceController:withdrawAction" type="service" id=".service_locator.PDz3ypR"/>
        <argument key="App\Reseller\Controller\HomeController:announcementsAction" type="service" id=".service_locator.XfmG6yy"/>
        <argument key="App\Reseller\Controller\HomeController:faqsAction" type="service" id=".service_locator.XfmG6yy"/>
        <argument key="App\Reseller\Controller\HomeController:indexAction" type="service" id=".service_locator.3Qq53Xk"/>
        <argument key="App\Reseller\Controller\HomeController:recruitmentAction" type="service" id=".service_locator.XfmG6yy"/>
        <argument key="App\Reseller\Controller\OrderController:checkNumbersAndPrepareOrderAction" type="service" id=".service_locator.B0BYLu."/>
        <argument key="App\Reseller\Controller\OrderController:checkoutBatchOrder" type="service" id=".service_locator.Q.4qrO9"/>
        <argument key="App\Reseller\Controller\OrderController:checkoutOrderAction" type="service" id=".service_locator.jcyut7p"/>
        <argument key="App\Reseller\Controller\OrderController:exportAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Reseller\Controller\OrderController:indexAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Reseller\Controller\OrderController:listAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Reseller\Controller\OrderController:placeOrderAction" type="service" id=".service_locator.F.dW8Vu"/>
        <argument key="App\Reseller\Controller\PrinterSettingController:indexAction" type="service" id=".service_locator.2xjGnuA"/>
        <argument key="App\Reseller\Controller\PrinterSettingController:savePrintSettingsAction" type="service" id=".service_locator.2xjGnuA"/>
        <argument key="App\Reseller\Controller\ProductController:indexAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Reseller\Controller\RechargeController:availableProductsAction" type="service" id=".service_locator.UVyikea"/>
        <argument key="App\Reseller\Controller\RechargeController:numberInfoAction" type="service" id=".service_locator.CHOTxCK"/>
        <argument key="App\Reseller\Controller\UserController:contact_info_updateAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Supplier\Controller\DashboardController:announcementsAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Supplier\Controller\DashboardController:operationLogsAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Supplier\Controller\DashboardController:profileAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Supplier\Controller\FinanceController:addWithdrawAccountAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Supplier\Controller\FinanceController:addWithdrawAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Supplier\Controller\FinanceController:detailAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Supplier\Controller\FinanceController:tradeListAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Supplier\Controller\FinanceController:withdrawAccountAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Supplier\Controller\FinanceController:withdrawAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Supplier\Controller\HomeController:indexAction" type="service" id=".service_locator.DmTkD_n"/>
        <argument key="App\Supplier\Controller\OrdersController:editStatusSupAction" type="service" id=".service_locator.447XkUG"/>
        <argument key="App\Supplier\Controller\OrdersController:orderListAction" type="service" id=".service_locator.K1FCyS_"/>
        <argument key="App\Supplier\Controller\SourceGroupController:addNewProductAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Supplier\Controller\SourceGroupController:addTemplateAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Supplier\Controller\SourceGroupController:editTemplateAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Supplier\Controller\SourceGroupController:indexAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Supplier\Controller\SourceGroupController:productsListAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Supplier\Controller\UserController:contact_info_updateAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Supplier\Controller\UserController:updateAction" type="service" id=".service_locator.iO4b0nm"/>
        <argument key="App\Test\Controller\SimpleFormDemoController:showAction" type="service" id=".service_locator.5My5vxv"/>
        <argument key="App\Test\Controller\SimpleFormDemoController:submitAction" type="service" id=".service_locator.1LBo7D5"/>
        <argument key="App\Test\Controller\TestController:cacheAction" type="service" id=".service_locator.03MCyGN"/>
        <argument key="App\Test\Controller\TestController:csrfAction" type="service" id=".service_locator.kHm4B1b"/>
        <argument key="App\Test\Controller\TestController:form2Action" type="service" id=".service_locator.RZ6Wxtc"/>
        <argument key="App\Test\Controller\TestController:formAction" type="service" id=".service_locator..efTsB1"/>
        <argument key="App\Test\Controller\TestController:helloAction" type="service" id=".service_locator.v2jGrEb"/>
        <argument key="App\Test\Controller\TestController:phpinfoAction" type="service" id=".service_locator.AueRQUW"/>
        <argument key="App\Test\Controller\TestController:settings" type="service" id=".service_locator.iRSmm.3"/>
        <argument key="App\Test\Controller\TestController:zzAction" type="service" id=".service_locator.AueRQUW"/>
      </argument>
    </service>
    <service id=".service_locator.yQVjGlt" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="translation.loader.csv" type="service" id="translation.loader.csv"/>
        <argument key="translation.loader.dat" type="service" id="translation.loader.dat"/>
        <argument key="translation.loader.ini" type="service" id="translation.loader.ini"/>
        <argument key="translation.loader.json" type="service" id="translation.loader.json"/>
        <argument key="translation.loader.mo" type="service" id="translation.loader.mo"/>
        <argument key="translation.loader.php" type="service" id="translation.loader.php"/>
        <argument key="translation.loader.po" type="service" id="translation.loader.po"/>
        <argument key="translation.loader.qt" type="service" id="translation.loader.qt"/>
        <argument key="translation.loader.res" type="service" id="translation.loader.res"/>
        <argument key="translation.loader.xliff" type="service" id="translation.loader.xliff"/>
        <argument key="translation.loader.yml" type="service" id="translation.loader.yml"/>
      </argument>
    </service>
    <service id=".service_locator.fE9i0Cx" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="esi" type="service" id="fragment.renderer.esi"/>
        <argument key="inline" type="service" id="fragment.renderer.inline"/>
      </argument>
    </service>
    <service id="debug.argument_resolver.request_attribute" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <tag name="controller.argument_value_resolver" priority="100"/>
      <argument type="service" id="debug.argument_resolver.request_attribute.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.argument_resolver.request" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <tag name="controller.argument_value_resolver" priority="50"/>
      <argument type="service" id="debug.argument_resolver.request.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.argument_resolver.session" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <tag name="controller.argument_value_resolver" priority="50"/>
      <argument type="service" id="debug.argument_resolver.session.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.security.user_value_resolver" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <tag name="controller.argument_value_resolver" priority="40"/>
      <argument type="service" id="debug.security.user_value_resolver.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.argument_resolver.service" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <tag name="controller.argument_value_resolver" priority="-50"/>
      <argument type="service" id="debug.argument_resolver.service.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.argument_resolver.default" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <tag name="controller.argument_value_resolver" priority="-100"/>
      <argument type="service" id="debug.argument_resolver.default.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.argument_resolver.variadic" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <tag name="controller.argument_value_resolver" priority="-150"/>
      <argument type="service" id="debug.argument_resolver.variadic.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.security.voter.security.access.authenticated_voter" class="Symfony\Component\Security\Core\Authorization\Voter\TraceableVoter">
      <tag name="security.voter" priority="250"/>
      <argument type="service" id="debug.security.voter.security.access.authenticated_voter.inner"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="debug.security.voter.security.access.role_hierarchy_voter" class="Symfony\Component\Security\Core\Authorization\Voter\TraceableVoter">
      <tag name="security.voter" priority="245"/>
      <argument type="service" id="debug.security.voter.security.access.role_hierarchy_voter.inner"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="security.logout.handler.csrf_token_clearing" class="Symfony\Component\Security\Http\Logout\CsrfTokenClearingLogoutHandler" public="false">
      <argument type="service" id="security.csrf.token_storage"/>
    </service>
    <service id="monolog.logger.debug" class="Symfony\Bridge\Monolog\Logger">
      <argument>debug</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
    </service>
    <service id="monolog.logger.request" class="Symfony\Bridge\Monolog\Logger">
      <argument>request</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
    </service>
    <service id="monolog.logger.console" class="Symfony\Bridge\Monolog\Logger">
      <argument>console</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
    </service>
    <service id="monolog.logger.cache" class="Symfony\Bridge\Monolog\Logger">
      <argument>cache</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
    </service>
    <service id="monolog.logger.translation" class="Symfony\Bridge\Monolog\Logger">
      <argument>translation</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
    </service>
    <service id="monolog.logger.php" class="Symfony\Bridge\Monolog\Logger">
      <argument>php</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
    </service>
    <service id="monolog.logger.event" class="Symfony\Bridge\Monolog\Logger">
      <argument>event</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.null_internal"/>
      </call>
    </service>
    <service id="monolog.logger.router" class="Symfony\Bridge\Monolog\Logger">
      <argument>router</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
    </service>
    <service id="monolog.logger.security" class="Symfony\Bridge\Monolog\Logger">
      <argument>security</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
    </service>
    <service id="monolog.handler.null_internal" class="Monolog\Handler\NullHandler"/>
    <service id=".service_locator.AoifO_3" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="initialized_session" type="service" id="session" on-invalid="ignore_uninitialized"/>
        <argument key="session" type="service" id="session" on-invalid="ignore"/>
      </argument>
    </service>
    <service id=".service_locator.jD4_ZG7" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="security.authorization_checker" type="service" id="security.authorization_checker"/>
        <argument key="security.token_storage" type="service" id="security.token_storage"/>
      </argument>
    </service>
    <service id="debug.event_dispatcher.inner" class="Symfony\Component\EventDispatcher\EventDispatcher" public="false"/>
    <service id="debug.controller_resolver.inner" class="Symfony\Bundle\FrameworkBundle\Controller\ControllerResolver" public="false">
      <argument type="service" id="service_container"/>
      <argument type="service" id="controller_name_converter"/>
      <argument type="service" id="monolog.logger.request" on-invalid="ignore"/>
    </service>
    <service id="debug.argument_resolver.inner" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver" public="false">
      <argument type="service" id="argument_metadata_factory"/>
      <argument type="iterator">
        <argument type="service" id="debug.argument_resolver.request_attribute"/>
        <argument type="service" id="debug.argument_resolver.request"/>
        <argument type="service" id="debug.argument_resolver.session"/>
        <argument type="service" id="debug.security.user_value_resolver"/>
        <argument type="service" id="debug.argument_resolver.service"/>
        <argument type="service" id="debug.argument_resolver.default"/>
        <argument type="service" id="debug.argument_resolver.variadic"/>
      </argument>
    </service>
    <service id="debug.security.access.decision_manager.inner" class="Symfony\Component\Security\Core\Authorization\AccessDecisionManager" public="false">
      <argument type="iterator">
        <argument type="service" id="debug.security.voter.security.access.authenticated_voter"/>
        <argument type="service" id="debug.security.voter.security.access.role_hierarchy_voter"/>
      </argument>
      <argument>affirmative</argument>
      <argument>false</argument>
      <argument>true</argument>
    </service>
    <service id="debug.argument_resolver.request_attribute.inner" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\RequestAttributeValueResolver" public="false"/>
    <service id="debug.argument_resolver.request.inner" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\RequestValueResolver" public="false"/>
    <service id="debug.argument_resolver.session.inner" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\SessionValueResolver" public="false"/>
    <service id="debug.security.user_value_resolver.inner" class="Symfony\Component\Security\Http\Controller\UserValueResolver" public="false">
      <argument type="service" id="security.token_storage"/>
    </service>
    <service id="debug.argument_resolver.service.inner" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\ServiceValueResolver" public="false">
      <argument type="service" id=".service_locator.h2m2aP."/>
    </service>
    <service id="debug.argument_resolver.default.inner" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\DefaultValueResolver" public="false"/>
    <service id="debug.argument_resolver.variadic.inner" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\VariadicValueResolver" public="false"/>
    <service id="debug.security.voter.security.access.authenticated_voter.inner" class="Symfony\Component\Security\Core\Authorization\Voter\AuthenticatedVoter" public="false">
      <argument type="service" id="security.authentication.trust_resolver"/>
    </service>
    <service id="debug.security.voter.security.access.role_hierarchy_voter.inner" class="Symfony\Component\Security\Core\Authorization\Voter\RoleHierarchyVoter" public="false">
      <argument type="service" id="security.role_hierarchy"/>
    </service>
    <service id=".service_locator.XCejSI_" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="App\Admin\Command\UpdateProductPriceCommand::adminLogMgr" type="service" id="App\Admin\Service\AdminOperatonLogManager" on-invalid="ignore"/>
        <argument key="App\Admin\Command\UpdateProductPriceCommand::logger" type="service" id="monolog.logger" on-invalid="ignore"/>
        <argument key="App\Admin\Command\UpdateProductPriceCommand::productFlowManager" type="service" id="App\Admin\Service\ProductFlowManager" on-invalid="ignore"/>
        <argument key="App\Admin\Command\UpdateProductPriceCommand::productMobileManager" type="service" id="App\Admin\Service\ProductMobileManager" on-invalid="ignore"/>
        <argument key="App\Admin\Command\UpdateProductPriceCommand::productTelephoneManager" type="service" id="App\Admin\Service\ProductTelephoneManager" on-invalid="ignore"/>
        <argument key="App\Admin\Command\UpdateProductPriceCommand::productTencentManager" type="service" id="App\Admin\Service\ProductTencentManager" on-invalid="ignore"/>
      </argument>
    </service>
    <service id=".service_locator.XCejSI_.App\Admin\Command\UpdateProductPriceCommand" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Admin\Command\UpdateProductPriceCommand"/>
      <argument>App\Admin\Command\UpdateProductPriceCommand</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.XCejSI_" method="withContext"/>
    </service>
    <service id=".service_locator.YUbLTjT" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="App\Admin\Controller\AdminBaseController::adminLogMgr" type="service" id="App\Admin\Service\AdminOperatonLogManager" on-invalid="ignore"/>
        <argument key="App\Common\Controller\BaseController::cache" type="service" id="cache.app.simple" on-invalid="ignore"/>
        <argument key="App\Common\Controller\BaseController::parameters" type="service" id="parameter_bag" on-invalid="ignore"/>
        <argument key="App\Common\Controller\BaseController::session" type="service" id="session" on-invalid="ignore"/>
        <argument key="App\Common\Controller\BaseController::settings" type="service" id="App\Common\Service\SystemSetting" on-invalid="ignore"/>
        <argument key="App\Common\Controller\BaseController::translator" type="service" id="translator.default" on-invalid="ignore"/>
        <argument key="http_kernel" type="service" id="http_kernel" on-invalid="ignore"/>
        <argument key="parameter_bag" type="service" id="parameter_bag" on-invalid="ignore"/>
        <argument key="request_stack" type="service" id="request_stack" on-invalid="ignore"/>
        <argument key="router" type="service" id="router.default" on-invalid="ignore"/>
        <argument key="security.authorization_checker" type="service" id="security.authorization_checker" on-invalid="ignore"/>
        <argument key="security.csrf.token_manager" type="service" id="security.csrf.token_manager" on-invalid="ignore"/>
        <argument key="security.token_storage" type="service" id="security.token_storage" on-invalid="ignore"/>
        <argument key="session" type="service" id="session" on-invalid="ignore"/>
        <argument key="twig" type="service" id="twig" on-invalid="ignore"/>
      </argument>
    </service>
    <service id=".service_locator.YUbLTjT.App\Admin\Controller\AdminBaseController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Admin\Controller\AdminBaseController"/>
      <argument>App\Admin\Controller\AdminBaseController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.YUbLTjT" method="withContext"/>
    </service>
    <service id=".service_locator.YUbLTjT.App\Admin\Controller\AuditController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Admin\Controller\AuditController"/>
      <argument>App\Admin\Controller\AuditController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.YUbLTjT" method="withContext"/>
    </service>
    <service id=".service_locator.YUbLTjT.App\Admin\Controller\DashboardController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Admin\Controller\DashboardController"/>
      <argument>App\Admin\Controller\DashboardController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.YUbLTjT" method="withContext"/>
    </service>
    <service id=".service_locator.0ACZ0gT" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="App\Common\Controller\BaseController::cache" type="service" id="cache.app.simple" on-invalid="ignore"/>
        <argument key="App\Common\Controller\BaseController::parameters" type="service" id="parameter_bag" on-invalid="ignore"/>
        <argument key="App\Common\Controller\BaseController::session" type="service" id="session" on-invalid="ignore"/>
        <argument key="App\Common\Controller\BaseController::settings" type="service" id="App\Common\Service\SystemSetting" on-invalid="ignore"/>
        <argument key="App\Common\Controller\BaseController::translator" type="service" id="translator.default" on-invalid="ignore"/>
        <argument key="http_kernel" type="service" id="http_kernel" on-invalid="ignore"/>
        <argument key="parameter_bag" type="service" id="parameter_bag" on-invalid="ignore"/>
        <argument key="request_stack" type="service" id="request_stack" on-invalid="ignore"/>
        <argument key="router" type="service" id="router.default" on-invalid="ignore"/>
        <argument key="security.authorization_checker" type="service" id="security.authorization_checker" on-invalid="ignore"/>
        <argument key="security.csrf.token_manager" type="service" id="security.csrf.token_manager" on-invalid="ignore"/>
        <argument key="security.token_storage" type="service" id="security.token_storage" on-invalid="ignore"/>
        <argument key="session" type="service" id="session" on-invalid="ignore"/>
        <argument key="twig" type="service" id="twig" on-invalid="ignore"/>
      </argument>
    </service>
    <service id=".service_locator.0ACZ0gT.App\Admin\Controller\FileUploadController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Admin\Controller\FileUploadController"/>
      <argument>App\Admin\Controller\FileUploadController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.0ACZ0gT" method="withContext"/>
    </service>
    <service id=".service_locator.YUbLTjT.App\Admin\Controller\FinanceController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Admin\Controller\FinanceController"/>
      <argument>App\Admin\Controller\FinanceController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.YUbLTjT" method="withContext"/>
    </service>
    <service id=".service_locator.YUbLTjT.App\Admin\Controller\FinancePaymentMethodController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Admin\Controller\FinancePaymentMethodController"/>
      <argument>App\Admin\Controller\FinancePaymentMethodController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.YUbLTjT" method="withContext"/>
    </service>
    <service id=".service_locator.YUbLTjT.App\Admin\Controller\FinanceWithdrawController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Admin\Controller\FinanceWithdrawController"/>
      <argument>App\Admin\Controller\FinanceWithdrawController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.YUbLTjT" method="withContext"/>
    </service>
    <service id=".service_locator.YUbLTjT.App\Admin\Controller\LoginController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Admin\Controller\LoginController"/>
      <argument>App\Admin\Controller\LoginController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.YUbLTjT" method="withContext"/>
    </service>
    <service id=".service_locator.YUbLTjT.App\Admin\Controller\NotifyMessageController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Admin\Controller\NotifyMessageController"/>
      <argument>App\Admin\Controller\NotifyMessageController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.YUbLTjT" method="withContext"/>
    </service>
    <service id=".service_locator.YUbLTjT.App\Admin\Controller\OrderController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Admin\Controller\OrderController"/>
      <argument>App\Admin\Controller\OrderController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.YUbLTjT" method="withContext"/>
    </service>
    <service id=".service_locator.YUbLTjT.App\Admin\Controller\PlugController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Admin\Controller\PlugController"/>
      <argument>App\Admin\Controller\PlugController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.YUbLTjT" method="withContext"/>
    </service>
    <service id=".service_locator.YUbLTjT.App\Admin\Controller\ProductManagement\AbstractSourceGroupController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Admin\Controller\ProductManagement\AbstractSourceGroupController"/>
      <argument>App\Admin\Controller\ProductManagement\AbstractSourceGroupController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.YUbLTjT" method="withContext"/>
    </service>
    <service id=".service_locator.iKXEuAo" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="App\Admin\Controller\AdminBaseController::adminLogMgr" type="service" id="App\Admin\Service\AdminOperatonLogManager" on-invalid="ignore"/>
        <argument key="App\Admin\Controller\ProductManagement\FlowController::productManager" type="service" id="App\Admin\Service\ProductFlowManager" on-invalid="ignore"/>
        <argument key="App\Common\Controller\BaseController::cache" type="service" id="cache.app.simple" on-invalid="ignore"/>
        <argument key="App\Common\Controller\BaseController::parameters" type="service" id="parameter_bag" on-invalid="ignore"/>
        <argument key="App\Common\Controller\BaseController::session" type="service" id="session" on-invalid="ignore"/>
        <argument key="App\Common\Controller\BaseController::settings" type="service" id="App\Common\Service\SystemSetting" on-invalid="ignore"/>
        <argument key="App\Common\Controller\BaseController::translator" type="service" id="translator.default" on-invalid="ignore"/>
        <argument key="http_kernel" type="service" id="http_kernel" on-invalid="ignore"/>
        <argument key="parameter_bag" type="service" id="parameter_bag" on-invalid="ignore"/>
        <argument key="request_stack" type="service" id="request_stack" on-invalid="ignore"/>
        <argument key="router" type="service" id="router.default" on-invalid="ignore"/>
        <argument key="security.authorization_checker" type="service" id="security.authorization_checker" on-invalid="ignore"/>
        <argument key="security.csrf.token_manager" type="service" id="security.csrf.token_manager" on-invalid="ignore"/>
        <argument key="security.token_storage" type="service" id="security.token_storage" on-invalid="ignore"/>
        <argument key="session" type="service" id="session" on-invalid="ignore"/>
        <argument key="twig" type="service" id="twig" on-invalid="ignore"/>
      </argument>
    </service>
    <service id=".service_locator.iKXEuAo.App\Admin\Controller\ProductManagement\FlowController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Admin\Controller\ProductManagement\FlowController"/>
      <argument>App\Admin\Controller\ProductManagement\FlowController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.iKXEuAo" method="withContext"/>
    </service>
    <service id=".service_locator.ygItHSn" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="App\Admin\Controller\AdminBaseController::adminLogMgr" type="service" id="App\Admin\Service\AdminOperatonLogManager" on-invalid="ignore"/>
        <argument key="App\Admin\Controller\ProductManagement\MobileController::productManager" type="service" id="App\Admin\Service\ProductMobileManager" on-invalid="ignore"/>
        <argument key="App\Common\Controller\BaseController::cache" type="service" id="cache.app.simple" on-invalid="ignore"/>
        <argument key="App\Common\Controller\BaseController::parameters" type="service" id="parameter_bag" on-invalid="ignore"/>
        <argument key="App\Common\Controller\BaseController::session" type="service" id="session" on-invalid="ignore"/>
        <argument key="App\Common\Controller\BaseController::settings" type="service" id="App\Common\Service\SystemSetting" on-invalid="ignore"/>
        <argument key="App\Common\Controller\BaseController::translator" type="service" id="translator.default" on-invalid="ignore"/>
        <argument key="http_kernel" type="service" id="http_kernel" on-invalid="ignore"/>
        <argument key="parameter_bag" type="service" id="parameter_bag" on-invalid="ignore"/>
        <argument key="request_stack" type="service" id="request_stack" on-invalid="ignore"/>
        <argument key="router" type="service" id="router.default" on-invalid="ignore"/>
        <argument key="security.authorization_checker" type="service" id="security.authorization_checker" on-invalid="ignore"/>
        <argument key="security.csrf.token_manager" type="service" id="security.csrf.token_manager" on-invalid="ignore"/>
        <argument key="security.token_storage" type="service" id="security.token_storage" on-invalid="ignore"/>
        <argument key="session" type="service" id="session" on-invalid="ignore"/>
        <argument key="twig" type="service" id="twig" on-invalid="ignore"/>
      </argument>
    </service>
    <service id=".service_locator.ygItHSn.App\Admin\Controller\ProductManagement\MobileController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Admin\Controller\ProductManagement\MobileController"/>
      <argument>App\Admin\Controller\ProductManagement\MobileController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.ygItHSn" method="withContext"/>
    </service>
    <service id=".service_locator.0ACZ0gT.App\Admin\Controller\ProductManagement\PhoneNumberAttributionController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Admin\Controller\ProductManagement\PhoneNumberAttributionController"/>
      <argument>App\Admin\Controller\ProductManagement\PhoneNumberAttributionController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.0ACZ0gT" method="withContext"/>
    </service>
    <service id=".service_locator.0ACZ0gT.App\Admin\Controller\ProductManagement\RegionController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Admin\Controller\ProductManagement\RegionController"/>
      <argument>App\Admin\Controller\ProductManagement\RegionController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.0ACZ0gT" method="withContext"/>
    </service>
    <service id=".service_locator.YUbLTjT.App\Admin\Controller\ProductManagement\SourceGroupController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Admin\Controller\ProductManagement\SourceGroupController"/>
      <argument>App\Admin\Controller\ProductManagement\SourceGroupController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.YUbLTjT" method="withContext"/>
    </service>
    <service id=".service_locator.65IfjS0" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="App\Admin\Controller\AdminBaseController::adminLogMgr" type="service" id="App\Admin\Service\AdminOperatonLogManager" on-invalid="ignore"/>
        <argument key="App\Admin\Controller\ProductManagement\SpecialUserSettingController::productManager" type="service" id="App\Admin\Service\ProductMobileManager" on-invalid="ignore"/>
        <argument key="App\Common\Controller\BaseController::cache" type="service" id="cache.app.simple" on-invalid="ignore"/>
        <argument key="App\Common\Controller\BaseController::parameters" type="service" id="parameter_bag" on-invalid="ignore"/>
        <argument key="App\Common\Controller\BaseController::session" type="service" id="session" on-invalid="ignore"/>
        <argument key="App\Common\Controller\BaseController::settings" type="service" id="App\Common\Service\SystemSetting" on-invalid="ignore"/>
        <argument key="App\Common\Controller\BaseController::translator" type="service" id="translator.default" on-invalid="ignore"/>
        <argument key="http_kernel" type="service" id="http_kernel" on-invalid="ignore"/>
        <argument key="parameter_bag" type="service" id="parameter_bag" on-invalid="ignore"/>
        <argument key="request_stack" type="service" id="request_stack" on-invalid="ignore"/>
        <argument key="router" type="service" id="router.default" on-invalid="ignore"/>
        <argument key="security.authorization_checker" type="service" id="security.authorization_checker" on-invalid="ignore"/>
        <argument key="security.csrf.token_manager" type="service" id="security.csrf.token_manager" on-invalid="ignore"/>
        <argument key="security.token_storage" type="service" id="security.token_storage" on-invalid="ignore"/>
        <argument key="session" type="service" id="session" on-invalid="ignore"/>
        <argument key="twig" type="service" id="twig" on-invalid="ignore"/>
      </argument>
    </service>
    <service id=".service_locator.65IfjS0.App\Admin\Controller\ProductManagement\SpecialUserSettingController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Admin\Controller\ProductManagement\SpecialUserSettingController"/>
      <argument>App\Admin\Controller\ProductManagement\SpecialUserSettingController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.65IfjS0" method="withContext"/>
    </service>
    <service id=".service_locator.xu2gSuk" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="App\Admin\Controller\AdminBaseController::adminLogMgr" type="service" id="App\Admin\Service\AdminOperatonLogManager" on-invalid="ignore"/>
        <argument key="App\Admin\Controller\ProductManagement\TelephoneController::productManager" type="service" id="App\Admin\Service\ProductTelephoneManager" on-invalid="ignore"/>
        <argument key="App\Common\Controller\BaseController::cache" type="service" id="cache.app.simple" on-invalid="ignore"/>
        <argument key="App\Common\Controller\BaseController::parameters" type="service" id="parameter_bag" on-invalid="ignore"/>
        <argument key="App\Common\Controller\BaseController::session" type="service" id="session" on-invalid="ignore"/>
        <argument key="App\Common\Controller\BaseController::settings" type="service" id="App\Common\Service\SystemSetting" on-invalid="ignore"/>
        <argument key="App\Common\Controller\BaseController::translator" type="service" id="translator.default" on-invalid="ignore"/>
        <argument key="http_kernel" type="service" id="http_kernel" on-invalid="ignore"/>
        <argument key="parameter_bag" type="service" id="parameter_bag" on-invalid="ignore"/>
        <argument key="request_stack" type="service" id="request_stack" on-invalid="ignore"/>
        <argument key="router" type="service" id="router.default" on-invalid="ignore"/>
        <argument key="security.authorization_checker" type="service" id="security.authorization_checker" on-invalid="ignore"/>
        <argument key="security.csrf.token_manager" type="service" id="security.csrf.token_manager" on-invalid="ignore"/>
        <argument key="security.token_storage" type="service" id="security.token_storage" on-invalid="ignore"/>
        <argument key="session" type="service" id="session" on-invalid="ignore"/>
        <argument key="twig" type="service" id="twig" on-invalid="ignore"/>
      </argument>
    </service>
    <service id=".service_locator.xu2gSuk.App\Admin\Controller\ProductManagement\TelephoneController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Admin\Controller\ProductManagement\TelephoneController"/>
      <argument>App\Admin\Controller\ProductManagement\TelephoneController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.xu2gSuk" method="withContext"/>
    </service>
    <service id=".service_locator.jYhpx6d" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="App\Admin\Controller\AdminBaseController::adminLogMgr" type="service" id="App\Admin\Service\AdminOperatonLogManager" on-invalid="ignore"/>
        <argument key="App\Admin\Controller\ProductManagement\TencentController::productManager" type="service" id="App\Admin\Service\ProductTencentManager" on-invalid="ignore"/>
        <argument key="App\Common\Controller\BaseController::cache" type="service" id="cache.app.simple" on-invalid="ignore"/>
        <argument key="App\Common\Controller\BaseController::parameters" type="service" id="parameter_bag" on-invalid="ignore"/>
        <argument key="App\Common\Controller\BaseController::session" type="service" id="session" on-invalid="ignore"/>
        <argument key="App\Common\Controller\BaseController::settings" type="service" id="App\Common\Service\SystemSetting" on-invalid="ignore"/>
        <argument key="App\Common\Controller\BaseController::translator" type="service" id="translator.default" on-invalid="ignore"/>
        <argument key="http_kernel" type="service" id="http_kernel" on-invalid="ignore"/>
        <argument key="parameter_bag" type="service" id="parameter_bag" on-invalid="ignore"/>
        <argument key="request_stack" type="service" id="request_stack" on-invalid="ignore"/>
        <argument key="router" type="service" id="router.default" on-invalid="ignore"/>
        <argument key="security.authorization_checker" type="service" id="security.authorization_checker" on-invalid="ignore"/>
        <argument key="security.csrf.token_manager" type="service" id="security.csrf.token_manager" on-invalid="ignore"/>
        <argument key="security.token_storage" type="service" id="security.token_storage" on-invalid="ignore"/>
        <argument key="session" type="service" id="session" on-invalid="ignore"/>
        <argument key="twig" type="service" id="twig" on-invalid="ignore"/>
      </argument>
    </service>
    <service id=".service_locator.jYhpx6d.App\Admin\Controller\ProductManagement\TencentController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Admin\Controller\ProductManagement\TencentController"/>
      <argument>App\Admin\Controller\ProductManagement\TencentController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.jYhpx6d" method="withContext"/>
    </service>
    <service id=".service_locator.0ACZ0gT.App\Admin\Controller\ProductManagement\TencentProductCategoryController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Admin\Controller\ProductManagement\TencentProductCategoryController"/>
      <argument>App\Admin\Controller\ProductManagement\TencentProductCategoryController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.0ACZ0gT" method="withContext"/>
    </service>
    <service id=".service_locator.0ACZ0gT.App\Admin\Controller\ProductManagement\VirtualNetworkOperatorController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Admin\Controller\ProductManagement\VirtualNetworkOperatorController"/>
      <argument>App\Admin\Controller\ProductManagement\VirtualNetworkOperatorController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.0ACZ0gT" method="withContext"/>
    </service>
    <service id=".service_locator.YUbLTjT.App\Admin\Controller\ProfileController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Admin\Controller\ProfileController"/>
      <argument>App\Admin\Controller\ProfileController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.YUbLTjT" method="withContext"/>
    </service>
    <service id=".service_locator.YUbLTjT.App\Admin\Controller\ServicesMallOrderController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Admin\Controller\ServicesMallOrderController"/>
      <argument>App\Admin\Controller\ServicesMallOrderController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.YUbLTjT" method="withContext"/>
    </service>
    <service id=".service_locator.YUbLTjT.App\Admin\Controller\ServicesMallProductController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Admin\Controller\ServicesMallProductController"/>
      <argument>App\Admin\Controller\ServicesMallProductController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.YUbLTjT" method="withContext"/>
    </service>
    <service id=".service_locator.YUbLTjT.App\Admin\Controller\SystemAdministration\AdministratorController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Admin\Controller\SystemAdministration\AdministratorController"/>
      <argument>App\Admin\Controller\SystemAdministration\AdministratorController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.YUbLTjT" method="withContext"/>
    </service>
    <service id=".service_locator.YUbLTjT.App\Admin\Controller\SystemAdministration\AdministratorRoleController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Admin\Controller\SystemAdministration\AdministratorRoleController"/>
      <argument>App\Admin\Controller\SystemAdministration\AdministratorRoleController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.YUbLTjT" method="withContext"/>
    </service>
    <service id=".service_locator.YUbLTjT.App\Admin\Controller\SystemAdministration\ArticleCategoryController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Admin\Controller\SystemAdministration\ArticleCategoryController"/>
      <argument>App\Admin\Controller\SystemAdministration\ArticleCategoryController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.YUbLTjT" method="withContext"/>
    </service>
    <service id=".service_locator.YUbLTjT.App\Admin\Controller\SystemAdministration\ArticleController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Admin\Controller\SystemAdministration\ArticleController"/>
      <argument>App\Admin\Controller\SystemAdministration\ArticleController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.YUbLTjT" method="withContext"/>
    </service>
    <service id=".service_locator.YUbLTjT.App\Admin\Controller\SystemAdministration\CacheController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Admin\Controller\SystemAdministration\CacheController"/>
      <argument>App\Admin\Controller\SystemAdministration\CacheController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.YUbLTjT" method="withContext"/>
    </service>
    <service id=".service_locator.YUbLTjT.App\Admin\Controller\SystemAdministration\LoggingController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Admin\Controller\SystemAdministration\LoggingController"/>
      <argument>App\Admin\Controller\SystemAdministration\LoggingController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.YUbLTjT" method="withContext"/>
    </service>
    <service id=".service_locator.YUbLTjT.App\Admin\Controller\SystemAdministration\MiscController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Admin\Controller\SystemAdministration\MiscController"/>
      <argument>App\Admin\Controller\SystemAdministration\MiscController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.YUbLTjT" method="withContext"/>
    </service>
    <service id=".service_locator.YUbLTjT.App\Admin\Controller\SystemAdministration\RedisController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Admin\Controller\SystemAdministration\RedisController"/>
      <argument>App\Admin\Controller\SystemAdministration\RedisController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.YUbLTjT" method="withContext"/>
    </service>
    <service id=".service_locator.YUbLTjT.App\Admin\Controller\SystemAdministration\SystemAdministrationController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Admin\Controller\SystemAdministration\SystemAdministrationController"/>
      <argument>App\Admin\Controller\SystemAdministration\SystemAdministrationController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.YUbLTjT" method="withContext"/>
    </service>
    <service id=".service_locator.YUbLTjT.App\Admin\Controller\SystemAdministration\SystemSettingController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Admin\Controller\SystemAdministration\SystemSettingController"/>
      <argument>App\Admin\Controller\SystemAdministration\SystemSettingController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.YUbLTjT" method="withContext"/>
    </service>
    <service id=".service_locator.YUbLTjT.App\Admin\Controller\UserApplicationController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Admin\Controller\UserApplicationController"/>
      <argument>App\Admin\Controller\UserApplicationController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.YUbLTjT" method="withContext"/>
    </service>
    <service id=".service_locator.YUbLTjT.App\Admin\Controller\UserController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Admin\Controller\UserController"/>
      <argument>App\Admin\Controller\UserController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.YUbLTjT" method="withContext"/>
    </service>
    <service id=".service_locator.YUbLTjT.App\Admin\Controller\UserDetail\MainController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Admin\Controller\UserDetail\MainController"/>
      <argument>App\Admin\Controller\UserDetail\MainController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.YUbLTjT" method="withContext"/>
    </service>
    <service id=".service_locator.YUbLTjT.App\Admin\Controller\UserDetail\OpenPlatformController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Admin\Controller\UserDetail\OpenPlatformController"/>
      <argument>App\Admin\Controller\UserDetail\OpenPlatformController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.YUbLTjT" method="withContext"/>
    </service>
    <service id=".service_locator.YUbLTjT.App\Admin\Controller\UserDetail\ResellerPlatformController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Admin\Controller\UserDetail\ResellerPlatformController"/>
      <argument>App\Admin\Controller\UserDetail\ResellerPlatformController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.YUbLTjT" method="withContext"/>
    </service>
    <service id=".service_locator.YUbLTjT.App\Admin\Controller\UserDetail\SupplierPlatformController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Admin\Controller\UserDetail\SupplierPlatformController"/>
      <argument>App\Admin\Controller\UserDetail\SupplierPlatformController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.YUbLTjT" method="withContext"/>
    </service>
    <service id=".service_locator.YUbLTjT.App\Admin\Controller\UserDetail\UserDetailController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Admin\Controller\UserDetail\UserDetailController"/>
      <argument>App\Admin\Controller\UserDetail\UserDetailController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.YUbLTjT" method="withContext"/>
    </service>
    <service id=".service_locator.YUbLTjT.App\Admin\Controller\UserSubAccountLevelController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Admin\Controller\UserSubAccountLevelController"/>
      <argument>App\Admin\Controller\UserSubAccountLevelController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.YUbLTjT" method="withContext"/>
    </service>
    <service id=".service_locator.qFNxiTm" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="Symfu\SimpleFormBundle\Form::csrfTokenManager" type="service" id="security.csrf.token_manager" on-invalid="ignore"/>
        <argument key="Symfu\SimpleFormBundle\Form::parameters" type="service" id="parameter_bag" on-invalid="ignore"/>
        <argument key="Symfu\SimpleFormBundle\Form::requestStack" type="service" id="request_stack" on-invalid="ignore"/>
        <argument key="Symfu\SimpleFormBundle\Form::session" type="service" id="session" on-invalid="ignore"/>
        <argument key="Symfu\SimpleFormBundle\Form::transformerMgr" type="service" id="Symfu\SimpleValidation\TransformerManagerInterface" on-invalid="ignore"/>
        <argument key="Symfu\SimpleFormBundle\Form::translator" type="service" id="translator.default" on-invalid="ignore"/>
        <argument key="Symfu\SimpleFormBundle\Form::validatorMgr" type="service" id="Symfu\SimpleValidation\ValidationManagerInterface" on-invalid="ignore"/>
      </argument>
    </service>
    <service id=".service_locator.qFNxiTm.App\Admin\Form\AdminEditForm" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Admin\Form\AdminEditForm"/>
      <argument>App\Admin\Form\AdminEditForm</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.qFNxiTm" method="withContext"/>
    </service>
    <service id=".service_locator.qFNxiTm.App\Admin\Form\ArticleEditForm" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Admin\Form\ArticleEditForm"/>
      <argument>App\Admin\Form\ArticleEditForm</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.qFNxiTm" method="withContext"/>
    </service>
    <service id=".service_locator.qFNxiTm.App\Admin\Form\PhoneNumberAttributionEditForm" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Admin\Form\PhoneNumberAttributionEditForm"/>
      <argument>App\Admin\Form\PhoneNumberAttributionEditForm</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.qFNxiTm" method="withContext"/>
    </service>
    <service id=".service_locator.qFNxiTm.App\Admin\Form\ProductSearchForm" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Admin\Form\ProductSearchForm"/>
      <argument>App\Admin\Form\ProductSearchForm</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.qFNxiTm" method="withContext"/>
    </service>
    <service id=".service_locator.qFNxiTm.App\Admin\Form\RegionEditForm" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Admin\Form\RegionEditForm"/>
      <argument>App\Admin\Form\RegionEditForm</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.qFNxiTm" method="withContext"/>
    </service>
    <service id=".service_locator.qFNxiTm.App\Admin\Form\SystemSetting\PassportSettingForm" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Admin\Form\SystemSetting\PassportSettingForm"/>
      <argument>App\Admin\Form\SystemSetting\PassportSettingForm</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.qFNxiTm" method="withContext"/>
    </service>
    <service id=".service_locator.qFNxiTm.App\Admin\Form\SystemSetting\ResellerPlatformSettingForm" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Admin\Form\SystemSetting\ResellerPlatformSettingForm"/>
      <argument>App\Admin\Form\SystemSetting\ResellerPlatformSettingForm</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.qFNxiTm" method="withContext"/>
    </service>
    <service id=".service_locator.qFNxiTm.App\Admin\Form\SystemSetting\SupplierPlatformSettingForm" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Admin\Form\SystemSetting\SupplierPlatformSettingForm"/>
      <argument>App\Admin\Form\SystemSetting\SupplierPlatformSettingForm</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.qFNxiTm" method="withContext"/>
    </service>
    <service id=".service_locator.qFNxiTm.App\Admin\Form\SystemSetting\SystemForm" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Admin\Form\SystemSetting\SystemForm"/>
      <argument>App\Admin\Form\SystemSetting\SystemForm</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.qFNxiTm" method="withContext"/>
    </service>
    <service id=".service_locator.qFNxiTm.App\Admin\Form\TencentProductCategoryEditForm" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Admin\Form\TencentProductCategoryEditForm"/>
      <argument>App\Admin\Form\TencentProductCategoryEditForm</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.qFNxiTm" method="withContext"/>
    </service>
    <service id=".service_locator.qFNxiTm.App\Admin\Form\VirtualNetworkOperatorEditForm" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Admin\Form\VirtualNetworkOperatorEditForm"/>
      <argument>App\Admin\Form\VirtualNetworkOperatorEditForm</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.qFNxiTm" method="withContext"/>
    </service>
    <service id=".service_locator.tw2ef6c" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="App\Admin\Service\AdminBaseService::adminLogMgr" type="service" id="App\Admin\Service\AdminOperatonLogManager" on-invalid="ignore"/>
        <argument key="App\Common\Service\BaseService::logger" type="service" id="monolog.logger" on-invalid="ignore"/>
        <argument key="App\Common\Service\BaseService::settings" type="service" id="App\Common\Service\SystemSetting" on-invalid="ignore"/>
      </argument>
    </service>
    <service id=".service_locator.tw2ef6c.App\Admin\Service\AdminBaseService" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Admin\Service\AdminBaseService"/>
      <argument>App\Admin\Service\AdminBaseService</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.tw2ef6c" method="withContext"/>
    </service>
    <service id=".service_locator.fleq5MM" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="App\Common\Service\BaseService::logger" type="service" id="monolog.logger" on-invalid="ignore"/>
        <argument key="App\Common\Service\BaseService::settings" type="service" id="App\Common\Service\SystemSetting" on-invalid="ignore"/>
      </argument>
    </service>
    <service id=".service_locator.fleq5MM.App\Admin\Service\AdminOperatonLogManager" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Admin\Service\AdminOperatonLogManager"/>
      <argument>App\Admin\Service\AdminOperatonLogManager</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.fleq5MM" method="withContext"/>
    </service>
    <service id=".service_locator.fleq5MM.App\Admin\Service\AdminUserManager" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Admin\Service\AdminUserManager"/>
      <argument>App\Admin\Service\AdminUserManager</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.fleq5MM" method="withContext"/>
    </service>
    <service id=".service_locator.tw2ef6c.App\Admin\Service\BaseProductManager" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Admin\Service\BaseProductManager"/>
      <argument>App\Admin\Service\BaseProductManager</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.tw2ef6c" method="withContext"/>
    </service>
    <service id=".service_locator.tw2ef6c.App\Admin\Service\ProductFlowManager" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Admin\Service\ProductFlowManager"/>
      <argument>App\Admin\Service\ProductFlowManager</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.tw2ef6c" method="withContext"/>
    </service>
    <service id=".service_locator.tw2ef6c.App\Admin\Service\ProductMobileManager" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Admin\Service\ProductMobileManager"/>
      <argument>App\Admin\Service\ProductMobileManager</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.tw2ef6c" method="withContext"/>
    </service>
    <service id=".service_locator.tw2ef6c.App\Admin\Service\ProductTelephoneManager" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Admin\Service\ProductTelephoneManager"/>
      <argument>App\Admin\Service\ProductTelephoneManager</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.tw2ef6c" method="withContext"/>
    </service>
    <service id=".service_locator.tw2ef6c.App\Admin\Service\ProductTencentManager" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Admin\Service\ProductTencentManager"/>
      <argument>App\Admin\Service\ProductTencentManager</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.tw2ef6c" method="withContext"/>
    </service>
    <service id=".service_locator.0ACZ0gT.App\Common\Controller\ArticleController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Common\Controller\ArticleController"/>
      <argument>App\Common\Controller\ArticleController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.0ACZ0gT" method="withContext"/>
    </service>
    <service id=".service_locator.0ACZ0gT.App\Common\Controller\BaseController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Common\Controller\BaseController"/>
      <argument>App\Common\Controller\BaseController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.0ACZ0gT" method="withContext"/>
    </service>
    <service id=".service_locator.0ACZ0gT.App\Common\Controller\CrudController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Common\Controller\CrudController"/>
      <argument>App\Common\Controller\CrudController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.0ACZ0gT" method="withContext"/>
    </service>
    <service id=".service_locator.0ACZ0gT.App\Common\Controller\FileUploadController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Common\Controller\FileUploadController"/>
      <argument>App\Common\Controller\FileUploadController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.0ACZ0gT" method="withContext"/>
    </service>
    <service id=".service_locator.0ACZ0gT.App\Common\Controller\Finance\BalanceController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Common\Controller\Finance\BalanceController"/>
      <argument>App\Common\Controller\Finance\BalanceController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.0ACZ0gT" method="withContext"/>
    </service>
    <service id=".service_locator.0ACZ0gT.App\Common\Controller\FrontpageController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Common\Controller\FrontpageController"/>
      <argument>App\Common\Controller\FrontpageController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.0ACZ0gT" method="withContext"/>
    </service>
    <service id=".service_locator.0ACZ0gT.App\Common\Controller\RecaptchaController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Common\Controller\RecaptchaController"/>
      <argument>App\Common\Controller\RecaptchaController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.0ACZ0gT" method="withContext"/>
    </service>
    <service id=".service_locator.0ACZ0gT.App\Common\Controller\SmsVerifierController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Common\Controller\SmsVerifierController"/>
      <argument>App\Common\Controller\SmsVerifierController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.0ACZ0gT" method="withContext"/>
    </service>
    <service id=".service_locator.qFNxiTm.App\Common\Form\IndividualUserRegisterForm" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Common\Form\IndividualUserRegisterForm"/>
      <argument>App\Common\Form\IndividualUserRegisterForm</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.qFNxiTm" method="withContext"/>
    </service>
    <service id=".service_locator.qFNxiTm.App\Common\Form\UserForm" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Common\Form\UserForm"/>
      <argument>App\Common\Form\UserForm</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.qFNxiTm" method="withContext"/>
    </service>
    <service id=".service_locator.fleq5MM.App\Common\Service\AuthenticationService" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Common\Service\AuthenticationService"/>
      <argument>App\Common\Service\AuthenticationService</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.fleq5MM" method="withContext"/>
    </service>
    <service id=".service_locator.fleq5MM.App\Common\Service\CsrfTokenManager" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Common\Service\CsrfTokenManager"/>
      <argument>App\Common\Service\CsrfTokenManager</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.fleq5MM" method="withContext"/>
    </service>
    <service id=".service_locator.fleq5MM.App\Common\Service\ExternalService\IdentityVerifyService" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Common\Service\ExternalService\IdentityVerifyService"/>
      <argument>App\Common\Service\ExternalService\IdentityVerifyService</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.fleq5MM" method="withContext"/>
    </service>
    <service id=".service_locator.fleq5MM.App\Common\Service\FileUpload\UploadFileListener" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Common\Service\FileUpload\UploadFileListener"/>
      <argument>App\Common\Service\FileUpload\UploadFileListener</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.fleq5MM" method="withContext"/>
    </service>
    <service id=".service_locator.fleq5MM.App\Common\Service\FileUpload\UploadFileManager" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Common\Service\FileUpload\UploadFileManager"/>
      <argument>App\Common\Service\FileUpload\UploadFileManager</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.fleq5MM" method="withContext"/>
    </service>
    <service id=".service_locator.fleq5MM.App\Common\Service\Order\OrderService" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Common\Service\Order\OrderService"/>
      <argument>App\Common\Service\Order\OrderService</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.fleq5MM" method="withContext"/>
    </service>
    <service id=".service_locator.fleq5MM.App\Common\Service\Payment\AlipayService" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Common\Service\Payment\AlipayService"/>
      <argument>App\Common\Service\Payment\AlipayService</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.fleq5MM" method="withContext"/>
    </service>
    <service id=".service_locator.fleq5MM.App\Common\Service\Payment\UserMoneyTradeLogManager" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Common\Service\Payment\UserMoneyTradeLogManager"/>
      <argument>App\Common\Service\Payment\UserMoneyTradeLogManager</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.fleq5MM" method="withContext"/>
    </service>
    <service id=".service_locator.fleq5MM.App\Common\Service\QueryMobileBalance" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Common\Service\QueryMobileBalance"/>
      <argument>App\Common\Service\QueryMobileBalance</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.fleq5MM" method="withContext"/>
    </service>
    <service id=".service_locator.fleq5MM.App\Common\Service\RecaptchaService" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Common\Service\RecaptchaService"/>
      <argument>App\Common\Service\RecaptchaService</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.fleq5MM" method="withContext"/>
    </service>
    <service id=".service_locator.fleq5MM.App\Common\Service\SmsService" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Common\Service\SmsService"/>
      <argument>App\Common\Service\SmsService</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.fleq5MM" method="withContext"/>
    </service>
    <service id=".service_locator.fleq5MM.App\Common\Service\SystemSettingManager" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Common\Service\SystemSettingManager"/>
      <argument>App\Common\Service\SystemSettingManager</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.fleq5MM" method="withContext"/>
    </service>
    <service id=".service_locator.fleq5MM.App\Common\Service\UserManager" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Common\Service\UserManager"/>
      <argument>App\Common\Service\UserManager</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.fleq5MM" method="withContext"/>
    </service>
    <service id=".service_locator.fleq5MM.App\Common\Service\UuidGenerator" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Common\Service\UuidGenerator"/>
      <argument>App\Common\Service\UuidGenerator</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.fleq5MM" method="withContext"/>
    </service>
    <service id=".service_locator.fleq5MM.App\Common\Service\VerifyService" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Common\Service\VerifyService"/>
      <argument>App\Common\Service\VerifyService</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.fleq5MM" method="withContext"/>
    </service>
    <service id=".service_locator.fleq5MM.App\Common\Service\WebAuthenticationManager" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Common\Service\WebAuthenticationManager"/>
      <argument>App\Common\Service\WebAuthenticationManager</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.fleq5MM" method="withContext"/>
    </service>
    <service id=".service_locator.0ACZ0gT.App\Open\Controller\DashboardController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Open\Controller\DashboardController"/>
      <argument>App\Open\Controller\DashboardController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.0ACZ0gT" method="withContext"/>
    </service>
    <service id=".service_locator.0ACZ0gT.App\Open\Controller\FinanceController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Open\Controller\FinanceController"/>
      <argument>App\Open\Controller\FinanceController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.0ACZ0gT" method="withContext"/>
    </service>
    <service id=".service_locator.0ACZ0gT.App\Open\Controller\FrontpageController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Open\Controller\FrontpageController"/>
      <argument>App\Open\Controller\FrontpageController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.0ACZ0gT" method="withContext"/>
    </service>
    <service id=".service_locator.0ACZ0gT.App\Open\Controller\OpenBaseController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Open\Controller\OpenBaseController"/>
      <argument>App\Open\Controller\OpenBaseController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.0ACZ0gT" method="withContext"/>
    </service>
    <service id=".service_locator.0ACZ0gT.App\Open\Controller\ServiceController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Open\Controller\ServiceController"/>
      <argument>App\Open\Controller\ServiceController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.0ACZ0gT" method="withContext"/>
    </service>
    <service id=".service_locator.0ACZ0gT.App\Open\Controller\UserController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Open\Controller\UserController"/>
      <argument>App\Open\Controller\UserController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.0ACZ0gT" method="withContext"/>
    </service>
    <service id=".service_locator.0ACZ0gT.App\Passport\Controller\HomeController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Passport\Controller\HomeController"/>
      <argument>App\Passport\Controller\HomeController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.0ACZ0gT" method="withContext"/>
    </service>
    <service id=".service_locator.0ACZ0gT.App\Passport\Controller\IdentityManagementController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Passport\Controller\IdentityManagementController"/>
      <argument>App\Passport\Controller\IdentityManagementController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.0ACZ0gT" method="withContext"/>
    </service>
    <service id=".service_locator.0ACZ0gT.App\Passport\Controller\LoginController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Passport\Controller\LoginController"/>
      <argument>App\Passport\Controller\LoginController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.0ACZ0gT" method="withContext"/>
    </service>
    <service id=".service_locator.0ACZ0gT.App\Passport\Controller\PassportBaseController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Passport\Controller\PassportBaseController"/>
      <argument>App\Passport\Controller\PassportBaseController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.0ACZ0gT" method="withContext"/>
    </service>
    <service id=".service_locator.0ACZ0gT.App\Passport\Controller\PasswordResetController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Passport\Controller\PasswordResetController"/>
      <argument>App\Passport\Controller\PasswordResetController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.0ACZ0gT" method="withContext"/>
    </service>
    <service id=".service_locator.0ACZ0gT.App\Passport\Controller\ProtectController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Passport\Controller\ProtectController"/>
      <argument>App\Passport\Controller\ProtectController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.0ACZ0gT" method="withContext"/>
    </service>
    <service id=".service_locator.0ACZ0gT.App\Passport\Controller\QuestionController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Passport\Controller\QuestionController"/>
      <argument>App\Passport\Controller\QuestionController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.0ACZ0gT" method="withContext"/>
    </service>
    <service id=".service_locator.0ACZ0gT.App\Passport\Controller\RegisterController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Passport\Controller\RegisterController"/>
      <argument>App\Passport\Controller\RegisterController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.0ACZ0gT" method="withContext"/>
    </service>
    <service id=".service_locator.0ACZ0gT.App\Passport\Controller\SafeCenterController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Passport\Controller\SafeCenterController"/>
      <argument>App\Passport\Controller\SafeCenterController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.0ACZ0gT" method="withContext"/>
    </service>
    <service id=".service_locator.0ACZ0gT.App\Passport\Controller\ToolController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Passport\Controller\ToolController"/>
      <argument>App\Passport\Controller\ToolController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.0ACZ0gT" method="withContext"/>
    </service>
    <service id=".service_locator.0ACZ0gT.App\Passport\Controller\UserController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Passport\Controller\UserController"/>
      <argument>App\Passport\Controller\UserController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.0ACZ0gT" method="withContext"/>
    </service>
    <service id=".service_locator.0ACZ0gT.App\Passport\Controller\UsersMessageController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Passport\Controller\UsersMessageController"/>
      <argument>App\Passport\Controller\UsersMessageController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.0ACZ0gT" method="withContext"/>
    </service>
    <service id=".service_locator.qFNxiTm.App\Passport\Form\BusinessIdentitySubmitForm" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Passport\Form\BusinessIdentitySubmitForm"/>
      <argument>App\Passport\Form\BusinessIdentitySubmitForm</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.qFNxiTm" method="withContext"/>
    </service>
    <service id=".service_locator.qFNxiTm.App\Passport\Form\IndividualIdentitySubmitForm" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Passport\Form\IndividualIdentitySubmitForm"/>
      <argument>App\Passport\Form\IndividualIdentitySubmitForm</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.qFNxiTm" method="withContext"/>
    </service>
    <service id=".service_locator.fleq5MM.App\Passport\Service\EmailMsgNoticeService" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Passport\Service\EmailMsgNoticeService"/>
      <argument>App\Passport\Service\EmailMsgNoticeService</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.fleq5MM" method="withContext"/>
    </service>
    <service id=".service_locator.fleq5MM.App\Passport\Service\IpService" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Passport\Service\IpService"/>
      <argument>App\Passport\Service\IpService</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.fleq5MM" method="withContext"/>
    </service>
    <service id=".service_locator.fleq5MM.App\Passport\Service\MobileMsgNoticeService" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Passport\Service\MobileMsgNoticeService"/>
      <argument>App\Passport\Service\MobileMsgNoticeService</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.fleq5MM" method="withContext"/>
    </service>
    <service id=".service_locator.fleq5MM.App\Passport\Service\RequestToolService" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Passport\Service\RequestToolService"/>
      <argument>App\Passport\Service\RequestToolService</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.fleq5MM" method="withContext"/>
    </service>
    <service id=".service_locator.fleq5MM.App\Passport\Service\UserPasswordService" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Passport\Service\UserPasswordService"/>
      <argument>App\Passport\Service\UserPasswordService</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.fleq5MM" method="withContext"/>
    </service>
    <service id=".service_locator.0ACZ0gT.App\Reseller\Controller\AffiliateController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Reseller\Controller\AffiliateController"/>
      <argument>App\Reseller\Controller\AffiliateController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.0ACZ0gT" method="withContext"/>
    </service>
    <service id=".service_locator.0ACZ0gT.App\Reseller\Controller\DashboardController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Reseller\Controller\DashboardController"/>
      <argument>App\Reseller\Controller\DashboardController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.0ACZ0gT" method="withContext"/>
    </service>
    <service id=".service_locator.0ACZ0gT.App\Reseller\Controller\EmployeeController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Reseller\Controller\EmployeeController"/>
      <argument>App\Reseller\Controller\EmployeeController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.0ACZ0gT" method="withContext"/>
    </service>
    <service id=".service_locator.0ACZ0gT.App\Reseller\Controller\FaqController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Reseller\Controller\FaqController"/>
      <argument>App\Reseller\Controller\FaqController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.0ACZ0gT" method="withContext"/>
    </service>
    <service id=".service_locator.0ACZ0gT.App\Reseller\Controller\FinanceController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Reseller\Controller\FinanceController"/>
      <argument>App\Reseller\Controller\FinanceController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.0ACZ0gT" method="withContext"/>
    </service>
    <service id=".service_locator.0ACZ0gT.App\Reseller\Controller\HomeController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Reseller\Controller\HomeController"/>
      <argument>App\Reseller\Controller\HomeController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.0ACZ0gT" method="withContext"/>
    </service>
    <service id=".service_locator.0ACZ0gT.App\Reseller\Controller\OrderController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Reseller\Controller\OrderController"/>
      <argument>App\Reseller\Controller\OrderController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.0ACZ0gT" method="withContext"/>
    </service>
    <service id=".service_locator.0ACZ0gT.App\Reseller\Controller\PrinterSettingController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Reseller\Controller\PrinterSettingController"/>
      <argument>App\Reseller\Controller\PrinterSettingController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.0ACZ0gT" method="withContext"/>
    </service>
    <service id=".service_locator.0ACZ0gT.App\Reseller\Controller\ProductController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Reseller\Controller\ProductController"/>
      <argument>App\Reseller\Controller\ProductController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.0ACZ0gT" method="withContext"/>
    </service>
    <service id=".service_locator.0ACZ0gT.App\Reseller\Controller\RechargeController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Reseller\Controller\RechargeController"/>
      <argument>App\Reseller\Controller\RechargeController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.0ACZ0gT" method="withContext"/>
    </service>
    <service id=".service_locator.0ACZ0gT.App\Reseller\Controller\ResellerAccountController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Reseller\Controller\ResellerAccountController"/>
      <argument>App\Reseller\Controller\ResellerAccountController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.0ACZ0gT" method="withContext"/>
    </service>
    <service id=".service_locator.0ACZ0gT.App\Reseller\Controller\ResellerBaseController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Reseller\Controller\ResellerBaseController"/>
      <argument>App\Reseller\Controller\ResellerBaseController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.0ACZ0gT" method="withContext"/>
    </service>
    <service id=".service_locator.0ACZ0gT.App\Reseller\Controller\SafeController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Reseller\Controller\SafeController"/>
      <argument>App\Reseller\Controller\SafeController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.0ACZ0gT" method="withContext"/>
    </service>
    <service id=".service_locator.0ACZ0gT.App\Reseller\Controller\UserController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Reseller\Controller\UserController"/>
      <argument>App\Reseller\Controller\UserController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.0ACZ0gT" method="withContext"/>
    </service>
    <service id=".service_locator.qFNxiTm.App\Reseller\Form\OrderRechargeForm" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Reseller\Form\OrderRechargeForm"/>
      <argument>App\Reseller\Form\OrderRechargeForm</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.qFNxiTm" method="withContext"/>
    </service>
    <service id=".service_locator.qFNxiTm.App\Reseller\Form\PrintSettingForm" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Reseller\Form\PrintSettingForm"/>
      <argument>App\Reseller\Form\PrintSettingForm</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.qFNxiTm" method="withContext"/>
    </service>
    <service id=".service_locator.qFNxiTm.App\Reseller\Form\TransferForm" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Reseller\Form\TransferForm"/>
      <argument>App\Reseller\Form\TransferForm</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.qFNxiTm" method="withContext"/>
    </service>
    <service id=".service_locator.fleq5MM.App\Reseller\Service\ProductService" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Reseller\Service\ProductService"/>
      <argument>App\Reseller\Service\ProductService</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.fleq5MM" method="withContext"/>
    </service>
    <service id=".service_locator.0ACZ0gT.App\Supplier\Controller\DashboardController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Supplier\Controller\DashboardController"/>
      <argument>App\Supplier\Controller\DashboardController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.0ACZ0gT" method="withContext"/>
    </service>
    <service id=".service_locator.0ACZ0gT.App\Supplier\Controller\FinanceController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Supplier\Controller\FinanceController"/>
      <argument>App\Supplier\Controller\FinanceController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.0ACZ0gT" method="withContext"/>
    </service>
    <service id=".service_locator.0ACZ0gT.App\Supplier\Controller\HomeController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Supplier\Controller\HomeController"/>
      <argument>App\Supplier\Controller\HomeController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.0ACZ0gT" method="withContext"/>
    </service>
    <service id=".service_locator.0ACZ0gT.App\Supplier\Controller\OrdersController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Supplier\Controller\OrdersController"/>
      <argument>App\Supplier\Controller\OrdersController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.0ACZ0gT" method="withContext"/>
    </service>
    <service id=".service_locator.0ACZ0gT.App\Supplier\Controller\SourceGroupController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Supplier\Controller\SourceGroupController"/>
      <argument>App\Supplier\Controller\SourceGroupController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.0ACZ0gT" method="withContext"/>
    </service>
    <service id=".service_locator.0ACZ0gT.App\Supplier\Controller\SupplierBaseController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Supplier\Controller\SupplierBaseController"/>
      <argument>App\Supplier\Controller\SupplierBaseController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.0ACZ0gT" method="withContext"/>
    </service>
    <service id=".service_locator.0ACZ0gT.App\Supplier\Controller\UserController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Supplier\Controller\UserController"/>
      <argument>App\Supplier\Controller\UserController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.0ACZ0gT" method="withContext"/>
    </service>
    <service id=".service_locator.qFNxiTm.App\Supplier\Form\BusinessIdentitySubmitForm" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Supplier\Form\BusinessIdentitySubmitForm"/>
      <argument>App\Supplier\Form\BusinessIdentitySubmitForm</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.qFNxiTm" method="withContext"/>
    </service>
    <service id=".service_locator.0ACZ0gT.App\Test\Controller\SimpleFormDemoController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Test\Controller\SimpleFormDemoController"/>
      <argument>App\Test\Controller\SimpleFormDemoController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.0ACZ0gT" method="withContext"/>
    </service>
    <service id=".service_locator.d2Br1OK" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="App\Common\Controller\BaseController::cache" type="service" id="cache.app.simple" on-invalid="ignore"/>
        <argument key="App\Common\Controller\BaseController::parameters" type="service" id="parameter_bag" on-invalid="ignore"/>
        <argument key="App\Common\Controller\BaseController::session" type="service" id="session" on-invalid="ignore"/>
        <argument key="App\Common\Controller\BaseController::translator" type="service" id="translator.default" on-invalid="ignore"/>
        <argument key="http_kernel" type="service" id="http_kernel" on-invalid="ignore"/>
        <argument key="parameter_bag" type="service" id="parameter_bag" on-invalid="ignore"/>
        <argument key="request_stack" type="service" id="request_stack" on-invalid="ignore"/>
        <argument key="router" type="service" id="router.default" on-invalid="ignore"/>
        <argument key="security.authorization_checker" type="service" id="security.authorization_checker" on-invalid="ignore"/>
        <argument key="security.csrf.token_manager" type="service" id="security.csrf.token_manager" on-invalid="ignore"/>
        <argument key="security.token_storage" type="service" id="security.token_storage" on-invalid="ignore"/>
        <argument key="session" type="service" id="session" on-invalid="ignore"/>
        <argument key="twig" type="service" id="twig" on-invalid="ignore"/>
      </argument>
    </service>
    <service id=".service_locator.d2Br1OK.App\Test\Controller\TestController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Test\Controller\TestController"/>
      <argument>App\Test\Controller\TestController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.d2Br1OK" method="withContext"/>
    </service>
    <service id=".service_locator.qFNxiTm.App\Test\Form\TestForm" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Test\Form\TestForm"/>
      <argument>App\Test\Form\TestForm</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.qFNxiTm" method="withContext"/>
    </service>
    <service id=".service_locator._pu.0Tb" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="translator" type="service" id="translator.default"/>
      </argument>
    </service>
    <service id=".service_locator._pu.0Tb.translation.warmer" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="translation.warmer"/>
      <argument>translation.warmer</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator._pu.0Tb" method="withContext"/>
    </service>
    <service id=".service_locator.MAfdX1A" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="routing.loader" type="service" id="routing.loader"/>
      </argument>
    </service>
    <service id=".service_locator.MAfdX1A.router.default" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="router.default"/>
      <argument>router.default</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.MAfdX1A" method="withContext"/>
    </service>
    <service id=".service_locator.m8PwGkX" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="router" type="service" id="router.default"/>
      </argument>
    </service>
    <service id=".service_locator.m8PwGkX.router.cache_warmer" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="router.cache_warmer"/>
      <argument>router.cache_warmer</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.m8PwGkX" method="withContext"/>
    </service>
    <service id=".service_locator.lSIKWsr" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="twig" type="service" id="twig"/>
      </argument>
    </service>
    <service id=".service_locator.lSIKWsr.twig.cache_warmer" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="twig.cache_warmer"/>
      <argument>twig.cache_warmer</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.lSIKWsr" method="withContext"/>
    </service>
    <service id=".service_locator.lSIKWsr.twig.template_cache_warmer" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="twig.template_cache_warmer"/>
      <argument>twig.template_cache_warmer</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.lSIKWsr" method="withContext"/>
    </service>
    <service id=".service_locator.qFNxiTm.Symfu\SimpleFormBundle\Form" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="Symfu\SimpleFormBundle\Form"/>
      <argument>Symfu\SimpleFormBundle\Form</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.qFNxiTm" method="withContext"/>
    </service>
    <service id="console.command_loader" class="Symfony\Component\Console\CommandLoader\ContainerCommandLoader" public="true">
      <argument type="service" id=".service_locator.LdFe9_F"/>
      <argument type="collection">
        <argument key="security:check">SensioLabs\Security\Command\SecurityCheckerCommand</argument>
        <argument key="product:update_price">App\Admin\Command\UpdateProductPriceCommand</argument>
        <argument key="generate:model">App\Common\Command\GenerateModelCommand</argument>
        <argument key="generate:settings">App\Common\Command\GenerateSettingClasses</argument>
        <argument key="server:run">web_server.command.server_run</argument>
        <argument key="server:start">web_server.command.server_start</argument>
        <argument key="server:stop">web_server.command.server_stop</argument>
        <argument key="server:status">web_server.command.server_status</argument>
        <argument key="server:log">web_server.command.server_log</argument>
        <argument key="server:dump">var_dumper.command.server_dump</argument>
        <argument key="about">console.command.about</argument>
        <argument key="assets:install">console.command.assets_install</argument>
        <argument key="cache:clear">console.command.cache_clear</argument>
        <argument key="cache:pool:clear">console.command.cache_pool_clear</argument>
        <argument key="cache:pool:prune">console.command.cache_pool_prune</argument>
        <argument key="cache:pool:delete">console.command.cache_pool_delete</argument>
        <argument key="cache:warmup">console.command.cache_warmup</argument>
        <argument key="debug:config">console.command.config_debug</argument>
        <argument key="config:dump-reference">console.command.config_dump_reference</argument>
        <argument key="debug:container">console.command.container_debug</argument>
        <argument key="debug:autowiring">console.command.debug_autowiring</argument>
        <argument key="debug:event-dispatcher">console.command.event_dispatcher_debug</argument>
        <argument key="debug:router">console.command.router_debug</argument>
        <argument key="router:match">console.command.router_match</argument>
        <argument key="debug:translation">console.command.translation_debug</argument>
        <argument key="translation:update">console.command.translation_update</argument>
        <argument key="lint:xliff">console.command.xliff_lint</argument>
        <argument key="lint:yaml">console.command.yaml_lint</argument>
        <argument key="security:encode-password">security.command.user_password_encoder</argument>
        <argument key="debug:swiftmailer">swiftmailer.command.debug</argument>
        <argument key="swiftmailer:email:send">swiftmailer.command.new_email</argument>
        <argument key="swiftmailer:spool:send">swiftmailer.command.send_email</argument>
        <argument key="debug:twig">twig.command.debug</argument>
        <argument key="lint:twig">twig.command.lint</argument>
        <argument key="oneup:uploader:clear-chunks">oneup_uploader.command.clear_chunks</argument>
        <argument key="oneup:uploader:clear-orphans">oneup_uploader.command.clear_orphans</argument>
      </argument>
    </service>
    <service id=".service_locator.LdFe9_F" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="App\Admin\Command\UpdateProductPriceCommand" type="service" id="App\Admin\Command\UpdateProductPriceCommand"/>
        <argument key="App\Common\Command\GenerateModelCommand" type="service" id="App\Common\Command\GenerateModelCommand"/>
        <argument key="App\Common\Command\GenerateSettingClasses" type="service" id="App\Common\Command\GenerateSettingClasses"/>
        <argument key="SensioLabs\Security\Command\SecurityCheckerCommand" type="service" id="SensioLabs\Security\Command\SecurityCheckerCommand"/>
        <argument key="console.command.about" type="service" id="console.command.about"/>
        <argument key="console.command.assets_install" type="service" id="console.command.assets_install"/>
        <argument key="console.command.cache_clear" type="service" id="console.command.cache_clear"/>
        <argument key="console.command.cache_pool_clear" type="service" id="console.command.cache_pool_clear"/>
        <argument key="console.command.cache_pool_delete" type="service" id="console.command.cache_pool_delete"/>
        <argument key="console.command.cache_pool_prune" type="service" id="console.command.cache_pool_prune"/>
        <argument key="console.command.cache_warmup" type="service" id="console.command.cache_warmup"/>
        <argument key="console.command.config_debug" type="service" id="console.command.config_debug"/>
        <argument key="console.command.config_dump_reference" type="service" id="console.command.config_dump_reference"/>
        <argument key="console.command.container_debug" type="service" id="console.command.container_debug"/>
        <argument key="console.command.debug_autowiring" type="service" id="console.command.debug_autowiring"/>
        <argument key="console.command.event_dispatcher_debug" type="service" id="console.command.event_dispatcher_debug"/>
        <argument key="console.command.router_debug" type="service" id="console.command.router_debug"/>
        <argument key="console.command.router_match" type="service" id="console.command.router_match"/>
        <argument key="console.command.translation_debug" type="service" id="console.command.translation_debug"/>
        <argument key="console.command.translation_update" type="service" id="console.command.translation_update"/>
        <argument key="console.command.xliff_lint" type="service" id="console.command.xliff_lint"/>
        <argument key="console.command.yaml_lint" type="service" id="console.command.yaml_lint"/>
        <argument key="oneup_uploader.command.clear_chunks" type="service" id="oneup_uploader.command.clear_chunks"/>
        <argument key="oneup_uploader.command.clear_orphans" type="service" id="oneup_uploader.command.clear_orphans"/>
        <argument key="security.command.user_password_encoder" type="service" id="security.command.user_password_encoder"/>
        <argument key="swiftmailer.command.debug" type="service" id="swiftmailer.command.debug"/>
        <argument key="swiftmailer.command.new_email" type="service" id="swiftmailer.command.new_email"/>
        <argument key="swiftmailer.command.send_email" type="service" id="swiftmailer.command.send_email"/>
        <argument key="twig.command.debug" type="service" id="twig.command.debug"/>
        <argument key="twig.command.lint" type="service" id="twig.command.lint"/>
        <argument key="var_dumper.command.server_dump" type="service" id="var_dumper.command.server_dump"/>
        <argument key="web_server.command.server_log" type="service" id="web_server.command.server_log"/>
        <argument key="web_server.command.server_run" type="service" id="web_server.command.server_run"/>
        <argument key="web_server.command.server_start" type="service" id="web_server.command.server_start"/>
        <argument key="web_server.command.server_status" type="service" id="web_server.command.server_status"/>
        <argument key="web_server.command.server_stop" type="service" id="web_server.command.server_stop"/>
      </argument>
    </service>
    <service id=".service_locator.xEWwCJt" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="Symfony\Bridge\Twig\Extension\CsrfRuntime" type="service" id="twig.runtime.security_csrf"/>
        <argument key="Symfony\Bridge\Twig\Extension\HttpKernelRuntime" type="service" id="twig.runtime.httpkernel"/>
      </argument>
    </service>
    <service id="Psr\Container\ContainerInterface" alias="service_container" public="false"/>
    <service id="Symfony\Component\DependencyInjection\ContainerInterface" alias="service_container" public="false"/>
    <service id="Symfony\Component\Security\Http\AccessMapInterface" alias="security.access_map" public="false"/>
    <service id="Symfony\Component\DependencyInjection\ParameterBag\ContainerBagInterface" alias="parameter_bag" public="false"/>
    <service id="Symfony\Component\DependencyInjection\ParameterBag\ParameterBagInterface" alias="parameter_bag" public="false"/>
    <service id="Symfony\Component\EventDispatcher\EventDispatcherInterface" alias="debug.event_dispatcher" public="false"/>
    <service id="Symfony\Component\HttpKernel\HttpKernelInterface" alias="http_kernel" public="false"/>
    <service id="Symfony\Component\HttpFoundation\RequestStack" alias="request_stack" public="false"/>
    <service id="Symfony\Component\HttpKernel\KernelInterface" alias="kernel" public="false"/>
    <service id="Symfony\Component\Filesystem\Filesystem" alias="filesystem" public="false"/>
    <service id="Symfony\Component\HttpKernel\Config\FileLocator" alias="file_locator" public="false"/>
    <service id="Psr\Container\ContainerInterface $parameterBag" alias="parameter_bag"/>
    <service id="cache.app_clearer" alias="cache.default_clearer" public="true"/>
    <service id="Psr\Cache\CacheItemPoolInterface" alias="cache.app" public="false"/>
    <service id="Psr\SimpleCache\CacheInterface" alias="cache.app.simple" public="false"/>
    <service id="Symfony\Component\Cache\Adapter\AdapterInterface" alias="cache.app" public="false"/>
    <service id="Symfony\Contracts\Cache\CacheInterface" alias="cache.app" public="false"/>
    <service id="Symfony\Contracts\Cache\TagAwareCacheInterface" alias="cache.app.taggable" public="false"/>
    <service id="Symfony\Component\Translation\TranslatorInterface" alias="translator.default" public="false"/>
    <service id="Symfony\Contracts\Translation\TranslatorInterface" alias="translator.default" public="false"/>
    <service id="Symfony\Component\HttpFoundation\Session\SessionInterface" alias="session" public="false"/>
    <service id="Symfony\Component\HttpFoundation\Session\Storage\SessionStorageInterface" alias="session.storage.native" public="false"/>
    <service id="SessionHandlerInterface" alias="session.handler" public="false"/>
    <service id="Symfony\Component\HttpFoundation\Session\Flash\FlashBagInterface" alias="session.flash_bag" public="false"/>
    <service id="session.storage.filesystem" alias="session.storage.mock_file" public="false"/>
    <service id="session.storage" alias="session.storage.native"/>
    <service id="Symfony\Component\Security\Csrf\TokenGenerator\TokenGeneratorInterface" alias="security.csrf.token_generator" public="false"/>
    <service id="Symfony\Component\Security\Csrf\TokenStorage\TokenStorageInterface" alias="security.csrf.token_storage" public="false"/>
    <service id="Symfony\Component\Security\Csrf\CsrfTokenManagerInterface" alias="security.csrf.token_manager" public="false"/>
    <service id="Symfony\Component\Asset\Packages" alias="assets.packages" public="false"/>
    <service id="Symfony\Component\Translation\Reader\TranslationReaderInterface" alias="translation.reader" public="false"/>
    <service id="Symfony\Component\Translation\Extractor\ExtractorInterface" alias="translation.extractor" public="false"/>
    <service id="Symfony\Component\Translation\Writer\TranslationWriterInterface" alias="translation.writer" public="false"/>
    <service id="translator" alias="translator.default" public="true"/>
    <service id="translator.formatter" alias="translator.formatter.default" public="false"/>
    <service id="cache.default_redis_provider" alias=".cache_connection.Jl101tm" public="false"/>
    <service id="cache.default_memcached_provider" alias=".cache_connection.JKE6keX" public="false"/>
    <service id="Symfony\Contracts\Cache\CacheInterface $appCacheApcu" alias="app.cache.apcu"/>
    <service id="Psr\Cache\CacheItemPoolInterface $appCacheApcu" alias="app.cache.apcu"/>
    <service id="Symfony\Contracts\Cache\CacheInterface $appCacheRedis" alias="app.cache.redis"/>
    <service id="Psr\Cache\CacheItemPoolInterface $appCacheRedis" alias="app.cache.redis"/>
    <service id="Symfony\Component\HttpKernel\Debug\FileLinkFormatter" alias="debug.file_link_formatter" public="false"/>
    <service id="Symfony\Component\Stopwatch\Stopwatch" alias="debug.stopwatch" public="false"/>
    <service id="router" alias="router.default" public="true"/>
    <service id="Symfony\Component\Routing\RouterInterface" alias="router.default" public="false"/>
    <service id="Symfony\Component\Routing\Generator\UrlGeneratorInterface" alias="router.default" public="false"/>
    <service id="Symfony\Component\Routing\Matcher\UrlMatcherInterface" alias="router.default" public="false"/>
    <service id="Symfony\Component\Routing\RequestContextAwareInterface" alias="router.default" public="false"/>
    <service id="Symfony\Component\Routing\RequestContext" alias="router.request_context" public="false"/>
    <service id="annotation_reader" alias="annotations.cached_reader"/>
    <service id="Doctrine\Common\Annotations\Reader" alias="annotations.cached_reader" public="false"/>
    <service id="Symfony\Component\PropertyAccess\PropertyAccessorInterface" alias="property_accessor" public="false"/>
    <service id="Symfony\Component\Security\Core\Authorization\AuthorizationCheckerInterface" alias="security.authorization_checker" public="false"/>
    <service id="Symfony\Component\Security\Core\Authentication\Token\Storage\TokenStorageInterface" alias="security.token_storage" public="false"/>
    <service id="Symfony\Component\Security\Core\Security" alias="security.helper" public="false"/>
    <service id="Symfony\Component\Security\Core\Authentication\AuthenticationManagerInterface" alias="security.authentication.manager" public="false"/>
    <service id="Symfony\Component\Security\Http\Session\SessionAuthenticationStrategyInterface" alias="security.authentication.session_strategy" public="false"/>
    <service id="security.encoder_factory" alias="security.encoder_factory.generic" public="false"/>
    <service id="Symfony\Component\Security\Core\Encoder\EncoderFactoryInterface" alias="security.encoder_factory.generic" public="false"/>
    <service id="security.password_encoder" alias="security.user_password_encoder.generic" public="true"/>
    <service id="Symfony\Component\Security\Core\Encoder\UserPasswordEncoderInterface" alias="security.user_password_encoder.generic" public="false"/>
    <service id="Symfony\Component\Security\Http\Authentication\AuthenticationUtils" alias="security.authentication_utils" public="false"/>
    <service id="Symfony\Component\Security\Core\Authorization\AccessDecisionManagerInterface" alias="debug.security.access.decision_manager" public="false"/>
    <service id="Symfony\Component\Security\Core\Role\RoleHierarchyInterface" alias="security.role_hierarchy" public="false"/>
    <service id="Symfony\Component\Security\Http\Firewall" alias="debug.security.firewall" public="false"/>
    <service id="Symfony\Component\Security\Http\HttpUtils" alias="security.http_utils" public="false"/>
    <service id="Symfony\Component\Security\Guard\GuardAuthenticatorHandler" alias="security.authentication.guard_handler" public="false"/>
    <service id="security.firewall" alias="debug.security.firewall" public="false"/>
    <service id="security.user.provider.concrete.admins" alias="App\Admin\Service\AdminUserProvider" public="false"/>
    <service id="security.user.provider.concrete.users" alias="App\Common\Service\UserProvider" public="false"/>
    <service id="security.authentication.session_strategy.admin" alias="security.authentication.session_strategy"/>
    <service id="security.user_checker.admin" alias="security.user_checker" public="false"/>
    <service id="security.authentication.session_strategy.main" alias="security.authentication.session_strategy"/>
    <service id="security.user_checker.main" alias="App\Common\Service\UserChecker" public="false"/>
    <service id="logger" alias="monolog.logger"/>
    <service id="Psr\Log\LoggerInterface" alias="monolog.logger" public="false"/>
    <service id="swiftmailer.mailer.mxhichina.transport" alias="swiftmailer.mailer.mxhichina.transport.spool"/>
    <service id="swiftmailer.mailer.mxhichina.spool" alias="swiftmailer.mailer.mxhichina.spool.file"/>
    <service id="swiftmailer.mailer.mxhichina.transport.real" alias="swiftmailer.mailer.mxhichina.transport.dynamic" public="true"/>
    <service id="swiftmailer.spool" alias="swiftmailer.mailer.mxhichina.spool.file"/>
    <service id="swiftmailer.transport.real" alias="swiftmailer.mailer.mxhichina.transport.dynamic"/>
    <service id="Swift_Spool" alias="swiftmailer.mailer.mxhichina.spool.file" public="false"/>
    <service id="swiftmailer.plugin.impersonate" alias="swiftmailer.mailer.mxhichina.plugin.impersonate"/>
    <service id="swiftmailer.mailer.plugin.antiflood" alias="swiftmailer.mailer.mxhichina.plugin.antiflood"/>
    <service id="swiftmailer.plugin.messagelogger" alias="swiftmailer.mailer.mxhichina.plugin.messagelogger"/>
    <service id="swiftmailer.mailer" alias="swiftmailer.mailer.mxhichina"/>
    <service id="swiftmailer.transport" alias="swiftmailer.mailer.mxhichina.transport.spool" public="true"/>
    <service id="Swift_Mailer" alias="swiftmailer.mailer.mxhichina" public="false"/>
    <service id="Swift_Transport" alias="swiftmailer.mailer.mxhichina.transport.spool" public="false"/>
    <service id="mailer" alias="swiftmailer.mailer.mxhichina" public="true"/>
    <service id="Twig_Environment" alias="twig" public="false"/>
    <service id="Twig\Environment" alias="twig" public="false"/>
    <service id="Endroid\QrCode\WriterRegistryInterface" alias="Endroid\QrCode\WriterRegistry" public="false"/>
    <service id="Endroid\QrCode\Factory\QrCodeFactoryInterface" alias="Endroid\QrCode\Factory\QrCodeFactory" public="false"/>
    <service id="simple_form.validator.custom.recaptcha" alias="App\Common\Validator\RecaptchaValidator" public="true"/>
    <service id="simple_form.validator.custom.verify_code" alias="App\Common\Validator\VerifyCodeValidator" public="true"/>
    <service id="League\Flysystem\Filesystem" alias="oneup_flysystem.identity_image_filesystem" public="true"/>
    <service id="argument_resolver.controller_locator" alias=".service_locator.h2m2aP."/>
    <service id="twig.loader.filesystem" alias="twig.loader.native_filesystem" public="false"/>
    <service id="twig.loader" alias="twig.loader.native_filesystem"/>
    <service id="event_dispatcher" alias="debug.event_dispatcher" public="true"/>
    <service id="controller_resolver" alias="debug.controller_resolver" public="false"/>
    <service id="argument_resolver" alias="debug.argument_resolver" public="false"/>
    <service id="security.access.decision_manager" alias="debug.security.access.decision_manager" public="false"/>
    <service id="argument_resolver.request_attribute" alias="debug.argument_resolver.request_attribute" public="false"/>
    <service id="argument_resolver.request" alias="debug.argument_resolver.request" public="false"/>
    <service id="argument_resolver.session" alias="debug.argument_resolver.session" public="false"/>
    <service id="security.user_value_resolver" alias="debug.security.user_value_resolver" public="false"/>
    <service id="argument_resolver.service" alias="debug.argument_resolver.service" public="false"/>
    <service id="argument_resolver.default" alias="debug.argument_resolver.default" public="false"/>
    <service id="argument_resolver.variadic" alias="debug.argument_resolver.variadic" public="false"/>
    <service id="security.access.authenticated_voter" alias="debug.security.voter.security.access.authenticated_voter" public="false"/>
    <service id="security.access.role_hierarchy_voter" alias="debug.security.voter.security.access.role_hierarchy_voter" public="false"/>
  </services>
</container>
