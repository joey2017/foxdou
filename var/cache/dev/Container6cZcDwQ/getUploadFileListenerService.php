<?php

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

// This file has been auto-generated by the Symfony Dependency Injection Component for internal use.
// Returns the private 'App\Common\Service\FileUpload\UploadFileListener' shared autowired service.

include_once $this->targetDirs[3].'\\vendor\\symfony\\contracts\\Service\\ServiceSubscriberTrait.php';
include_once $this->targetDirs[3].'\\src\\Common\\Service\\BaseService.php';
include_once $this->targetDirs[3].'\\src\\Common\\Service\\FileUpload\\UploadFileListener.php';

$this->privates['App\Common\Service\FileUpload\UploadFileListener'] = $instance = new \App\Common\Service\FileUpload\UploadFileListener(($this->privates['monolog.logger'] ?? $this->getMonolog_LoggerService()), ($this->privates['parameter_bag'] ?? ($this->privates['parameter_bag'] = new \Symfony\Component\DependencyInjection\ParameterBag\ContainerBag($this))), ($this->services['security.token_storage'] ?? ($this->services['security.token_storage'] = new \Symfony\Component\Security\Core\Authentication\Token\Storage\TokenStorage())), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));

$instance->setContainer(($this->privates['.service_locator.fleq5MM'] ?? $this->load('get_ServiceLocator_Fleq5MMService.php'))->withContext('App\\Common\\Service\\FileUpload\\UploadFileListener', $this));

return $instance;
