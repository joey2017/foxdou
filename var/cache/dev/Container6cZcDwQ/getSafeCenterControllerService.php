<?php

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

// This file has been auto-generated by the Symfony Dependency Injection Component for internal use.
// Returns the public 'App\Passport\Controller\SafeCenterController' shared autowired service.

include_once $this->targetDirs[3].'\\vendor\\symfony\\framework-bundle\\Controller\\ControllerTrait.php';
include_once $this->targetDirs[3].'\\vendor\\symfony\\framework-bundle\\Controller\\AbstractController.php';
include_once $this->targetDirs[3].'\\src\\Common\\Controller\\BaseController.php';
include_once $this->targetDirs[3].'\\src\\Passport\\Controller\\PassportBaseController.php';
include_once $this->targetDirs[3].'\\src\\Passport\\Controller\\SafeCenterController.php';
include_once $this->targetDirs[3].'\\vendor\\symfony\\contracts\\Service\\ServiceSubscriberTrait.php';
include_once $this->targetDirs[3].'\\src\\Common\\Service\\BaseService.php';
include_once $this->targetDirs[3].'\\src\\Passport\\Service\\UserPasswordService.php';

$a = new \App\Passport\Service\UserPasswordService(($this->services['session'] ?? $this->getSessionService()));
$a->setContainer(($this->privates['.service_locator.fleq5MM'] ?? $this->load('get_ServiceLocator_Fleq5MMService.php'))->withContext('App\\Passport\\Service\\UserPasswordService', $this));

$this->services['App\Passport\Controller\SafeCenterController'] = $instance = new \App\Passport\Controller\SafeCenterController(($this->privates['monolog.logger'] ?? $this->getMonolog_LoggerService()), ($this->privates['App\Passport\Service\EmailMsgNoticeService'] ?? $this->load('getEmailMsgNoticeServiceService.php')), ($this->privates['App\Passport\Service\MobileMsgNoticeService'] ?? $this->load('getMobileMsgNoticeServiceService.php')), $a);

$instance->setContainer(($this->privates['.service_locator.0ACZ0gT'] ?? $this->load('get_ServiceLocator_0ACZ0gTService.php'))->withContext('App\\Passport\\Controller\\SafeCenterController', $this));

return $instance;
